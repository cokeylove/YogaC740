C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_SCANTABS
OBJECT MODULE PLACED IN Code\OEM\OEM_SCANTABS.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\OEM\OEM_SCANTABS.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\COR
                    -E\INCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------
   2           * TITLE: OEM_SCANTABS.C - RC Table(s) for Scan Matix
   3           *
   4           * Copyright (c) 1983-2007, Insyde Software Corporation. All Rights Reserved.
   5           *
   6           * You may not reproduce, distribute, publish, display, perform, modify, adapt,
   7           * transmit, broadcast, present, recite, release, license or otherwise exploit
   8           * any part of this publication in any form, by any means, without the prior
   9           * written permission of Insyde Software Corporation.
  10           *----------------------------------------------------------------*/
  11          
  12          #include <CORE_INCLUDE.H>
  13          #include <OEM_INCLUDE.H>
  14          
  15          const unsigned char code Rc_ROM_Tables[] =
  16          {       // 15" US,UK and JP
  17              // Scanner Table 1  - 16 x 8 Scan Table 
  18              //00   01    02    03     04    05     06    07     08    09    10    11     12    13    14    15
  19                  0x76,0xE3,0x61,0x00,0x34,0xFF,0xE5,0x64,0x52,0x00,0xE4,0x00,0x8A,0x00,0xED,0x00, // 00  
  20                  0x0D,0xE2,0x58,0x00,0x2C,0x35,0x5B,0xE6,0x54,0x88,0x66,0x00,0x00,0x77,0x00,0x00, // 01  //72JERRY082: Mod
             -ify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
  21                  0xFE,0x24,0x1D,0x00,0x2D,0x3C,0x43,0x44,0xF9,0x00,0x6A,0x00,0xF2,0x00,0x00,0x82, // 02  
  22                  0x0E,0xE1,0xE0,0x8C,0x2E,0x36,0x55,0xE7,0x4E,0x00,0xE8,0x91,0x00,0xF0,0xF4,0xF6, // 03  //LMLNANO002:chan
             -ge [3,11] from 0xF2 to 0x00, [3,13] from 0xF3 to 0x00, [3,15] from 0xF5 to 0xF6.
  23                  0x1C,0x23,0xFB,0x00,0x2B,0x3B,0x42,0x4B,0x4C,0x00,0x5D,0x00,0x00,0x00,0x8E,0x84, // 04  //72JERRY082: Mod
             -ify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
  24                  0x16,0x26,0x1E,0x00,0x25,0x3D,0x3E,0x46,0x45,0x00,0xE9,0xEA,0xF3,0xEB,0x00,0xF7, // 05  //LMLNANO002:chan
             -ge [5,14] from 0xF7 to 0x00, [5,15] from 0xF6 to 0xF7.
  25                  0x1A,0xFA,0x22,0x8D,0x2A,0x3A,0x41,0x49,0x5D,0x89,0x5A,0x00,0x00,0x00,0xF0,0x00, // 06  
  26                  0x67,0x00,0x00,0x00,0xF8,0xFC,0x51,0x13,0x4A,0x00,0xFD,0xEE,0x8B,0xEC,0xEF,0x00, // 07  
  27          //------------------------------------------------------------------------------------
  28          //       00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  29          //------------------------------------------------------------------------------------
  30          // 0- 110  115   45     x     35    36    117  132   41     x    116     x     60     x      83    x
  31          // 1-  16   114   30    x      21    22    28    118   27    44    15     x      x      90     x     x
  32          // 2-  17    19    18    x      20    23    24    25    26     x     14      x     125   x      x     127
  33          // 3-   1    113  112   58     6      7     13   119   12     x    120    126   x       x     80    81
  34          // 4-  31    33    32    x      34    37    38    39    40     x     29     x      x       x     59    129
  35          // 5-   2      4     3      x       5      8      9    10    11     x    121   122   124  123    x     85
  36          // 6-  46    48    47   64     49    52    53    54    42    57    43     x      x       x     76     x
  37          // 7- 131    x     x      x      50    51    56   133    55     x     61    84     62    89    79     x
  38          //------------------------------------------------------------------------------------
  39          //------------------------------------------------------------------------------------
  40          //      00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  41          //------------------------------------------------------------------------------------
  42          // 0- Esc   F4    \|     x      G      H     F6   132    '"      x     F5     x     LAlt   x     UpAr   x
  43          // 1- Tab   F3  Caps   x      T      Y     ]}    F7     [{   LShf  Back   x     x    Nums   x      x
  44          // 2-  Q     E    W      x       R     U      I      O      P      x ¢F14     x     Del    x       x    LW
             -in
  45          // 3- `~    F2   F1    LCtr   5%   6^   +=   F8     -_     x     F9    126   x      x     Play   Prev
  46          // 4-  A     D    S      x        F     J       K     L      ;:      x     \|     x      x      x      Fn 
             -   129
  47          // 5-  1!   3#  2@    x       4$    7&   8*    9(     0)      x    F10   F11   PrSc  F12    x    Next
  48          // 6-  Z     C    X     RCtr    V     M     ,<    .>     #~  RShf  Entr   x      x      x      Ins    x
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 2   

  49          // 7- 131   x    x      x       B      N     56   133   /?     x    Spce  DnAr RAlt  RiAr  LeAr   x
  50          //------------------------------------------------------------------------------------
  51          };
  52          
  53          const unsigned char code Rc_ROM_Tables_15BR[] =
  54          {       // 15" Brazil
  55              // Scanner Table 1  - 16 x 8 Scan Table
  56              //00   01    02    03     04     05    06    07    08    09    10     11    12    13     14    15
  57                  0x76,0xE3,0x61,0x00,0x34,0xFF,0xE5,0x64,0x52,0x00,0xE4,0x00,0x8A,0x00,0xED,0x00, // 00 
  58                  0x0D,0xE2,0x58,0x00,0x2C,0x35,0x5B,0xE6,0x54,0x88,0x66,0x00,0x00,0x77,0x00,0x00, // 01  //72JERRY082: Mod
             -ify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
  59                  0xFE,0x24,0x1D,0x00,0x2D,0x3C,0x43,0x44,0xF9,0x00,0x6A,0x00,0xF2,0x00,0x00,0x82, // 02  
  60                  0x0E,0xE1,0xE0,0x8C,0x2E,0x36,0x55,0xE7,0x4E,0x00,0xE8,0x91,0x00,0xF0,0xF4,0xF6, // 03   //LMLNANO002:cha
             -nge [3,11] from 0xF2 to 0x00, [3,13] from 0xF3 to 0x00, [3,15] from 0xF5 to 0xF6.
  61                  0x1C,0x23,0xFB,0x00,0x2B,0x3B,0x42,0x4B,0x4C,0x00,0x5D,0x00,0x00,0x00,0x8E,0x84, // 04  //72JERRY082: Mod
             -ify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
  62                  0x16,0x26,0x1E,0x00,0x25,0x3D,0x3E,0x46,0x45,0x00,0xE9,0xEA,0xF3,0xEB,0x00,0xF7, // 05  //LMLNANO002:chan
             -ge [5,14] from 0xF7 to 0x00, [5,15] from 0xF6 to 0xF7.  
  63                  0x1A,0xFA,0x22,0x51,0x2A,0x3A,0x41,0x49,0x5D,0x89,0x5A,0x00,0x00,0x00,0xF0,0x00, // 06 
  64                  0x67,0x00,0x00,0x00,0xF8,0xFC,0x00,0x13,0x4A,0x00,0xFD,0xEE,0x8B,0xEC,0xEF,0x00, // 07
  65          //------------------------------------------------------------------------------------
  66          //        00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  67          //------------------------------------------------------------------------------------
  68          // 0-  110   115   45    x     35    36   117   132   41     x    116    x     60     x      83    x
  69          // 1-  16    114    30    x     21    22    28   118   27     44   15     x      x      90     x     x
  70          // 2-  17     19    18     x     20    23    24    25    26     x    14      x    125    x       x    127
  71          // 3-   1     113  112   58     6     7      13   119   12     x    120   126   x       x      80   81
  72          // 4-  31     33     32    x     34    37    38    39    40     x    29      x      x      x      59   129
  73          // 5-   2       4      3     x       5     8       9    10    11     x    121  122   124   123    x     85
  74          // 6-  46     48    47    56    49    52    53    54    42     57   43     x      x      x      76     x
  75          // 7- 131     x      x     x      50    51    x    133    55     x     61    84    62    89     79     x
  76          //------------------------------------------------------------------------------------
  77          //------------------------------------------------------------------------------------
  78          //       00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
  79          //------------------------------------------------------------------------------------
  80          // 0- Esc    F4     \|    x      G     H      F6   132    '"     x      F5     x     LAlt   x     UpAr   x
  81          // 1- Tab   F3   Caps   x      T     Y      ]}    F7     [{   LShf  Back   x      x    Nums   x     x
  82          // 2-  Q     E      W     x      R     U       I     O      P      x  ¢F14     x     Del    x       x    L
             -Win
  83          // 3- `~    F2    F1   LCtr   5%   6^    +=   F8     -_    x      F9    126    x      x     Play  Prev
  84          // 4-  A     D      S      x      F     J       K     L       ;:     x      \|      x      x      x      F
             -n   129
  85          // 5-  1!   3#    2@    x     4$    7&    8*    9(     0)     x      F10  F11   PrSc  F12     x   Next
  86          // 6-  Z     C      X     56     V     M      ,<    .>     #~  RShf   Entr   x      x      x      Ins   x 
  87          // 7- 131   x      x      x      B     N      x    133    /?    x      Spce DnAr RAlt  RiAr   LeAr  x
  88          //------------------------------------------------------------------------------------
  89          };
  90          
  91          const unsigned char code EtKey_ROM_Tables[] =
  92          {       //16   17   18          // 19X8 Scan Table
  93                  0x6C,0x90,0x00,
  94                  0x6B,0x75,0x00,
  95                  0x7D,0x7B,0x00,  
  96                  0x74,0x79,0x00, 
  97                  0x69,0x73,0x00,
  98                  0x70,0x72,0x00,
  99                  0x7C,0x81,0x00,
 100                  0x7A,0x71,0x00,
 101          //------------------
 102          //     16    17    18
 103          //------------------
 104          // 0- 91    95    x
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 3   

 105          // 1- 92    96    x
 106          // 2- 101  105   x
 107          // 3- 102  106   x
 108          // 4- 93    97    x
 109          // 5- 99    98    x
 110          // 6- 100  108   x
 111          // 7- 103  104   x
 112          //------------------
 113          //------------------
 114          //     16   17   18
 115          //------------------
 116          // 0- 7    /      x
 117          // 1- 4    8      x
 118          // 2- 9    -      x
 119          // 3- 6    +      x
 120          // 4- 1    5      x
 121          // 5- 0    2      x
 122          // 6- *   Enter  x
 123          // 7- 3    .       x
 124          //------------------
 125          };
 126          
 127          const unsigned char code Rc_ROM_Tables_14[] =
 128          {       // 14" US, UK and JP.
 129              // Scanner Table 1  - 16 x 8 Scan Table
 130               //00   01    02    03     04    05     06    07     08    09    10    11     12    13    14    15
 131                  0x76,0xE3,0x61,0x00,0x34,0xFF,0xE5,0x64,0x52,0x00,0xE4,0x00,0x8A,0x00,0xED,0x00, // 00  
 132                  0x0D,0xE2,0x58,0x00,0x2C,0x35,0x5B,0xE6,0x54,0x88,0x66,0x00,0x00,0x77,0x00,0x00, // 01  //72JERRY082: Mod
             -ify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
 133                  0xFE,0x24,0x1D,0x00,0x2D,0x3C,0x43,0x44,0xF9,0x00,0x6A,0x00,0xF2,0x00,0x00,0x82, // 02  
 134                  0x0E,0xE1,0xE0,0x8C,0x2E,0x36,0x55,0xE7,0x4E,0x00,0xE8,0x91,0x00,0xF0,0xF4,0xF6, // 03  //LMLNANO002:chan
             -ge [3,11] from 0xF2 to 0x00, [3,13] from 0xF3 to 0x00, [3,15] from 0xF5 to 0xF6.
 135                  0x1C,0x23,0xFB,0x00,0x2B,0x3B,0x42,0x4B,0x4C,0x00,0x5D,0x00,0x00,0x00,0x8E,0x84, // 04  //72JERRY082: Mod
             -ify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
 136                  0x16,0x26,0x1E,0x00,0x25,0x3D,0x3E,0x46,0x45,0x00,0xE9,0xEA,0xF3,0xEB,0x00,0xF7, // 05  //LMLNANO002:chan
             -ge [5,14] from 0xF7 to 0x00, [5,15] from 0xF6 to 0xF7.
 137                  0x1A,0xFA,0x22,0x8D,0x2A,0x3A,0x41,0x49,0x5D,0x89,0x5A,0x00,0x00,0x00,0xF0,0x00, // 06  
 138                  0x67,0x00,0x00,0x00,0xF8,0xFC,0x51,0x13,0x4A,0x00,0xFD,0xEE,0x8B,0xEC,0xEF,0x00,  
 139          //------------------------------------------------------------------------------------
 140          //       00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
 141          //------------------------------------------------------------------------------------
 142          // 0- 110  115    45    x     35    36   117   132   41     x    116    x     60     x     83    x
 143          // 1-  16   114    30    x     21    22    28   118   27     44    15    x      x      x      x     x
 144          // 2-  17   19     18     x     20    23    24    25    26     x     14     x     x      x      x    127
 145          // 3-   1   113   112   58     6      7     13   119   12     x    120   126   x      x      x    81
 146          // 4-  31   33     32     x     34    37    38    39    40     x     29     x     x      x      59   129
 147          // 5-   2    4       3      x      5      8      9     10    11     x    121   122  124  123   86    85
 148          // 6-  46   48     47    64    49   52     53    54    42    57    43     x     x      x      76     x
 149          // 7- 131   x      x      x     50    51    56    133   55     x    61     84   62     89    79     x
 150          //------------------------------------------------------------------------------------
 151          //------------------------------------------------------------------------------------
 152          //       00    01    02    03    04    05    06    07    08    09    0A    0B    0C    0D    0E    0F
 153          //------------------------------------------------------------------------------------
 154          // 0- Esc    F4    \|     x      G      H    F6    132    '"     x      F5     x     LAlt    x    UpAr  x
 155          // 1- Tab   F3  Caps   x       T      Y    ]}     F7     [{   LShf  Back   x      x      x      x      x
 156          // 2-  Q      E     W     x      R      U     I      O       P     x      14     x       x     x      x   
             -  LWin
 157          // 3- `~    F2    F1   LCtr   5%   6^   +=    F8     -_    x      F9    126    x      x     x      x
 158          // 4-  A      D     S     x       F      J     K      L       ;:     x      \|     x       x      x     Fn
             -    129
 159          // 5-  1!   3#   2@    x      4$    7&   8*    9(      0)     x     F10   F11   PrSc  F12   x      x
 160          // 6-  Z     C      X   RCtr    V      M    ,<    .>      #~  RShf  Entr   x       x     x     Del     x
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 4   

 161          // 7- 131   x      x     x      B       N    56   133    /?    x     Spce  DnAr RAlt  RiAr  LeAr   x
 162          //------------------------------------------------------------------------------------
 163          };
 164          
 165          const unsigned char code Rc_ROM_Tables_14BR[] =
 166          {       // 14" Brazil
 167              // Scanner Table 1  - 16 x 8 Scan Table
 168               //00   01    02    03     04    05     06    07     08    09    10    11     12    13    14    15
 169                  0x76,0xE3,0x61,0x00,0x34,0xFF,0xE5,0x64,0x52,0x00,0xE4,0x00,0x8A,0x00,0xED,0x00, // 00  
 170                  0x0D,0xE2,0x58,0x00,0x2C,0x35,0x5B,0xE6,0x54,0x88,0x66,0x00,0x00,0x77,0x00,0x00, // 01  //72JERRY082: Mod
             -ify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
 171                  0xFE,0x24,0x1D,0x00,0x2D,0x3C,0x43,0x44,0xF9,0x00,0x6A,0x00,0xF2,0x00,0x00,0x82, // 02  
 172                  0x0E,0xE1,0xE0,0x8C,0x2E,0x36,0x55,0xE7,0x4E,0x00,0xE8,0x91,0x00,0xF0,0xF4,0xF6, // 03  //LMLNANO002:chan
             -ge [3,11] from 0xF2 to 0x00, [3,13] from 0xF3 to 0x00, [3,15] from 0xF5 to 0xF6.
 173                  0x1C,0x23,0xFB,0x00,0x2B,0x3B,0x42,0x4B,0x4C,0x00,0x5D,0x00,0x00,0x00,0x8E,0x84, // 04  //72JERRY082: Mod
             -ify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
 174                  0x16,0x26,0x1E,0x00,0x25,0x3D,0x3E,0x46,0x45,0x00,0xE9,0xEA,0xF3,0xEB,0x00,0xF7, // 05  //LMLNANO002:chan
             -ge [5,14] from 0xF7 to 0x00, [5,15] from 0xF6 to 0xF7.
 175                  0x1A,0xFA,0x22,0x51,0x2A,0x3A,0x41,0x49,0x5D,0x89,0x5A,0x00,0x00,0x00,0xF0,0x00, // 06  
 176                  0x67,0x00,0x00,0x00,0xF8,0xFC,0x00,0x13,0x4A,0x00,0xFD,0xEE,0x8B,0xEC,0xEF,0x00, 
 177          };
 178          
 179          const unsigned char code EtKey_ROM_Tables_1[] =
 180          {       //16   17   18          // 19X8 Scan Table
 181                  0x00,0x00,0x00,
 182                  0x00,0x00,0x00,
 183                  0x00,0x00,0x00,
 184                  0x00,0x00,0x00,
 185                  0x00,0x00,0x00,
 186                  0x00,0x00,0x00,
 187                  0x00,0x00,0x00,
 188                  0x00,0x00,0x00,
 189          };
 190          
 191          
 192          const unsigned char code KB_S3WakeUP_Tables[] =
 193          {
 194              // Scanner Table 1
 195                  //00   01   02   03   04   05   06   07   08   09   10   11   12   13   14   15
 196                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 197                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 198                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 199                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 200                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 201                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 202                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, //
 203                  0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55  //
 204          };
 205          
 206          const unsigned char code EtKey_S3WakeUP_Tables[] =
 207          {       //16   17   18          // 19X8 Scan Table
 208                  0x55,0x55,0x55,
 209                  0x55,0x55,0x55,
 210                  0x55,0x55,0x55,
 211                  0x55,0x55,0x55,
 212                  0x55,0x55,0x55,
 213                  0x55,0x55,0x55,
 214                  0x55,0x55,0x55,
 215                  0x55,0x55,0x55,
 216          };
 217          
 218          //----------------------------------------------------------------------------
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 5   

 219          // The function of hotkey Fn + F1
 220          //----------------------------------------------------------------------------
 221          void HotKey_Fn_F1(BYTE event)
 222          {
 223   1              //MUTE
 224   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))//: REMOVE MBID_READY judge
 225   1              {
 226   2                      if ( event == MAKE_EVENT )
 227   2                      {
 228   3                          Buffer_Key(0xE0);   /* Buffer E0h prefix */
 229   3                          Buffer_Key(0x23);   /* Buffer base code */
 230   3                      }
 231   2                      else
 232   2                      {
 233   3                              if ( event == BREAK_EVENT )
 234   3                              {
 235   4                              Buffer_Key(0xE0);       /* Buffer E0h prefix */
 236   4                              Buffer_Key(0xF0);       /* Buffer base code */
 237   4                              Buffer_Key(0x23);       /* Buffer base code */
 238   4                              }
 239   3                      }
 240   2              }
 241   1      }
 242          
 243          //----------------------------------------------------------------------------
 244          // The function of hotkey Fn + F2
 245          //----------------------------------------------------------------------------
 246          void HotKey_Fn_F2(BYTE event)
 247          {
 248   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))// : REMOVE MBID_READY judge
 249   1              {
 250   2                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 251   2                      {
 252   3                              Buffer_Key(0xE0);       /* Buffer E0h prefix */
 253   3                              Buffer_Key(0x21);       /* Buffer base code */
 254   3                      }
 255   2                      else
 256   2                      {
 257   3                              if (event == BREAK_EVENT)
 258   3                              {
 259   4                                      Buffer_Key(0xE0);       /* Buffer E0h prefix */
 260   4                                      Buffer_Key(0xF0);       /* Buffer E0h prefix */
 261   4                                      Buffer_Key(0x21);       /* Buffer base code */
 262   4                              } 
 263   3                      }
 264   2               }
 265   1      }
 266          
 267          //----------------------------------------------------------------------------
 268          // The function of hotkey Fn + F3
 269          //----------------------------------------------------------------------------
 270          void HotKey_Fn_F3(BYTE event)
 271          {
 272   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))//// : REMOVE MBID_READY judge
 273   1              {
 274   2                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 275   2                      {
 276   3                              Buffer_Key(0xE0);       /* Buffer E0h prefix */
 277   3                              Buffer_Key(0x32);       /* Buffer base code */
 278   3                      }
 279   2                      else
 280   2                      {
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 6   

 281   3                              if (event == BREAK_EVENT)
 282   3                              {
 283   4                                      Buffer_Key(0xE0);       /* Buffer E0h prefix */
 284   4                                      Buffer_Key(0xF0);       /* Buffer E0h prefix */
 285   4                                      Buffer_Key(0x32);       /* Buffer base code */  
 286   4                              }
 287   3                      } 
 288   2              }  
 289   1      }
 290          
 291          //----------------------------------------------------------------------------
 292          // The function of hotkey Fn + F4
 293          //----------------------------------------------------------------------------
 294          void HotKey_Fn_F4(BYTE event)
 295          {
 296   1              //MEILING029:S+ add send QEvent to APP for mic function.
 297   1              if(event == MAKE_EVENT)
 298   1          {
 299   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 300   2                      {
 301   3                      uVPCeventSource = 0;
 302   3                          uVPCeventSource2 = App_Control_Mic;
 303   3                              ECSMI_SCIEvent(SDV_VPC_notify);     
 304   3                      }
 305   2          }
 306   1              //MEILING029:E+.
 307   1              
 308   1              //MEILING029:S- remove send scan code to driver for mic function.
 309   1              //MEILING018:S+ add Mic enable/disable function.
 310   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 311   1              {
 312   1                      
 313   1                      if (event == MAKE_EVENT)
 314   1                      {       
 315   1                              Buffer_Key(0xE0);       
 316   1                              Buffer_Key(0x53);
 317   1                      }
 318   1              }*/
 319   1              //MEILING018:E+.
 320   1              //MEILING029:E-.
 321   1              
 322   1              //MEILING006: S- remove close current window function.
 323   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 324   1               {
 325   1                      if (event == MAKE_EVENT)
 326   1                      {       
 327   1                              Buffer_Key(0x11);       // ALT  
 328   1                              Buffer_Key(0x0C);       // F4 
 329   1                       }
 330   1                      else
 331   1                      {
 332   1                              if (event == BREAK_EVENT)
 333   1                              {
 334   1                                      Buffer_Key(0xF0);       
 335   1                                      Buffer_Key(0x11);       
 336   1                                      Buffer_Key(0xF0);       
 337   1                                      Buffer_Key(0x0C);       
 338   1                              }
 339   1                      }
 340   1              }*/
 341   1              //MEILING006: E-.
 342   1      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 7   

 343          
 344          //----------------------------------------------------------------------------
 345          // The function of hotkey Fn + F5
 346          //----------------------------------------------------------------------------
 347          void HotKey_Fn_F5(BYTE event)
 348          {
 349   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 350   1              {
 351   2                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 352   2                      {
 353   3                              Buffer_Key(0x03);
 354   3                      }
 355   2                      else
 356   2                      {       
 357   3                              if((event == BREAK_EVENT))
 358   3                              {
 359   4                                      Buffer_Key(0xF0);
 360   4                                      Buffer_Key(0x03);
 361   4                              }
 362   3                      }
 363   2              }  
 364   1      }
 365          
 366          //----------------------------------------------------------------------------
 367          // The function of hotkey Fn + F6
 368          //----------------------------------------------------------------------------
 369          void HotKey_Fn_F6(BYTE event)
 370          //TP enable/disable
 371          {
 372   1      
 373   1      //72JERRY056:s+Add enable/disable TP function by HW pin.
 374   1              if  (IS_MASK_SET(SYS_MISC1, ACPI_OS))
 375   1              {
 376   2                      if(event == MAKE_EVENT)
 377   2                              {
 378   3                              if(READ_EC_TP_ON())
 379   3                                      {
 380   4                                      EC_TP_ON_LOW();
 381   4                                      SET_MASK(pDevStatus1, b7DisableTP);
 382   4                                      }
 383   3                              else
 384   3                                      {
 385   4                                      EC_TP_ON_HI();
 386   4                                      CLEAR_MASK(pDevStatus1, b7DisableTP);
 387   4                                      }
 388   3      
 389   3                              }
 390   2                              uVPCeventSource = TouchPad;
 391   2                              uVPCeventSource2 = 0;
 392   2                              ECQEvent(SDV_VPC_notify);
 393   2      
 394   2                      
 395   2                      }
 396   1      //72JERRY056:e+Add enable/disable TP function by HW pin.
 397   1                      
 398   1              /*if ( (IS_MASK_SET(SYS_MISC1, ACPI_OS)) && (TouchPadCount == 0))
 399   1              {
 400   1         
 401   1                      if(event == MAKE_EVENT)
 402   1                      {
 403   1                              if(IS_MASK_SET(pDevStatus1,b5TPDRIVER_STATUS)) 
 404   1                              {
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 8   

 405   1                                        if(IS_MASK_SET(pDevStatus1,b7DisableTP)) 
 406   1                                        {
 407   1                                              CLEAR_MASK(pDevStatus1,b1F6DisableTP);
 408   1                                              ECSMI_SCIEvent(0x3E);
 409   1                                              SET_MASK(pDevStatus3,b6EnDisTPSend); 
 410   1                                              if(IS_MASK_SET(pDevStatus1,b7DisableTP))
 411   1                                              {
 412   1                                                 SET_MASK(pDevStatus3,b7TPStateFormer);
 413   1                                              }
 414   1                                              else
 415   1                                              {
 416   1                                                 CLEAR_MASK(pDevStatus3,b7TPStateFormer);
 417   1                                              }                                               
 418   1                                       }
 419   1                                       else  //Disable TP
 420   1                                       {
 421   1                                               SET_MASK(pDevStatus1,b1F6DisableTP);
 422   1                                               ECSMI_SCIEvent(0x3F);
 423   1                                               SET_MASK(pDevStatus3,b6EnDisTPSend); 
 424   1                                               if(IS_MASK_SET(pDevStatus1,b7DisableTP))
 425   1                                               {
 426   1                                                      SET_MASK(pDevStatus3,b7TPStateFormer);
 427   1                                               }
 428   1                                               else
 429   1                                               {
 430   1                                                      CLEAR_MASK(pDevStatus3,b7TPStateFormer);
 431   1                                               }                      
 432   1                                       }      
 433   1                              }
 434   1      
 435   1                      }
 436   1      //ANGELAG008: add end
 437   1          }*/////72JERRY009:- Modify TP enable/disable function for Windows Precision Touchpads.
 438   1      //72JERRY009:s+ Modify TP enable/disable function for Windows Precision Touchpads.
 439   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 440   1          {
 441   1      
 442   1                      if (event == MAKE_EVENT)
 443   1                      {
 444   1                              
 445   1                              Buffer_Key(0x14); //"Ctrl" key
 446   1                              
 447   1                              Buffer_Key(0xe0); //
 448   1                              Buffer_Key(0x1f); //"win" key
 449   1                              
 450   1                              Buffer_Key(0x5F); //"F24" key
 451   1      
 452   1                      }
 453   1                      else
 454   1                      {
 455   1                              if (event == BREAK_EVENT)
 456   1                              {
 457   1                                      
 458   1                                      Buffer_Key(0xF0);
 459   1                                      Buffer_Key(0x14);
 460   1                                      Buffer_Key(0xe0);
 461   1                                      Buffer_Key(0xf0);
 462   1                                      Buffer_Key(0x1f);
 463   1                                      Buffer_Key(0xF0);
 464   1                                      Buffer_Key(0x5F);
 465   1                                      
 466   1                              }
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 9   

 467   1                              //72JERRY043:s+Support PTP TP show OSD,there isn't driver notify EC TP status,EC keep flag to rom.
 468   1                               eEEPROMData=Read_Eflash_Byte(EEPROMA2,(EEPROMA1_B03|0x07),0xE2);
 469   1                               if(eEEPROMData==0xff)
 470   1                                      {
 471   1                                      pDevStatus1=0;
 472   1                                      }
 473   1                               else
 474   1                                      {
 475   1                                      pDevStatus1=eEEPROMData;
 476   1                                      }
 477   1                               
 478   1                              CPL_MASK(pDevStatus1, b7DisableTP);
 479   1      
 480   1                              eEEPROMBank= 0x07;
 481   1                      eEEPROMAddrsss = 0xE2;
 482   1                      eEEPROMData = pDevStatus1;
 483   1                      Update_EEPROMMark();
 484   1                              if(uReserve07.fbit.nVPCDriverIn==1)   // Check VPC driver
 485   1                              {
 486   1                                uVPCeventSource = TouchPad;
 487   1                                uVPCeventSource2 = 0;
 488   1                                ECQEvent(SDV_VPC_notify);
 489   1                                //72JERRY043:e+Support PTP TP show OSD,there isn't driver notify EC TP status,EC keep flag to rom.
 490   1                      }
 491   1                      }
 492   1              
 493   1              }
 494   1              //72JERRY009:e+ Modify TP enable/disable function for Windows Precision Touchpads.
 495   1              *///72JERRY051:Remove 72JERRY043 solution for PTP TP enable/disable.
 496   1      }
 497          
 498          //----------------------------------------------------------------------------
 499          // The function of hotkey Fn + F7
 500          //----------------------------------------------------------------------------
 501          void HotKey_Fn_F7(BYTE event)
 502          {
 503   1              //MEILING018:S+ add airplane fuciton.
 504   1              //MEILING006: S-remove airplane fuciton.
 505   1          if(event == MAKE_EVENT)
 506   1          {
 507   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 508   2                      {
 509   3                      uVPCeventSource = 0;
 510   3                          uVPCeventSource2 = App_Control_RF;
 511   3                              ECSMI_SCIEvent(SDV_VPC_notify);     
 512   3                              //ECSMI_SCIEvent(F7_Airplan_notify); 
 513   3                      }
 514   2          }
 515   1          //MEILING006: E-.
 516   1          //MEILING018:E+.
 517   1      }
 518          
 519          //----------------------------------------------------------------------------
 520          // The function of hotkey Fn + F8
 521          //----------------------------------------------------------------------------
 522          void HotKey_Fn_F8(BYTE event)
 523          {
 524   1              //MEILING029:S+ add camera enable/disable function.
 525   1              if(event == MAKE_EVENT)
 526   1          {
 527   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 528   2                      {
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 10  

 529   3                      nCameraPwrCHG;
 530   3                          uVPCeventSource = Camera;
 531   3                          uVPCeventSource2 = 0;
 532   3                              ECSMI_SCIEvent(SDV_VPC_notify);
 533   3                              CPL_MASK(pDevStus, pCamera);   
 534   3                      }
 535   2          }
 536   1              //MEILING029:E+.
 537   1              
 538   1              //MEILING018:S- remove airplane fuciton.
 539   1              //MEILING006: S+ add airplane fuciton.
 540   1          /*if(event == MAKE_EVENT)
 541   1              {
 542   1                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 543   1                      {
 544   1                      uVPCeventSource = 0;
 545   1                          uVPCeventSource2 = App_Control_RF;
 546   1                              ECSMI_SCIEvent(SDV_VPC_notify);     
 547   1                              //ECSMI_SCIEvent(F7_Airplan_notify); 
 548   1                      }
 549   1              }*/
 550   1          //MEILING006: E+.
 551   1          //MEILING018:E-.
 552   1      
 553   1              //MEILING006: S- remove view app function.
 554   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 555   1              {
 556   1                      if (event == MAKE_EVENT)
 557   1                      {
 558   1                              Buffer_Key(0x14);        
 559   1                      Buffer_Key(0x11);        
 560   1                      Buffer_Key(0x0D);       
 561   1                      }
 562   1                      else
 563   1                      {
 564   1                              if (event == BREAK_EVENT)
 565   1                              {
 566   1                                      Buffer_Key(0xF0);
 567   1                                      Buffer_Key(0x14);
 568   1                                      Buffer_Key(0xF0);
 569   1                                      Buffer_Key(0x11);
 570   1                                      Buffer_Key(0xF0);
 571   1                                      Buffer_Key(0x0D);
 572   1                              }
 573   1                      }
 574   1               }*/
 575   1               //MEILING006: E-.
 576   1      }
 577          
 578          //----------------------------------------------------------------------------
 579          // The function of hotkey Fn + F9
 580          //----------------------------------------------------------------------------
 581          void HotKey_Fn_F9(BYTE event)
 582          {
 583   1              //MEILING018:S+ add Lock Screen function.
 584   1              if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 585   1          {
 586   2                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 587   2                      {
 588   3                              Buffer_Key(0xE0); //"WIN" key
 589   3                              Buffer_Key(0x1F); 
 590   3                              Buffer_Key(0x4B); //"L" key
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 11  

 591   3                      }
 592   2                      else
 593   2                      {
 594   3                              if (event == BREAK_EVENT)
 595   3                              {
 596   4                                      Buffer_Key(0xF0);
 597   4                                      Buffer_Key(0x4B);
 598   4                                      Buffer_Key(0xE0);
 599   4                                      Buffer_Key(0xF0);
 600   4                                      Buffer_Key(0x1F);
 601   4                              }
 602   3                      }
 603   2              }  
 604   1              //MEILING018:E+.
 605   1      
 606   1              //MEILING018:S- remove projector function.
 607   1              //MEILING006: S+ add change display mode function.(Fixed The display mode auto change to the nearly mode 
             -when change the mode via lenovo hotkey)
 608   1              /*if(IS_MASK_CLEAR(ACPI_HOTKEY, HotkeyDisable))
 609   1              {
 610   1                      if(event == MAKE_EVENT)
 611   1                      {
 612   1                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 613   1                              {
 614   1                                      if( IS_MASK_CLEAR(SysStatus, FnF3WinKeyDn) )
 615   1                                      {
 616   1                                              e0_prefix_code(0x1F,event); // Win Key.
 617   1                                              SET_MASK(SysStatus, FnF3WinKeyDn);
 618   1                                      }
 619   1                                      simple_code(0x4D,event);                // P Key.
 620   1                              }
 621   1                      }
 622   1              
 623   1                      if (event == BREAK_EVENT)
 624   1                      {
 625   1                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 626   1                              {
 627   1                                      simple_code(0x4D,event);        // P Key.
 628   1                                      SET_MASK(SysStatus, FnF3PKeyUp);
 629   1                              }
 630   1                      }
 631   1              }
 632   1              else
 633   1              {
 634   1                      if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 635   1              {
 636   1                              if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 637   1                              {
 638   1                                      Buffer_Key(0xE0);
 639   1                                      Buffer_Key(0x1F);
 640   1                                      Buffer_Key(0x4D);
 641   1                              }
 642   1                              else
 643   1                              {
 644   1                                      if (event == BREAK_EVENT)
 645   1                                      {
 646   1                                              Buffer_Key(0xF0);
 647   1                                              Buffer_Key(0x4D);
 648   1                                              Buffer_Key(0xE0);
 649   1                                              Buffer_Key(0xF0);
 650   1                                              Buffer_Key(0x1F);
 651   1                                      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 12  

 652   1                              }
 653   1                      }
 654   1              }*/
 655   1              //MEILING006: E+.
 656   1              //MEILING018:E-.
 657   1              
 658   1              //MEILING006: S- remove turn on/off backlight function.
 659   1              /*if(event == MAKE_EVENT)
 660   1              {
 661   1                      if ( IS_MASK_CLEAR(pProject0, b0DispToggleEn) )
 662   1                      {
 663   1                              SET_MASK(pProject0,b0DispToggleEn);
 664   1                              SET_MASK(cCmd, b3BkOff);        // Turn off backlight.
 665   1                      }
 666   1                      else
 667   1                      {
 668   1                              CLR_MASK(cCmd, b3BkOff);        // Turn on backlight.
 669   1                              uVPCeventSource = Inverter;
 670   1                      uVPCeventSource2 = 0;
 671   1                              ECSMI_SCIEvent(SDV_VPC_notify);
 672   1                      }
 673   1              }*/
 674   1          //MEILING006: E-.
 675   1      }
 676          
 677          //----------------------------------------------------------------------------
 678          // The function of hotkey Fn + F10
 679          //----------------------------------------------------------------------------
 680          void HotKey_Fn_F10(BYTE event)
 681          {
 682   1              //MEILING018:S+ add projector function.(Fixed The display mode auto change to the nearly mode when change
             - the mode via lenovo hotkey)
 683   1              if(IS_MASK_SET(ACPI_HOTKEY, HotkeyDisable))
 684   1              {
 685   2                      if(event == MAKE_EVENT)
 686   2                      {
 687   3                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 688   3                              {
 689   4                                      if( IS_MASK_CLEAR(SysStatus, FnF3WinKeyDn) )
 690   4                                      {
 691   5                                              e0_prefix_code(0x1F,event); // Win Key.
 692   5                                              SET_MASK(SysStatus, FnF3WinKeyDn);
 693   5                                      }
 694   4                                      simple_code(0x4D,event);                // P Key.
 695   4                              }
 696   3                      }
 697   2              
 698   2                      if (event == BREAK_EVENT)
 699   2                      {
 700   3                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 701   3                              {
 702   4                                      simple_code(0x4D,event);        // P Key.
 703   4                                      SET_MASK(SysStatus, FnF3PKeyUp);
 704   4                              }
 705   3                      }
 706   2              }
 707   1              else
 708   1              {
 709   2                      if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 710   2              {
 711   3                              if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 712   3                              {
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 13  

 713   4                                      Buffer_Key(0xE0);
 714   4                                      Buffer_Key(0x1F);
 715   4                                      Buffer_Key(0x4D);
 716   4                              }
 717   3                              else
 718   3                              {
 719   4                                      if (event == BREAK_EVENT)
 720   4                                      {
 721   5                                              Buffer_Key(0xF0);
 722   5                                              Buffer_Key(0x4D);
 723   5                                              Buffer_Key(0xE0);
 724   5                                              Buffer_Key(0xF0);
 725   5                                              Buffer_Key(0x1F);
 726   5                                      }
 727   4                              }
 728   3                      }
 729   2              }
 730   1              //MEILING018:E+.
 731   1              
 732   1              //MEILING006: S- remove change display mode function.
 733   1              /*if(IS_MASK_SET(SYS_MISC1,ACPI_OS))
 734   1              {
 735   1                      if ((event == MAKE_EVENT)||(event == REPEAT_EVENT))
 736   1                      {
 737   1                              Buffer_Key(0xE0);
 738   1                              Buffer_Key(0x1F);
 739   1                              Buffer_Key(0x4D);
 740   1                      }
 741   1                      else
 742   1                      {
 743   1                              if (event == BREAK_EVENT)
 744   1                              {
 745   1                                      Buffer_Key(0xF0);
 746   1                                      Buffer_Key(0x4D);
 747   1                                      Buffer_Key(0xE0);
 748   1                                      Buffer_Key(0xF0);
 749   1                                      Buffer_Key(0x1F);
 750   1                              }
 751   1                      }
 752   1              }*/
 753   1              //MEILING006: E-.
 754   1      }
 755          
 756          //----------------------------------------------------------------------------
 757          // The function of hotkey Fn + F11
 758          //----------------------------------------------------------------------------
 759          void HotKey_Fn_F11(BYTE event)
 760          {
 761   1          if( event != BREAK_EVENT )
 762   1          {
 763   2              if( cBrightDnDelayCnt == 0 )
 764   2              {
 765   3                      cBrightDnDelayCnt = Timer_5;
 766   3                      uVPCeventSource = VPCeventBrightness;
 767   3                      uVPCeventSource2 = 0;
 768   3                  // Support for Windows 7 brightness control.
 769   3                      if( (SYS_STATUS & 0x07) != 0 )          // Check DOS mode.
 770   3                      { 
 771   4                              if( (SYS_STATUS & 0x07) == 0x03 )       
 772   4                      {
 773   5                              if( nBrightValue != 0 )
 774   5                                      {
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 14  

 775   6                                              nBrightValue--;
 776   6                                              cRecoveryBrightValue = nBrightValue;
 777   6                                      }
 778   5                          if (uReserve07.fbit.nVPCDriverIn==1)        // Check VPC driver.
 779   5                          { 
 780   6                                          ECQEvent(SDV_VPC_notify);
 781   6                              ECQEvent(LCD_BRIG_DEC_EVENT); 
 782   6                          }
 783   5                      }
 784   4                      else
 785   4                      {
 786   5                                      ECQEvent(LCD_BRIG_DEC_EVENT); 
 787   5                      }
 788   4                  }   // 0x11 inform bios.
 789   3                  //Support for Windows 7 brightness control.
 790   3                      else
 791   3                      {
 792   4                              if( nBrightValue != 0 )
 793   4                              {
 794   5                                      nBrightValue--;
 795   5                                      cRecoveryBrightValue = nBrightValue;
 796   5                              }
 797   4                      }
 798   3              }
 799   2              else
 800   2              { 
 801   3                      cBrightDnDelayCnt--; 
 802   3                      }
 803   2          }
 804   1          else if( event == BREAK_EVENT )
 805   1          { 
 806   2              cBrightDnDelayCnt = 0; 
 807   2              }
 808   1      
 809   1      }
 810          
 811          //----------------------------------------------------------------------------
 812          // The function of hotkey Fn + F12                      [ Win + M ->  Win + Q ->  ESC ]
 813          //----------------------------------------------------------------------------
 814          void HotKey_Fn_F12(BYTE event)
 815          {
 816   1              if( event != BREAK_EVENT )
 817   1          {
 818   2              if( cBrightUpDelayCnt == 0 )
 819   2              {
 820   3                  cBrightUpDelayCnt = Timer_5;
 821   3                      uVPCeventSource = VPCeventBrightness;
 822   3                  uVPCeventSource2 = 0;
 823   3                  //G80:+S Support for Windows 7 brightness control.
 824   3                      if( (SYS_STATUS & 0x07) != 0 )          // Check DOS mode.
 825   3                      { 
 826   4                              if( (SYS_STATUS & 0x07) == 0x03 )       
 827   4                      {
 828   5                              if( nBrightValue < (BRIGHT_MAX_STEP - 1) )
 829   5                                      {
 830   6                                              nBrightValue++;
 831   6                                              cRecoveryBrightValue = nBrightValue;
 832   6                                      }
 833   5                          if (uReserve07.fbit.nVPCDriverIn==1)        // Check VPC driver.
 834   5                          { 
 835   6                                          ECQEvent(SDV_VPC_notify);
 836   6                              ECQEvent(LCD_BRIG_INC_EVENT); 
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 15  

 837   6                          }
 838   5                      }
 839   4                      else
 840   4                      {
 841   5                                      ECQEvent(LCD_BRIG_INC_EVENT); 
 842   5                      }
 843   4                  }   // 0x11 inform bios.
 844   3                  //Support for Windows 7 brightness control.
 845   3                  else
 846   3                      {
 847   4                              if( nBrightValue < (BRIGHT_MAX_STEP - 1) )
 848   4                              {
 849   5                                      nBrightValue++;
 850   5                                      cRecoveryBrightValue = nBrightValue;
 851   5                              }
 852   4                      }
 853   3              }
 854   2              else    
 855   2              { 
 856   3                      cBrightUpDelayCnt--;      //Modify the Windows 7 brightness control caused by mistake.
 857   3              }
 858   2              }
 859   1              else if( event == BREAK_EVENT )
 860   1              {
 861   2                      cBrightUpDelayCnt = 0;
 862   2          }
 863   1      }
 864          
 865          //----------------------------------------------------------------------------
 866          // The function of hotkey Fn +Plus
 867          //----------------------------------------------------------------------------
 868          void HotKey_Fn_Plus(BYTE event)
 869          {
 870   1          if(event == MAKE_EVENT)
 871   1          {
 872   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 873   2                      {    
 874   3                              // if(IS_MASK_SET(EM9_NEWFUN, b7_ShiftPress))  
 875   3                  {      
 876   4                          SET_MASK(EM9_NEWFUN, b0_FnPlus);
 877   4                              uVPCeventSource = General;
 878   4                              uVPCeventSource2 = 0;
 879   4                                      ECSMI_SCIEvent(SDV_VPC_notify);
 880   4                  }
 881   3                      }
 882   2          }
 883   1      }
 884          //----------------------------------------------------------------------------
 885          // The function of hotkey Fn +Plus
 886          //----------------------------------------------------------------------------
 887          void HotKey_Fn_Minus(BYTE event)
 888          {
 889   1          if(event == MAKE_EVENT)
 890   1          {
 891   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
 892   2                      {
 893   3                              // if(IS_MASK_SET(EM9_NEWFUN, b7_ShiftPress))  
 894   3                  {      
 895   4                              SET_MASK(EM9_NEWFUN, b1_FnMinus);
 896   4                              uVPCeventSource = General;
 897   4                              uVPCeventSource2 = 0;
 898   4                                      ECSMI_SCIEvent(SDV_VPC_notify);
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 16  

 899   4                  }
 900   3              }
 901   2          }
 902   1      }
 903          
 904          //----------------------------------------------------------------------------
 905          // The function of hotkey Fn + ESC
 906          //----------------------------------------------------------------------------
 907          void HotKey_Fn_ESC(BYTE event)
 908          {
 909   1              #if HotKey_WebCam
                  if(event == MAKE_EVENT)
                  {
                              if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
                              {
                              nCameraPwrCHG;
                                  uVPCeventSource = VPCeventCamera;
                                  uVPCeventSource2 = 0;
                                      ECSMI_SCIEvent(SDV_VPC_notify);
                                      CPL_MASK(pDevStus, pCamera);
                              }
                  }
                      #endif  // HotKey_WebCam
 922   1      }
 923          
 924          //----------------------------------------------------------------------------
 925          // The function of hotkey Fn + up arrow
 926          //----------------------------------------------------------------------------
 927          void HotKey_Fn_UP(BYTE event)
 928          {
 929   1          //if((SYS_STATUS & 0x07) == 0x02)   // linpus
 930   1          //{
 931   1          //    e0_prefix_code(0x7F,event);   // ScanCode 0x54.
 932   1          //}
 933   1          //else
 934   1          //{
 935   1              /* 
 936   1              if( event != BREAK_EVENT )
 937   1              {
 938   1                      if( cBrightUpDelayCnt == 0 )
 939   1                  {
 940   1                              cBrightUpDelayCnt = Timer_5;
 941   1                              uVPCeventSource = VPCeventBrightness;
 942   1                              uVPCeventSource2 = 0;
 943   1                              if( (SYS_STATUS & 0x07) != 0 )          // Check DOS mode.
 944   1                              { ECQEvent(LCD_BRIG_INC_EVENT); }       // 0x12 inform bios.
 945   1                              else
 946   1                              {
 947   1                                      if( nBrightValue < (BRIGHT_MAX_STEP - 1) )
 948   1                                      {
 949   1                                              nBrightValue++;
 950   1                                              cRecoveryBrightValue = nBrightValue;
 951   1                                      }
 952   1                                      //if (uReserve07.fbit.nVPCDriverIn==1)  // Check VPC driver.
 953   1                                      //{ ECQEvent(SDV_VPC_notify); }                 // 0x44 for Levono used.
 954   1                              }
 955   1                      }
 956   1                  else
 957   1                  { cBrightUpDelayCnt--; }
 958   1              }
 959   1              else if( event == BREAK_EVENT )
 960   1              {
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 17  

 961   1                  cBrightUpDelayCnt = 0;
 962   1              }
 963   1              */        
 964   1          //}
 965   1      }
 966          
 967          //----------------------------------------------------------------------------
 968          // The function of hotkey Fn + down arrow
 969          //----------------------------------------------------------------------------
 970          void HotKey_Fn_DOWN(BYTE event)
 971          {
 972   1          //if((SYS_STATUS & 0x07) == 0x02)   // linpus
 973   1          //{
 974   1          //    e0_prefix_code(0x73,event);   // ScanCode 0x4C.
 975   1          //}
 976   1          //else
 977   1          //{
 978   1              /*
 979   1             if( event != BREAK_EVENT )
 980   1              {
 981   1                      if( cBrightDnDelayCnt == 0 )
 982   1                  {
 983   1                      cBrightDnDelayCnt = Timer_5;
 984   1                              uVPCeventSource = VPCeventBrightness;
 985   1                          uVPCeventSource2 = 0;
 986   1                              if( (SYS_STATUS & 0x07) != 0 )          // Check DOS mode.
 987   1                              { ECQEvent(LCD_BRIG_DEC_EVENT); }       // 0x11 inform bios.
 988   1                              else
 989   1                              {
 990   1                                      if( nBrightValue != 0 )
 991   1                                      {
 992   1                                              nBrightValue--;
 993   1                                              cRecoveryBrightValue = nBrightValue;
 994   1                                      }
 995   1                                      //if (uReserve07.fbit.nVPCDriverIn==1)  // Check VPC driver.
 996   1                              //{ ECQEvent(SDV_VPC_notify); } // 0x44 for Levono used.
 997   1                              }
 998   1                      }
 999   1                      else
1000   1                      { cBrightDnDelayCnt--; }
1001   1              }
1002   1              else if( event == BREAK_EVENT )
1003   1              { cBrightDnDelayCnt = 0; }
1004   1              //}
1005   1              */   
1006   1      }
1007          
1008          //----------------------------------------------------------------------------
1009          // The function of hotkey Fn + left arrow
1010          //----------------------------------------------------------------------------
1011          void HotKey_Fn_LEFT(BYTE event)
1012          {
1013   1          if(event == MAKE_EVENT)
1014   1          {
1015   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
1016   2                      {       
1017   3                      SET_MASK(EM9_NEWFUN, b0_FnPlus);
1018   3                          uVPCeventSource = General;
1019   3                          uVPCeventSource2 = 0;
1020   3                              ECSMI_SCIEvent(SDV_VPC_notify);
1021   3                      }
1022   2          }  
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 18  

1023   1      }
1024          
1025          //----------------------------------------------------------------------------
1026          // The function of hotkey Fn + right arrow
1027          //----------------------------------------------------------------------------
1028          void HotKey_Fn_RIGHT(BYTE event)
1029          {
1030   1          if(event == MAKE_EVENT)
1031   1          {
1032   2                      if ( IS_MASK_SET(SYS_MISC1, ACPI_OS) )
1033   2                      {  
1034   3                      SET_MASK(EM9_NEWFUN, b1_FnMinus);
1035   3                          uVPCeventSource = General;
1036   3                          uVPCeventSource2 = 0;
1037   3                              ECSMI_SCIEvent(SDV_VPC_notify);
1038   3              }
1039   2          }
1040   1      }
1041          
1042          //----------------------------------------------------------------------------
1043          // The function of hotkey Fn + Space
1044          //---------------------------------------------------------------------------
1045          void HotKey_Fn_Space(BYTE event)
1046          {
1047   1              /*if (event == MAKE_EVENT)
1048   1              {
1049   1                      if(0x00==LED_KB_PWM_Step)   
1050   1              {
1051   1                  LED_KB_PWM_Step=LED_KB_PWM_Step+2;   
1052   1              }     
1053   1              else
1054   1              {
1055   1                  LED_KB_PWM_Step++;
1056   1              }  
1057   1                      CLR_MASK(EMStatusBit, b2KBLEDChk);
1058   1                      CLR_MASK(EMStatusBit, b0SetKBLEDON);
1059   1                      UpdateLEDBL_delay = 6;                  // Delay 3 sec for Update LED Back Light.
1060   1              }*///72JERRY022: -Modify GPIO setting follow SIT.
1061   1      
1062   1              //72JERRY022: S+Modify GPIO setting follow SIT.
1063   1              if(SystemIsS5 || SystemIsS3)
1064   1              {
1065   2                      return;
1066   2              }
1067   1      
1068   1              
1069   1              if (event == MAKE_EVENT)
1070   1              {
1071   2                      LED_KB_PWM_Step++; 
1072   2                      if(LED_KB_PWM_Step == 3)
1073   2                      {
1074   3                              LED_KB_PWM_Step=0;
1075   3                      }
1076   2      //72JERRY036:s+ Modify KB backlight control for lenovo app setting.
1077   2                      if(LED_KB_PWM_Step!=0)
1078   2                      {
1079   3                              SET_MASK(EMStatusBit, b0SetKBLEDON);
1080   3                      }
1081   2                      else
1082   2                      {
1083   3                              CLEAR_MASK(EMStatusBit, b0SetKBLEDON);
1084   3                      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 19  

1085   2      //72JERRY036: e+Modify KB backlight control for lenovo app setting.     
1086   2                      UpdateLEDBL_delay = 2;                  // Delay 3 sec for Update LED Back Light.
1087   2                      if(uReserve07.fbit.nVPCDriverIn==1)
1088   2                      {
1089   3                              uVPCeventSource = General;
1090   3                      uVPCeventSource2 = 0;
1091   3                              ECSMI_SCIEvent(SDV_VPC_notify);
1092   3                      }
1093   2      //72JERRY022: E+Modify GPIO setting follow SIT.
1094   2              }
1095   1      }
1096          void HotKey_Fn_Q(BYTE event)
1097          {
1098   1      //      return;
1099   1              if(SystemIsS5 || SystemIsS3)
1100   1              {
1101   2                      return;
1102   2              }
1103   1              if(Read_YOGA_ID())
1104   1              {
1105   2                      return;
1106   2              }
1107   1              if (event == MAKE_EVENT)
1108   1              {
1109   2                      if(ThermalMode == ThermalMode_BALANCE)
1110   2                      {
1111   3                              ThermalMode = ThermalMode_HIGHP;
1112   3                      }
1113   2                      else
1114   2                      {
1115   3                              ThermalMode = ThermalMode_BALANCE;
1116   3                      }
1117   2                      ECSMI_SCIEvent(Fn_Q_EVENT);
1118   2                      uVPCeventSource = FnQ;
1119   2              uVPCeventSource2 = 0;
1120   2                      ECSMI_SCIEvent(SDV_VPC_notify);
1121   2              }
1122   1      }
1123          void HotKey_Fn_H(BYTE event)
1124          {
1125   1              return;
1126   1      }
1127          void HotKey_Fn_B(BYTE event)
1128          {
1129   1              return;
1130   1      }
1131          
1132          const FUNCT_PTR_V_B code HotKey_Fn_Fx[] =
1133          {
1134                  HotKey_Fn_F1,           // Fn + F1
1135                  HotKey_Fn_F2,           // Fn + F2
1136                  HotKey_Fn_F3,           // Fn + F3
1137                  HotKey_Fn_F4,       // Fn + F4
1138                  HotKey_Fn_F5,           // Fn + F5
1139                  HotKey_Fn_F6,           // Fn + F6
1140                  HotKey_Fn_F7,           // Fn + F7
1141                  HotKey_Fn_F8,       // Fn + F8
1142                  HotKey_Fn_F9,           // Fn + F9
1143                  HotKey_Fn_F10,          // Fn + F10
1144                  HotKey_Fn_F11,          // Fn + F11
1145                  HotKey_Fn_F12,          // Fn + F12
1146                  HotKey_Fn_ESC,          // Fn + ESC
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 20  

1147          //      HotKey_Fn_UP,           // Fn + up arrow
1148          //      HotKey_Fn_DOWN,         // Fn + down arrow
1149              HotKey_Fn_Plus,     // Fn+Plus
1150              HotKey_Fn_Minus,    // Fn+Plus
1151                  HotKey_Fn_LEFT,         // Fn + left arrow   //:Used for Fn+ "+"(small keyboard)
1152                  HotKey_Fn_RIGHT,        // Fn + right arrow  //:Used for Fn+ "-"(small keyboard)
1153                  HotKey_Fn_Space,        // Fn + Space
1154                  HotKey_Fn_Q,        // Fn + Q
1155                  HotKey_Fn_H,        // Fn + H
1156                  HotKey_Fn_B,        // Fn + B
1157          };
1158          
1159          //---------------------------------------------------------------------------
1160          //      Numpad 7 Home   [B0h]
1161          //      Numpad 8 UP     [B1h]
1162          //      Numpad 9 PGUp   [B2h]
1163          //      Numpad *                [B3h]
1164          //      Numpad 4 Left   [B4h]
1165          //      Numpad 5                [B5h]
1166          //      Numpad 6 Right  [B6h]
1167          //      Numpad -                [B7h]
1168          //      Numpad 1 End    [B8h]
1169          //      Numpad 2 Down   [B9h]
1170          //      Numpad 3 PGDn   [BAh]
1171          //      Numpad +                [BBh]
1172          //      Numpad 0 Ins    [BCh]
1173          //      Numpad . Del    [BDh]
1174          //      Numpad /        [BEh]
1175          //---------------------------------------------------------------------------
1176          
1177          const BYTE code ss2_9C[] =      // Numpad 7
1178          {
1179              0x3D,   // Normal           // 7
1180              0xB0,   // Numlock
1181              0xB0,   // Fn
1182              0xB0    // Fn+Numlock
1183          };
1184          
1185          const BYTE code ss2_9D[] =      // Numpad 8
1186          {
1187              0x3E,   // Normal           // 8
1188              0xB1,   // Numlock
1189              0xB1,   // Fn
1190              0xB1    // Fn+Numlock
1191          };
1192          
1193          const BYTE code ss2_9E[] =      // Numpad 9
1194          {
1195              0x46,   // Normal           // 9
1196              0xB2,   // Numlock
1197              0xB2,   // Fn
1198              0xB2    // Fn+Numlock
1199          };
1200          
1201          const BYTE code ss2_9F[] =      // Numpad 0
1202          {
1203              0x45,   // Normal           // 0
1204              0xBE,   // Numlock
1205              0xBE,   // Fn
1206              0xBE    // Fn+Numlock
1207          };
1208          
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 21  

1209          const BYTE code ss2_A0[] =      // Numpad U
1210          {
1211              0x3C,   // Normal           // U
1212              0xB4,   // Numlock
1213              0xB4,   // Fn
1214              0xB4    // Fn+Numlock
1215          };
1216          
1217          const BYTE code ss2_A1[] =      // Numpad I
1218          {
1219              0x43,   // Normal           // I
1220              0xB5,   // Numlock
1221              0xB5,   // Fn
1222              0xB5    // Fn+Numlock
1223          };
1224          
1225          const BYTE code ss2_A2[] =      // Numpad O
1226          {
1227              0x44,   // Normal           // O
1228              0xB6,   // Numlock
1229              0xB6,   // Fn
1230              0xB6    // Fn+Numlock
1231          };
1232          
1233          const BYTE code ss2_A3[] =      // Numpad P
1234          {
1235              0x4D,   // Normal           // P
1236              0xB3,   // Numlock
1237              0xB3,   // Fn
1238              0xB3    // Fn+Numlock
1239          };
1240          
1241          const BYTE code ss2_A4[] =      // Numpad J
1242          {
1243              0x3B,   // Normal           // J
1244              0xB8,   // Numlock
1245              0xB8,   // Fn
1246              0xB8    // Fn+Numlock
1247          };
1248          
1249          const BYTE code ss2_A5[] =      // Numpad K
1250          {
1251              0x42,   // Normal           // K
1252              0xB9,   // Numlock
1253              0xB9,   // Fn
1254              0xB9    // Fn+Numlock
1255          };
1256          
1257          const BYTE code ss2_A6[] =      // Numpad L
1258          {
1259              0x4B,   // Normal           // L
1260              0xBA,   // Numlock
1261              0xBA,   // Fn
1262              0xBA    // Fn+Numlock
1263          };
1264          
1265          const BYTE code ss2_A7[] =      // Numpad ;:
1266          {
1267              0x4C,   // Normal           // ;:
1268              0xB7,   // Numlock
1269              0xB7,   // Fn
1270              0xB7    // Fn+Numlock
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 22  

1271          };
1272          
1273          const BYTE code ss2_A8[] =      // Numpad M
1274          {
1275              0x3A,   // Normal           // M
1276              0xBC,   // Numlock
1277              0xBC,   // Fn
1278              0xBC    // Fn+Numlock
1279          };
1280          
1281          const BYTE code ss2_A9[] =      // Numpad ,<
1282          {
1283              0x41,   // Normal           // ,<
1284              0x41,   // Numlock
1285              0x41,   // Fn
1286              0x41    // Fn+Numlock
1287          };
1288          
1289          const BYTE code ss2_AA[] =      // Numpad .>
1290          {
1291              0x49,   // Normal           // .>
1292              0xBD,   // Numlock
1293              0xBD,   // Fn
1294              0xBD    // Fn+Numlock
1295          };
1296          
1297          const BYTE code ss2_AB[] =      // Numpad /?
1298          {
1299              0x4A,   // Normal           // /?
1300              0xBB,   // Numlock
1301              0xBB,   // Fn
1302              0xBB    // Fn+Numlock
1303          };
1304          
1305          const BYTE code ss2_AC[] =
1306          {
1307              0x5A,   // Normal
1308              0x81,   // Fn
1309          };
1310          //----------------------------------------------------------------
1311          // Function key F1 ~ F12
1312          //----------------------------------------------------------------
1313          const BYTE code ss2_AD[] =      // F1
1314          {
1315              0x05,   // Normal
1316                  //0x86,   // Sleep event
1317              0xD0,   // Fn
1318          };
1319          
1320          const BYTE code ss2_AE[] =      // F2
1321          {
1322              0x06,   // Normal
1323              0xD1,   // Fn
1324          };
1325          
1326          const BYTE code ss2_AF[] =      // F3
1327          {
1328              0x04,   // Normal
1329              0xD2,   // Fn
1330          };
1331          
1332          const BYTE code ss2_B0[] =      // F4
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 23  

1333          {
1334              0x0C,   // Normal
1335              0xD3,   // Fn
1336          };
1337          
1338          const BYTE code ss2_B1[] =      // F5
1339          {
1340              0x03,   // Normal
1341              0xD4,   // Fn
1342          };
1343          
1344          const BYTE code ss2_B2[] =      // F6
1345          {
1346              0x0B,   // Normal
1347              0xD5,   // Fn
1348          };
1349          
1350          const BYTE code ss2_B3[] =      // F7
1351          {
1352              0x80,   // Normal
1353              0xD6,   // Fn
1354          };
1355          
1356          const BYTE code ss2_B4[] =      // F8
1357          {
1358              0x0A,   // Normal
1359              0xD7,   // Num Lk   //T08H: from 0x77 to 0xD7 
1360          };
1361          
1362          const BYTE code ss2_B5[] =      // F9
1363          {
1364              0x01,   // Normal
1365                  //0x9F,   // Play/Pause event
1366                  0xD8,
1367          };
1368          
1369          const BYTE code ss2_B6[] =      // F10
1370          {
1371              0x09,   // Normal
1372                  //0x9E,   // Stop event
1373                  0xD9,
1374          };
1375          
1376          const BYTE code ss2_B7[] =      // F11
1377          {
1378              0x78,   // Normal
1379                  //0x9D,   // Prev Track event
1380                  0xDA,
1381          };
1382          
1383          const BYTE code ss2_B8[] =      // F12
1384          {
1385              0x07,   // Normal
1386              //0x9C,   // Next Track event
1387              0xDB,
1388          };
1389          
1390          /* ----------------------------------------------------------------------------
1391           * FUNCTION: sskey2_A2_table
1392           *
1393           * The A2_TABLE structure contains the following.
1394           *
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 24  

1395           * BYTE comb;  Bit   Setting Combination Key
1396           *            ---   -----------------------
1397           *             7    Hook_calc_index_comb_BIT7
1398           *             6    Hook_calc_index_comb_BIT6
1399           *             5    Fn
1400           *             4    Numlock
1401           *             3    Ctrl
1402           *             2    Alt
1403           *             1    Shift
1404           *             0    reserved
1405           *
1406           * BYTE *pntr; Pointer to array for key.
1407           * ------------------------------------------------------------------------- */
1408          const A2_TABLE sskey2_A2_table[] =
1409          {                                                                                       // Keyboard matrix index
1410                  // Keypad -->
1411              {0x30, ss2_9C },    /* index = 00h */       // 0x9C
1412              {0x30, ss2_9D },    /* index = 01h */       // 0x9D
1413              {0x30, ss2_9E },    /* index = 02h */       // 0x9E
1414              {0x30, ss2_9F },    /* index = 03h */       // 0x9F
1415              {0x30, ss2_A0 },    /* index = 04h */       // 0xA0
1416              {0x30, ss2_A1 },    /* index = 05h */       // 0xA1
1417              {0x30, ss2_A2 },    /* index = 06h */       // 0xA2
1418              {0x30, ss2_A3 },    /* index = 07h */       // 0xA3
1419              {0x30, ss2_A4 },    /* index = 08h */       // 0xA4
1420              {0x30, ss2_A5 },    /* index = 09h */       // 0xA5
1421              {0x30, ss2_A6 },    /* index = 0Ah */       // 0xA6
1422              {0x30, ss2_A7 },    /* index = 0Bh */       // 0xA7
1423              {0x30, ss2_A8 },    /* index = 0Ch */       // 0xA8
1424              {0x30, ss2_A9 },    /* index = 0Dh */       // 0xA9
1425              {0x30, ss2_AA },    /* index = 0Eh */       // 0xAA
1426              {0x30, ss2_AB },    /* index = 0Fh */       // 0xAB
1427              {0x20, ss2_AC },    /* index = 10h */       // 0xAC
1428                  // Keypad <--
1429          
1430                  // F1~F12 hotkeys -->
1431              {0x20, ss2_AD },    /* index = 11h */       // 0xAD
1432              {0x20, ss2_AE },    /* index = 12h */       // 0xAE
1433              {0x20, ss2_AF },    /* index = 13h */       // 0xAF
1434              {0x20, ss2_B0 },    /* index = 14h */       // 0xB0
1435              {0x20, ss2_B1 },    /* index = 15h */       // 0xB1
1436              {0x20, ss2_B2 },    /* index = 16h */       // 0xB2
1437              {0x20, ss2_B3 },    /* index = 17h */       // 0xB3
1438              {0x20, ss2_B4 },    /* index = 18h */       // 0xB4
1439              {0x20, ss2_B5 },    /* index = 19h */       // 0xB5
1440              {0x20, ss2_B6 },    /* index = 1Ah */       // 0xB6
1441              {0x20, ss2_B7 },    /* index = 1Bh */       // 0xB7
1442              {0x20, ss2_B8 }     /* index = 1Ch */       // 0xB8
1443              // F1~F12 hotkeys <--
1444          };
1445                                                                                                  // Reserved 0xB9 ~ 0xDF
1446          
1447          /* ----------------------------------------------------------------------------
1448           * FUNCTION: sskey2_overlay_table
1449           * ------------------------------------------------------------------------- */
1450          const BYTE code sskey2_overlay_table[] =
1451          {//Normal   Fn          // Keyboard matrix index
1452                  0x05,0xD0,      // E0H    F1 <-> Mute 
1453                  0x06,0xD1,      // E1H  F2 <-> Vol Down 
1454                  0x04,0xD2,      // E2H  F3 <-> Vol Up   
1455                  0x0C,0xD3,  // E3H    F4 <-> Mic            
1456                  0x03,0xD4,      // E4H    F5 <-> Reflash                        
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 25  

1457                  0x0B,0xD5,  // E5H    F6 <-> Touchpad
1458                  0x80,0xD6,  // E6H    F7 <-> Airplane
1459                  0x0A,0xD7,  // E7H    F8 <-> Camera        
1460                  0x01,0xD8,  // E8H    F9 <-> Screen Lock        
1461                  0x09,0xD9,  // E9H    F10 <-> Display mode
1462                  0x78,0xDA,      // EAH    F11 <-> Brightness Down         
1463                  0x07,0xDB,      // EBH    F12 <-> Brightness Up  
1464                  0x9B,0x95,  // ECH      RightArrow <-> End  //MEILING004:change (0x76,0x00) to (0x95,0x9B)  //MEILING015:sw
             -itch the function order.       
1465                  0x98,0x96,      // EDH  UpArrow <-> PgUp  //MEILING004:change (0x98,0x00) to (0x96,0x98)         //MEILING015:switch t
             -he function order. 
1466                  0x99,0x97,      // EEH  DnArrow <-> PgDn //MEILING004:change (0x99,0x00) to (0x97,0x99)    //MEILING015:switch 
             -the function order. 
1467                  0x9A,0x94,      // EFH  LeftArrow <-> Home  //MEILING004:change (0x9A,0x00) to (0x94,0x9A)  //MEILING015:switch
             - the function order.   
1468                  0xC2,0xC2,      // F0H  Insert          
1469                  0xC3,0xC2,  // F1H      PrtSc <-> Insert  //LMLNANO002:add PrtSc/Insert key.            
1470                  0xC0,0xC0,  // F2H      Delete
1471                  0xC3,0xC3,  // F3h      PrtSc                                    
1472                  0x9F,0x9F,  // F4h      Play/Pause   //MEILING007:change to Play/Pause event.                            
1473                  0x9E,0x9E,  // F5h      Stop        //MEILING007:change to Stop event.           
1474                  0x9D,0x9D,  // F6h      Prev Track  //MEILING007:change to Prev Track event.    //MEILING032:modify "Prev Track"
             - to "Fast Backward".  //MEILING034:change "www.Back" to "Prev Track".           
1475                  0x9C,0x9C,  // F7h      Next Track  //MEILING007:change to Next Track event.    //MEILING032:modify "Next Track"
             - to "Fast Forward".   //MEILING034:change "www.Forward" to "Next Track".                       
1476                  0x32,0x92,      // F8h  B <-> Break  //MEILING020:change (0x94,0x91) to (0x32,0x92)                       
1477                  0x4D,0x91,      // F9h  P <-> Pause  //MEILING020:change (0x96,0x7E) to (0x4D,0x91)     
1478                  0x21,0x7E,  // FAh      C <-> SrcLk  //MEILING020:change (0x97,0xC2) to (0x21,0x7E)
1479                  0x1B,0x93,      // FBh  S <-> SysRq //MEILING020:change (0x95,0x92) to (0x1B,0x93)  //MEILING027:change (0x1B,0
             -x93) to (0x35,0x93). //72JERRY082: Modify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
1480                  0x31,0x31,      // FCh  N <-> Balance mode      
1481                  0x29,0xE1,      // FDh   Space <-> KB Backlight
1482                  0x15,0xE2,      // FEh  Q <-> Quiet mode
1483                  0x33,0x33,      // FFh  H <-> HighPerf mode
1484          };
1485                                                                                                          
1486          const BYTE code sskey2_overlay_table1[] =
1487          {//Normal   Fn          // Keyboard matrix index
1488                  0xD0,0x05,      // E0H    Mute <-> F1            
1489                  0xD1,0x06,      // E1H  Vol Down <-> F2          
1490                  0xD2,0x04,      // E2H  Vol Up <-> F3              
1491                  0xD3,0x0C,  // E3H    Mic <-> F4            
1492                  0xD4,0x03,      // E4H    Reflash <-> F5                        
1493                  0xD5,0x0B,  // E5H    Touchpad <-> F6
1494                  0xD6,0x80,  // E6H    Camera <-> F7
1495                  0xD7,0x0A,  // E7H    Airplane <-> F8           
1496                  0xD8,0x01,  // E8H    Display mode <-> F9        
1497                  0xD9,0x09,  // E9H    F10           
1498                  0xDA,0x78,      // EAH    Brightness Down <-> F11                       
1499                  0xDB,0x07,  // EBH    Brightness Up <-> F12               
1500                  0x9B,0x95,  // ECH    RightArrow <-> End  //MEILING004:change (0x00,0x76) to (0x9B,0x95)         
1501                  0x98,0x96,      // EDH  UpArrow <-> PgUp   //MEILING004:change (0x00,0x98) to (0x98,0x96)       
1502                  0x99,0x97,      // EEH  DnArrow <-> PgDn  //MEILING004:change (0x00,0x99) to (0x99,0x97)        
1503                  0x9A,0x94,      // EFH  LeftArrow <-> Home  //MEILING004:change (0x00,0x9A) to (0x9A,0x94)       
1504                  0xC2,0xC2,      // F0H  Insert          
1505                  0xC3,0xC2,  // F1H      PrtSc <-> Insert  //LMLNANO002:add PrtSc/Insert key.            
1506                  0xC0,0xC0,  // F2H    Delete  //
1507                  0xC3,0xC3,  // F3h      PrtSc   //                               
1508                  0x9F,0x9F,  // F4h      Play/Pause   //MEILING007:change to Play/Pause event.                            
1509                  0x9E,0x9E,  // F5h      Stop        //MEILING007:change to Stop event.           
1510                  0x9D,0x9D,  // F6h      Prev Track  //MEILING007:change to Prev Track event.    //MEILING032:modify "Prev Track"
             - to "Fast Backward".  //MEILING034:change "www.Back" to "Prev Track".                   
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 26  

1511                  0x9C,0x9C,  // F7h      Next Track  //MEILING007:change to Next Track event.    //MEILING032:modify "Prev Track"
             - to "Fast Backward".  //MEILING034:change "www.Forward" to "Next Track".                               
1512                  0x32,0x92,      // F8h  B <-> Break  //MEILING020:change (0x94,0x91) to (0x32,0x92)                       
1513                  0x4D,0x91,      // F9h  P <-> Pause  //MEILING020:change (0x96,0x7E) to (0x4D,0x91)     
1514                  0x21,0x7E,  // FAh      C <-> SrcLk  //MEILING020:change (0x97,0xC2) to (0x21,0x7E)
1515                  0x1B,0x93,      // FBh  S <-> SysRq //MEILING020:change (0x95,0x92) to (0x1B,0x93)  //MEILING027:change (0x1B,0
             -x93) to (0x35,0x93). //72JERRY082: Modify KB SysRq function from Fn+Y to Fn+s by the latest UIspec.
1516                  0x31,0x31,      // FCh  N <-> Balance mode      
1517                  0x29,0xE1,      // FDh   Space <-> KB Backlight
1518                  0x15,0xE2,      // FEh  Q <-> Quiet mode
1519                  0x33,0x33,      // FFh  H <-> HighPerf mode
1520          };
1521                                                                                                          // Reserved 0xEE ~ 0xFF
1522          /* ----------------------------------------------------------------------------
1523           * Insyde Software Key Number 2
1524           *
1525           * 00h         Null
1526           * 01h - 7Fh   Same as IBM Scan Code, Set2
1527           * 80h - BFh   Pre-Index for generation Scan Code, Set2
1528           * C0h - DFh   Pre-Index for PPK function
1529           * C0h - DFh   Pre-Index for SMI function
1530           * ------------------------------------------------------------------------- */
1531          /* ----------------------------------------------------------------------------
1532           * FUNCTION: sskey3_80_table - Insyde Software Key Number 2
1533           * 80h - BFh   Pre-Index for generation Scan Code, Set2
1534           * ------------------------------------------------------------------------- */
1535          const BYTE code sskey3_80_table[] =
1536          {
1537          //-----------------------------------------------------------------
1538          // Index from keyboard matrix
1539          //-----------------------------------------------------------------
1540                                                                                  // Keyboard matrix index
1541              0x83,       DO_SIMPLE_CODE,         // [80h] F7 (118)
1542              0x5A,       DO_E0_PREFIX_CODE,      // [81h] Numpad Enter (108)
1543              0x1F,       DO_E0_PREFIX_CODE,      // [82h] Windows Left
1544              0x27,       DO_E0_PREFIX_CODE,      // [83h] Windows Right
1545              0x2F,       DO_E0_PREFIX_CODE,      // [84h] Application
1546              0x37,       DO_E0_PREFIX_CODE,      // [85h] Power event
1547              0x3F,       DO_E0_PREFIX_CODE,      // [86h] Sleep event
1548              0x5E,       DO_E0_PREFIX_CODE,              // [87h] Wake event
1549              LShift, DO_CONTROL_EFFECT,          // [88h] 12 Shift(L)
1550              RShift, DO_CONTROL_EFFECT,          // [89h] 59 Shift(R)
1551              LAlt,       DO_CONTROL_EFFECT,      // [8Ah] 11 Alt(L)
1552              RAlt,       DO_CONTROL_EFFECT_E0,   // [8Bh] E0 11 Alt(R)
1553              LCtrl,      DO_CONTROL_EFFECT,              // [8Ch] 14 Crtl(L)
1554              RCtrl,      DO_CONTROL_EFFECT_E0,   // [8Dh] E0 14 Ctrl(R)
1555              FN,         DO_CONTROL_EFFECT,      // [8Eh] Fn
1556              OVLAY,      DO_CONTROL_EFFECT,              // [8Fh] Overlay
1557              0x4A,       DO_E0_PREFIX_CODE,      // [90h] Reserved msmart "key pad /"
1558              0x00,       DO_SPECIAL_CODE,        // [91h] Pause (126)
1559              0x01,       DO_SPECIAL_CODE,        // [92h] Break
1560              0x84,       DO_SIMPLE_CODE,         // [93h] (124) Alt-Case (SysRq)
1561              0x6C,       DO_E0_PREFIX_CODE,      // [94h] Home
1562              0x69,       DO_E0_PREFIX_CODE,      // [95h] End
1563              0x7D,       DO_E0_PREFIX_CODE,      // [96h] Page up
1564              0x7A,       DO_E0_PREFIX_CODE,      // [97h] Page down
1565              0x75,       DO_E0_PREFIX_CODE,      // [98h] UP arrow
1566              0x72,       DO_E0_PREFIX_CODE,      // [99h] Down arrow
1567              0x6B,       DO_E0_PREFIX_CODE,      // [9Ah] Left arrow
1568              0x74,       DO_E0_PREFIX_CODE,      // [9Bh] Right arrow
1569          
1570          //-----------------------------------------------------------------
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 27  

1571          // For MicroSoft enhance keyboard feature.
1572          //-----------------------------------------------------------------
1573              0x4D, DO_E0_PREFIX_CODE,            // [9Ch] Next Track event
1574              0x15, DO_E0_PREFIX_CODE,            // [9Dh] Prev Track event
1575              0x3B, DO_E0_PREFIX_CODE,            // [9Eh] Stop event
1576              0x34, DO_E0_PREFIX_CODE,            // [9Fh] Play/Pause event
1577              0x23, DO_E0_PREFIX_CODE,            // [A0h] Mute event
1578              0x32, DO_E0_PREFIX_CODE,            // [A1h] Volume Up event
1579              0x21, DO_E0_PREFIX_CODE,            // [A2h] Volume Down event
1580              0x48, DO_E0_PREFIX_CODE,            // [A3h] Mail event
1581              0x10, DO_E0_PREFIX_CODE,            // [A4h] Search event
1582              0x3A, DO_E0_PREFIX_CODE,            // [A5h] Web/Home event
1583              0x38, DO_E0_PREFIX_CODE,            // [A6h] Back event
1584              0x30, DO_E0_PREFIX_CODE,            // [A7h] Forward event
1585              0x28, DO_E0_PREFIX_CODE,            // [A8h] Stop event
1586              0x20, DO_E0_PREFIX_CODE,            // [A9h] Refresh event
1587              0x18, DO_E0_PREFIX_CODE,            // [AAh] Favorites event
1588              0x2B, DO_E0_PREFIX_CODE,            // [ABh] Caluator event
1589              0x40, DO_E0_PREFIX_CODE,            // [ACh] My Computer event
1590              0x50, DO_E0_PREFIX_CODE,            // [ADh] Media event
1591              0x00, DO_SIMPLE_CODE,               // [AEh] Reserved
1592              0x00, DO_SIMPLE_CODE,               // [AFh] Reserved
1593          
1594          //-----------------------------------------------------------------
1595          // Index from sskey2_A2_table
1596          //-----------------------------------------------------------------
1597                  0x6C, DO_SIMPLE_CODE,                   // Numpad 7 Home        [B0h]
1598                  0x75, DO_SIMPLE_CODE,                   // Numpad 8 UP          [B1h]
1599                  0x7D, DO_SIMPLE_CODE,           // Numpad 9 PGUp        [B2h]
1600                  0x7C, DO_SIMPLE_CODE,           // Numpad *             [B3h]
1601                  0x6B, DO_SIMPLE_CODE,           // Numpad 4 Left        [B4h]
1602                  0x73, DO_SIMPLE_CODE,           // Numpad 5             [B5h]
1603                  0x74, DO_SIMPLE_CODE,           // Numpad 6 Right       [B6h]
1604                  0x7B, DO_SIMPLE_CODE,           // Numpad -             [B7h]
1605                  0x69, DO_SIMPLE_CODE,           // Numpad 1 End         [B8h]
1606                  0x72, DO_SIMPLE_CODE,           // Numpad 2 Down        [B9h]
1607                  0x7A, DO_SIMPLE_CODE,           // Numpad 3 PGDn        [BAh]
1608                  0x79, DO_SIMPLE_CODE,           // Numpad +             [BBh]
1609                  0x70, DO_SIMPLE_CODE,           // Numpad 0 Ins         [BCh]
1610                  0x71, DO_SIMPLE_CODE,                   // Numpad . Del         [BDh]
1611                  0x4A, DO_E0_PREFIX_CODE,                // Numpad /             [BEh]
1612          
1613                  0x00, DO_SIMPLE_CODE,                   // Reserved             [BFh]
1614          
1615              0x71, DO_E0_PREFIX_CODE,            // Delete               [C0h]
1616              0x84, DO_SIMPLE_CODE,               // SysRq                        [C1h]
1617              0x70, DO_E0_PREFIX_CODE,            // Insert                       [C2h]
1618              0x7C, DO_E0_PREFIX_CODE,            // Print Screen [C3h]
1619                  0x41, DO_E0_PREFIX_CODE,        // Euro Sign            [C4h]
1620                  0x49, DO_E0_PREFIX_CODE,        // Dollar Sign          [C5h]
1621                  0x00, DO_SIMPLE_CODE,                   // Reserved             [C6h]
1622                  0x00, DO_SIMPLE_CODE,                   // Reserved             [C7h]
1623                  0x00, DO_SIMPLE_CODE,                   // Reserved             [C8h]
1624                  0x00, DO_SIMPLE_CODE,                   // Reserved             [C9h]
1625                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CAh]
1626                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CBh]
1627                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CCh]
1628                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CDh]
1629                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CEh]
1630                  0x00, DO_SIMPLE_CODE,                   // Reserved             [CFh]
1631          
1632          // Function key F1 ~ F12
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 28  

1633              0   , DO_COSTOMER_FUNCTION,         // Function key F1      [D0h]
1634              1   , DO_COSTOMER_FUNCTION,         // Function key F2      [D1h]
1635              2   , DO_COSTOMER_FUNCTION,         // Function key F3      [D2h]
1636              3   , DO_COSTOMER_FUNCTION,         // Function key F4      [D3h]
1637              4   , DO_COSTOMER_FUNCTION,         // Function key F5      [D4h]
1638              5   , DO_COSTOMER_FUNCTION,         // Function key F6      [D5h]
1639              6   , DO_COSTOMER_FUNCTION,         // Function key F7      [D6h]
1640              7   , DO_COSTOMER_FUNCTION,         // Function key F8      [D7h]
1641              8   , DO_COSTOMER_FUNCTION,         // Function key F9      [D8h]
1642              9   , DO_COSTOMER_FUNCTION,         // Function key F10     [D9h]
1643              10  , DO_COSTOMER_FUNCTION,         // Function key F11     [DAh]
1644              11  , DO_COSTOMER_FUNCTION,         // Function key F12     [DBh]
1645                  12      , DO_COSTOMER_FUNCTION,         // Function key Esc     [DCh]
1646                  13      , DO_COSTOMER_FUNCTION,         // Function key Up arrow        [DDh]
1647                  14      , DO_COSTOMER_FUNCTION,         // Function key Down arrow      [DEh]
1648                  15      , DO_COSTOMER_FUNCTION,         // Function key Left arrow      [DFh]
1649                  16      , DO_COSTOMER_FUNCTION,         // Function key Right arrow     [E0h]
1650                  17      , DO_COSTOMER_FUNCTION,         // Function key Right arrow     [E1h]
1651                  18  , DO_COSTOMER_FUNCTION,     // Function key Fn Q    [E2h]
1652                  19  , DO_COSTOMER_FUNCTION,     // Function key Fn H    [E3h]
1653                  20  , DO_COSTOMER_FUNCTION,     // Function key Fn N    [E4h]
1654          };
1655          
1656                                                                                  // Reserved 0xE0 ~ 0xFF
1657          
1658          //-----------------------------------------------------------------
1659          // The function of checking boot hotkey Dino 1024
1660          //-----------------------------------------------------------------
1661          #define DebugkeyFn              0x8E    // Fn
1662          #define DebugKeyEqu             0x55    // =
1663          #define DebugKeyS                       0x1B    // S
1664          #define DebugKeyA                       0x1C    // A
1665          #define DebugKeyR                       0x2D    // R
1666          #define DebugKeyN                       0x31    // N
1667          #define DebugKeyI                       0x43    // I
1668          #define DebugKeyO                       0x44    // O
1669          #define DebugKeyP                       0x4D    // P//change "Fn+D"to"Fn+D+P".
1670          #define DebugKeyD                       0x23    // D  
1671          #define DebugKeyV                       0x2A    // V  ADD //ANGELAS032: add
1672          #define Crisiskey05                     0xE1    // F2    //ANGELAG001: add
1673          #define Crisiskey06                     0xEB    // F12  //ANGELAG001: add
1674          
1675          //ANGELAG001:S+ add CrisisHotkey05 function.
1676          void CrisisHotkey05(BYTE event)
1677          {
1678   1              /*if((IS_MASK_CLEAR(ACPI_HOTKEY, HotkeyDisable))&&(FnStatus == 1))//"Fn+F2"
1679   1              {
1680   1                      SET_MASK(F2_Pressed, F2Flag);           CLEAR_MASK(F2_Pressed, F12Flag); 
1681   1      
1682   1              }
1683   1              else if((IS_MASK_SET(ACPI_HOTKEY, HotkeyDisable))&&(FnStatus == 0))//"F2"
1684   1              {
1685   1                      SET_MASK(F2_Pressed, F2Flag); 
1686   1                      CLEAR_MASK(F2_Pressed, F12Flag); 
1687   1              }*///72JERRY059:-Optimize F2/F12 flag to BIOS.
1688   1              //72JERRY059:S+Optimize F2/F12 flag to BIOS.
1689   1              // ( IS_MASK_CLEAR(SYS_MISC1, ACPI_OS) )
1690   1                      {
1691   2                      SET_MASK(F2_Pressed, F2Flag); 
1692   2                      CLEAR_MASK(F2_Pressed, F12Flag); 
1693   2                      }
1694   1                      //72JERRY059:e+Optimize F2/F12 flag to BIOS.
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 29  

1695   1      }
1696          
1697          void CrisisHotkey06(BYTE event)
1698          {
1699   1              /*if((IS_MASK_CLEAR(ACPI_HOTKEY, HotkeyDisable))&&(FnStatus == 1))//"Fn+F12"
1700   1              {
1701   1                      SET_MASK(F2_Pressed, F12Flag); 
1702   1                      CLEAR_MASK(F2_Pressed, F2Flag); 
1703   1              }
1704   1              else if((IS_MASK_SET(ACPI_HOTKEY, HotkeyDisable))&&(FnStatus == 0))//"F12"
1705   1              {
1706   1                      SET_MASK(F2_Pressed, F12Flag); 
1707   1                      CLEAR_MASK(F2_Pressed, F2Flag); 
1708   1              }*///72JERRY059:-Optimize F2/F12 flag to BIOS.
1709   1              //72JERRY059:s+Optimize F2/F12 flag to BIOS.
1710   1              // ( IS_MASK_CLEAR(SYS_MISC1, ACPI_OS) )
1711   1                      {
1712   2                      SET_MASK(F2_Pressed, F12Flag); 
1713   2                      CLEAR_MASK(F2_Pressed, F2Flag); 
1714   2                      }
1715   1      
1716   1              //72JERRY059:e+Optimize F2/F12 flag to BIOS.
1717   1      }
1718          //ANGELAG001:E+.
1719          
1720          void FnHotkey01(BYTE event)
1721          {
1722   1              if(event == BREAK_EVENT)
1723   1              {
1724   2                      DebugCombineKey=0x00;
1725   2              }
1726   1              else if(event == MAKE_EVENT)
1727   1              {
1728   2                      DebugCombineKey=1;
1729   2              }
1730   1      }
1731          
1732          void FnHotkey02(BYTE event)
1733          {
1734   1              if(event == MAKE_EVENT)
1735   1              {
1736   2                      if (DebugCombineKey==1)
1737   2                              DebugCombineKey=2;
1738   2                      else
1739   2                              DebugCombineKey=0;
1740   2              }
1741   1      }
1742          
1743          void FnHotkey03(BYTE event)
1744          {
1745   1              if(event == MAKE_EVENT)
1746   1              {
1747   2                      if (DebugCombineKey==2)
1748   2                              DebugCombineKey=3;
1749   2                      else
1750   2                              DebugCombineKey=0;
1751   2              }
1752   1      }
1753          
1754          void FnHotkey04(BYTE event)
1755          {
1756   1          if(IS_MASK_CLEAR(LENOVOPMFW_Temp,EEPROM_Token))
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 30  

1757   1          {
1758   2              if(event == MAKE_EVENT)
1759   2              {
1760   3                      if (DebugCombineKey==3)
1761   3                      {
1762   4                              DebugCombineKey=4;
1763   4                              eEEPROMBank= 0x07;
1764   4                              eEEPROMAddrsss = 0xF1;                          // Save to B7 F1 (0x0001B7F1)
1765   4                              eEEPROMData     = BRAM3F;
1766   4                              Update_EEPROMMark();
1767   4                              eUpdateEEPROMCnt = 2;
1768   4                              cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
1769   4                      }
1770   3                      else
1771   3                              DebugCombineKey=0;
1772   3              }
1773   2          }
1774   1      }
1775          
1776          const sBootHotKeyStruct code asBootHotKeyStruct[]=
1777          {
1778                  { DebugkeyFn,   FnHotkey01      },
1779                  { DebugKeyEqu,  FnHotkey02      },
1780                  { DebugKeyS,    FnHotkey03      },
1781                  { DebugKeyA,    FnHotkey04      },
1782          };
1783          
1784          void CheckBootHotKey(matrix, event)
1785          {
1786   1              BYTE index;
1787   1              for(index=0x00; index<(sizeof(asBootHotKeyStruct)/sizeof(sBootHotKeyStruct)); index++)
1788   1              {
1789   2                      if(matrix==asBootHotKeyStruct[index].matrix)
1790   2                      {
1791   3                              (asBootHotKeyStruct[index].pfunction)(event);
1792   3                              return;
1793   3                      }
1794   2              }
1795   1              DebugCombineKey=0x00;
1796   1      }
1797          
1798          //change "Fn+D"to"Fn+D+P".
1799          void FnHotkeyPort80Log01(BYTE event)
1800          {
1801   1              /*if(event == BREAK_EVENT)
1802   1              {
1803   1                      CombineKeyRN=0x00;
1804   1              }
1805   1              else if(event == MAKE_EVENT)
1806   1              {
1807   1                      CombineKeyRN=1;
1808   1              }*/
1809   1      
1810   1              if((event == MAKE_EVENT)&&(FnStatus == 1))
1811   1              {
1812   2                      CombineKeyRN=1;
1813   2              }
1814   1              //ANGELAS091: s+Optimize ANGELAS032 ( press "fn+s" then release "S", flag can't be clear.)
1815   1              else if(event == BREAK_EVENT)
1816   1              {
1817   2                      CombineKeyRN=0;
1818   2              }
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 31  

1819   1              //ANGELAS091:e+ Optimize ANGELAS032 ( press "fn+s" then release "S", flag can't be clear.)
1820   1      }
1821          // change "Fn+D"to"Fn+D+P".
1822          
1823          void FnHotkeyPort80Log02(BYTE event)
1824          {
1825   1              if(event == MAKE_EVENT)
1826   1              {
1827   2                      if (CombineKeyRN==1)
1828   2                              CombineKeyRN=2;
1829   2                      else
1830   2                              CombineKeyRN=0;
1831   2              }
1832   1      }
1833          
1834          void FnHotkeyPort80Log03(BYTE event)
1835          {
1836   1              /*if(event == MAKE_EVENT)
1837   1              {
1838   1                      if (CombineKeyRN==2)
1839   1                              CombineKeyRN=3;
1840   1                      else
1841   1                              CombineKeyRN=0;
1842   1              }*/
1843   1              // 0ptimize"Fn+R"crisis recover bios follow lenovo spec(press "Fn+R" then press power button  that will e
             -nter crisis recover bios on DC or AC mode).
1844   1              if(IS_MASK_CLEAR(SYS_MISC1,BATCRISIS_FLAG))
1845   1              {
1846   2                      if(((event == MAKE_EVENT)||(event==REPEAT_EVENT))&&(FnStatus == 1))
1847   2                      {
1848   3                              SET_MASK(SYS_MISC1,Crisis_On);
1849   3                      }
1850   2                      else 
1851   2                      {
1852   3                              CLEAR_MASK(SYS_MISC1,Crisis_On);
1853   3                      }
1854   2              }
1855   1      }
1856          
1857          void FnHotkeyPort80Log04(BYTE event)
1858          {
1859   1              if(event == MAKE_EVENT)
1860   1              {
1861   2                      if (CombineKeyRN==3)
1862   2                      {
1863   3                              CombineKeyRN=4;
1864   3                              SET_MASK(CombineKeyStatus, b0FnRN);
1865   3                      }
1866   2                      else
1867   2                              CombineKeyRN=0;
1868   2              }
1869   1      }
1870          void FnHotkeyPort80Log05(BYTE event)
1871          {
1872   1              if((event == MAKE_EVENT)&&(FnStatus == 1)&&(CombineKeyRN==1))//change "Fn+D"to"Fn+D+P".
1873   1              {
1874   2                      SET_MASK(P80CMOSSts,P80CMOSDis);
1875   2                      SET_MASK(ACPI_HOTKEY, b6Cmd_NoShut);//when battery mode press FN+D£¬do not cut power¡£
1876   2              }
1877   1      }
1878          const sBootHotKeyStruct code asCheckRNStruct[]=
1879          {
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 32  

1880                  { DebugKeyD,            FnHotkeyPort80Log01     },//change "Fn+D"to"Fn+D+P".
1881                  //{ DebugKeyEqu,        FnHotkeyPort80Log02     },
1882                  { DebugKeyR,        FnHotkeyPort80Log03 },
1883                  //{ DebugKeyN,          FnHotkeyPort80Log04     },
1884                  //{ DebugKeyP,      FnHotkeyPort80Log05 },//change "Fn+D"to"Fn+D+P".  //MEILING026:remove.
1885                  { DebugKeyO,        FnHotkeyPort80Log05 }, //MEILING026:add.
1886                  { Crisiskey05,      CrisisHotkey05      }, //ANGELAG001: add
1887                  { Crisiskey06,      CrisisHotkey06      }, //ANGELAG001:add.
1888          };
1889          void CheckRNHotKey(matrix, event)
1890          {
1891   1              BYTE index;
1892   1              for(index=0x00; index<(sizeof(asCheckRNStruct)/sizeof(sBootHotKeyStruct)); index++)
1893   1              {
1894   2                      if(matrix==asCheckRNStruct[index].matrix)
1895   2                      {
1896   3                              (asCheckRNStruct[index].pfunction)(event);
1897   3                              return;
1898   3                      }
1899   2              }
1900   1              CombineKeyRN=0;
1901   1      }
1902          
1903          void FnHotkeyGPIO01(BYTE event)
1904          {
1905   1              if(event == BREAK_EVENT)
1906   1              {
1907   2                      CombineKeyIO=0x00;
1908   2              }
1909   1              else if(event == MAKE_EVENT)
1910   1              {
1911   2                      CombineKeyIO=1;
1912   2              }
1913   1      
1914   1      }
1915          
1916          void FnHotkeyGPIO02(BYTE event)
1917          {
1918   1              if(event == MAKE_EVENT)
1919   1              {
1920   2                      if (CombineKeyIO==1)
1921   2                              CombineKeyIO=2;
1922   2                      else
1923   2                              CombineKeyIO=0;
1924   2              }
1925   1      }
1926          
1927          void FnHotkeyGPIO03(BYTE event)
1928          {
1929   1              if(event == MAKE_EVENT)
1930   1              {
1931   2                      if (CombineKeyIO==2)
1932   2                              CombineKeyIO=3;
1933   2                      else
1934   2                              CombineKeyIO=0;
1935   2              }
1936   1      
1937   1      }
1938          
1939          void FnHotkeyGPIO04(BYTE event)
1940          {
1941   1              if(event == MAKE_EVENT)
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 33  

1942   1              {
1943   2                      if (CombineKeyIO==3)
1944   2                      {
1945   3                              GPIO_STATUS = 0;
1946   3                              if ( Read_RSMRST() )                            // bit0:GPIO_RSMRST
1947   3                              { SET_MASK(GPIO_STATUS,GPIO_RSMRST); }
1948   3                              if ( Read_PM_PWRBTN() )                         // bit1:GPIO_PBTN_OUT
1949   3                              { SET_MASK(GPIO_STATUS,GPIO_PBTN_OUT); }
1950   3                              if ( Read_VDDQ_PGOOD() )                                // bit2:GPIO_VDDQ_PGOOD
1951   3                              { SET_MASK(GPIO_STATUS,GPIO_VDDQ_PGOOD); }
1952   3                              if ( Read_SLPS3() )                                     // bit3:GPIO_PM_SLP_S3
1953   3                              { SET_MASK(GPIO_STATUS,GPIO_PM_SLP_S3); }
1954   3                              if ( Read_SLPS4() )                                     // bit4:GPIO_PM_SLP_S4
1955   3                              { SET_MASK(GPIO_STATUS,GPIO_PM_SLP_S4); }
1956   3                                                                                                      // bit5:GPIO_PM_SLP_S5
1957   3                              if ( Read_VR_ON() )                                     // bit6:GPIO_VR_ON
1958   3                              { SET_MASK(GPIO_STATUS,GPIO_VR_ON); }
1959   3                              if ( Read_PCH_PWROK() )                         // bit7:GPIO_PCH_PWROK
1960   3                              { SET_MASK(GPIO_STATUS,GPIO_PCH_PWROK); }
1961   3      
1962   3                              CombineKeyIO=4;
1963   3                  if(IS_MASK_CLEAR(LENOVOPMFW_Temp,EEPROM_Token))
1964   3                  {
1965   4      
1966   4                              eEEPROMBank= 0x07;
1967   4                              eEEPROMAddrsss = 0xEF;                          // Save to B7 EF (0x0001B7EF)
1968   4                              eEEPROMData     = GPIO_STATUS;
1969   4                              Update_EEPROMMark();
1970   4                              eUpdateEEPROMCnt = 2;
1971   4                              cSPIEEPROM.fbit.cSPI_ROMCopyStart=1;
1972   4                  }
1973   3      
1974   3                      }
1975   2                      else
1976   2                      { CombineKeyIO=0; }
1977   2              }
1978   1      }
1979          
1980          const sBootHotKeyStruct code asCheckIOStruct[]=
1981          {
1982                  { DebugkeyFn,   FnHotkeyGPIO01  },
1983                  { DebugKeyEqu,  FnHotkeyGPIO02  },
1984                  { DebugKeyI,    FnHotkeyGPIO03  },
1985                  { DebugKeyO,    FnHotkeyGPIO04  },
1986          };
1987          void CheckIOHotKey(matrix, event)
1988          {
1989   1              BYTE index;
1990   1              for(index=0x00; index<(sizeof(asCheckIOStruct)/sizeof(sBootHotKeyStruct)); index++)
1991   1              {
1992   2                      if(matrix==asCheckIOStruct[index].matrix)
1993   2                      {
1994   3                              (asCheckIOStruct[index].pfunction)(event);
1995   3                              return;
1996   3                      }
1997   2              }
1998   1              CombineKeyIO=0;
1999   1      }
2000          
2001          //ANGELAS032: s+ add
2002          #if shipmodesupport 
2003          void FnHotkeyBattShip01(BYTE event)
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 34  

2004          {
2005   1              if((event == MAKE_EVENT)&&(FnStatus == 1))
2006   1              {
2007   2      CombineKeyShip |= 0x01;
2008   2                              if(CombineKeyShip&0x03){
2009   3                                      ShipModeEn=0xA5; 
2010   3                                      if(SystemIsDSX){
2011   4                                  SysPowState = SYSTEM_S5;
2012   4                     RamDebug(0xFD);
2013   4                                              }
2014   3                                        CombineKeyShip = 0x00;
2015   3                              }
2016   2              }else if((event == BREAK_EVENT)||(FnStatus == 0))
2017   1                     CombineKeyShip &= ~0x01;
2018   1      }
2019          
2020          void FnHotkeyBattShip02(BYTE event)
2021          {
2022   1              if((event == MAKE_EVENT)&&(FnStatus == 1)) 
2023   1              {
2024   2                     CombineKeyShip |= 0x02;
2025   2                              if(CombineKeyShip&0x03){
2026   3                                 CombineKeyShip = 0x00;
2027   3      
2028   3                     if(SystemIsDSX){
2029   4                              RamDebug(0xFD);
2030   4                              ShipModeEn=0xA5;                
2031   4                              SysPowState = SYSTEM_S5;
2032   4                      }
2033   3               }
2034   2      }
2035   1      
2036   1      else if((event == BREAK_EVENT)||(FnStatus == 0))
2037   1                         CombineKeyShip &=~0x02;
2038   1      }
2039          const sBootHotKeyStruct code asBattShipHotKeyStruct[]=
2040          {
2041                  { DebugKeyS,            FnHotkeyBattShip01      },
2042                  { DebugKeyV,        FnHotkeyBattShip02  },  //Fn+S+V
2043          };
2044          void CheckBattShipHotKey(matrix, event)
2045          {
2046   1              BYTE index;
2047   1              for(index=0x00; index<(sizeof(asBattShipHotKeyStruct)/sizeof(sBootHotKeyStruct)); index++)
2048   1              {
2049   2                      if(matrix==asBattShipHotKeyStruct[index].matrix)
2050   2                      {
2051   3                              (asBattShipHotKeyStruct[index].pfunction)(event);
2052   3                              return;
2053   3                      }
2054   2              }
2055   1              CombineKeyShip=0x00;
2056   1              CombineKeyShip1=0x00; //ANGELAS056:add
2057   1      }
2058          #endif
2059          //ANGELAS032:e+ add
2060          //----------------------------------------------------------------------------
2061          // table_entry : value of keyboard matrix table. for example Rc_ROM_Tables[]
2062          // event : key MAKE_EVENT or BREAK_EVENT or REPEAT_EVENT
2063          //----------------------------------------------------------------------------
2064          void OEM_Hook_Send_Key(BYTE table_entry, BYTE event)
2065          {
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 35  

2066   1              //if(SystemIsS0)
2067   1              //{             
2068   1                      CheckBootHotKey(table_entry,event);
2069   1                      CheckRNHotKey(table_entry,event);
2070   1                      CheckIOHotKey(table_entry,event);
2071   1                      //ANGELAS032: s+ add
2072   1                      #if shipmodesupport
2073   1                      if((!Read_AC_IN())&&(SystemIsDSX))
2074   1                      {
2075   2                              CheckBattShipHotKey(table_entry,event);
2076   2                      }
2077   1                      #endif
2078   1                      if(SystemIsS4||SystemIsS5||SystemIsDSX)//HEGANGS021:one key wake
2079   1                      {
2080   2                              if(event==BREAK_EVENT)
2081   2                              S4S5_KeyWake(1);
2082   2                      }
2083   1                      //ANGELAS032: e+ add
2084   1              //}     
2085   1      }
2086          
2087          //----------------------------------------------------------------------------
2088          // Return : 0xFF --> Send_Key function will be break; (no any scan code to host)
2089          //----------------------------------------------------------------------------
2090          BYTE OEM_Hook_Skip_Send_Key(void)
2091          {
2092   1          return(0x00);
2093   1      }
2094          
2095          //-----------------------------------------------------------------------------
2096          // Keyboard hook function (KSO0 - KSO15)
2097          // KSIValus : keyboard KSI
2098          // KSOValus : keyboard KSO
2099          //-----------------------------------------------------------------------------
2100          void Hook_keyboard(BYTE KSIValus, BYTE KSOValus)
2101          {
2102   1      
2103   1      }
2104          
2105          //-----------------------------------------------------------------------------
2106          // Keyboard hook function (KSO16 - KSO17 and GPIO KSO)
2107          // KSIValus : keyboard KSI
2108          // KSOValus : keyboard KSO
2109          //-----------------------------------------------------------------------------
2110          void Et_Hook_keyboard(BYTE KSIValus, BYTE KSOValus)
2111          {
2112   1      
2113   1      }
2114          
2115          /* ---------------------------------------------------------------------------
2116           * FUNCTION: Hook_Setup_Scanner_Pntr - to define the possible scanner tables
2117           *
2118           *     0   Rc_RAM_Table
2119           *     1   ROM Table 1
2120           *     ...
2121           * ------------------------------------------------------------------------ */
2122          void Hook_Setup_Scanner_Pntr(void)
2123          {
2124   1              #if SUPPORT_KB_RAM_TABLE
2125   1              Scanner_RAM_Pntr = &KB_RAM_Table;
2126   1              Extendkey_RAM_Pntr = &ExKB_RAM_Table;
2127   1              LoadKBMatrixToRAM();
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 36  

2128   1              #else
                      Scanner_Table_Pntr = &Rc_ROM_Tables;
                      Extendkey_Table_Pntr = &EtKey_ROM_Tables;
                      #endif
2132   1      }
2133          
2134          /* ----------------------------------------------------------------------------
2135           * FUNCTION: LoadKBMatrixToRAM
2136           * ------------------------------------------------------------------------- */
2137          void LoadKBMatrixToRAM(void)
2138          {
2139   1              //if( uMBID & 0x40 )  //15'' for Zx10 //martin0219 check
2140   1          //if( uMBID & 0x01 )   //15'' for Zx10 // check G48
2141   1          //if( ( uMBID & 0x03 == 0x01 ) ||( uMBID & 0x03 == 0x02 ) ) //ANGELAS008: Modidy board ID for check 15
             -" and 17"
2142   1          if( uMBID & 0x01 )   //15''  //ANGELAS009: Remove ANGELAS008
2143   1          {
2144   2                      if ( (cKBStatus & 0x03) != 0x03 )
2145   2                      {
2146   3                      for( ITempB06=0; ITempB06<0x80; ITempB06++ )    //15" US,UK and JP.
2147   3                      {
2148   4                              Tmp_XPntr = ( KB_RAM_Table + ITempB06 );
2149   4                          *Tmp_XPntr = Rc_ROM_Tables[ITempB06];
2150   4                      }
2151   3                      }
2152   2                      else
2153   2                      {
2154   3                          for( ITempB06=0; ITempB06<0x80; ITempB06++ )        //15" Brazil.
2155   3                      {
2156   4                              Tmp_XPntr = ( KB_RAM_Table + ITempB06 );
2157   4                          *Tmp_XPntr = Rc_ROM_Tables_15BR[ITempB06];
2158   4                      }
2159   3                      }
2160   2      
2161   2              for( ITempB06=0; ITempB06<0x18; ITempB06++ )
2162   2              {
2163   3                  Tmp_XPntr = ( ExKB_RAM_Table + ITempB06 );
2164   3                  *Tmp_XPntr = EtKey_ROM_Tables[ITempB06];
2165   3              }
2166   2          }
2167   1          else     //14'' for Zx10 // check
2168   1          {
2169   2                      if ( (cKBStatus & 0x03) != 0x03 )
2170   2                      {
2171   3                      for( ITempB06=0; ITempB06<0x80; ITempB06++ )    //14" US,UK and JP.
2172   3                      {
2173   4                              Tmp_XPntr = ( KB_RAM_Table + ITempB06 );
2174   4                          *Tmp_XPntr = Rc_ROM_Tables_14[ITempB06];
2175   4                      }
2176   3                      }
2177   2                      else
2178   2                      {
2179   3                          for( ITempB06=0; ITempB06<0x80; ITempB06++ )        //14" Brazil.
2180   3                      {
2181   4                          Tmp_XPntr = ( KB_RAM_Table + ITempB06 );
2182   4                          *Tmp_XPntr = Rc_ROM_Tables_14BR[ITempB06];
2183   4                      }
2184   3                      }
2185   2      
2186   2              for( ITempB06=0; ITempB06<0x18; ITempB06++ )
2187   2              {
2188   3                  Tmp_XPntr = ( ExKB_RAM_Table + ITempB06 );
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 37  

2189   3                  *Tmp_XPntr = EtKey_ROM_Tables_1[ITempB06];
2190   3              }
2191   2          }
2192   1      }
2193          
2194          //-----------------------------------------------------------------------------
2195          // The function of setting GPIO scan pin to high
2196          //-----------------------------------------------------------------------------
2197          void Hook_SetGPIOScanPinH(void)
2198          {
2199   1      
2200   1      }
2201          
2202          //-----------------------------------------------------------------------------
2203          // The function of setting GPIO scan pin to low
2204          //-----------------------------------------------------------------------------
2205          void Hook_SetGPIOScanPinL(void)
2206          {
2207   1      
2208   1      }
2209          
2210          //-----------------------------------------------------------------------------
2211          // The function of setting GPIO scan pin output
2212          //-----------------------------------------------------------------------------
2213          void Hook_SetGPIOScanPinCtrl(void)
2214          {
2215   1      
2216   1      }
2217          
2218          //-----------------------------------------------------------------------------
2219          // Fn key make
2220          //-----------------------------------------------------------------------------
2221          void Hook_Fn_Key_Make(void)
2222          {
2223   1              if ( IS_MASK_SET(cCmd, b6TestBtnEn) )
2224   1              {
2225   2                      Buffer_Key(0xE0);                   //
2226   2              Buffer_Key(0x16);                       // page down make
2227   2                      F_Service_SEND = 1;
2228   2              }
2229   1              FnStatus = 1;                                                   // for factory
2230   1      
2231   1      }
2232          
2233          //-----------------------------------------------------------------------------
2234          // Fn key break
2235          //-----------------------------------------------------------------------------
2236          void Hook_Fn_Key_Break(void)
2237          {
2238   1      /*      if (SystemIsS3)
2239   1              {
2240   1                      if((Read_LID_SW_IN())&&(Read_LID_PAD()))
2241   1                      {
2242   1                              PWSeqStep = 1;
2243   1                              PowSeqDelay = 1;
2244   1                              RamDebug(0x30);         //T045A
2245   1                              SysPowState=SYSTEM_S3_S0;
2246   1                      }
2247   1              }*/
2248   1      //MEILING006: S+Fixed The display mode auto change to the nearly mode when change the mode via lenovo hotk
             -ey.
2249   1              if ( IS_MASK_SET(SysStatus, FnF3WinKeyDn) ) //FnF3PKeyUp
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 38  

2250   1              {
2251   2                      if(IS_MASK_CLEAR(SysStatus, FnF3PKeyUp))
2252   2                      {
2253   3                              simple_code(0x4D,BREAK_EVENT);  // P Key.
2254   3                      }
2255   2                      e0_prefix_code(0x1F,BREAK_EVENT);       // Win Key.
2256   2              
2257   2                      SysStatus &= 0xF3;      // Clear Win+P Key.
2258   2              
2259   2                      F_Service_SEND = 1;
2260   2                      RamDebug(0x04);
2261   2              }
2262   1              //MEILING006: E+Fixed The display mode auto change to the nearly mode when change the mode via lenovo hot
             -key.
2263   1      
2264   1              if ( IS_MASK_SET(cCmd, b6TestBtnEn) )
2265   1              {
2266   2                      Buffer_Key(0xE0);                                       //
2267   2                      Buffer_Key(0xF0);                                       //
2268   2                      Buffer_Key(0x16);                                       // page down make
2269   2                      F_Service_SEND = 1;
2270   2              }
2271   1              FnStatus = 0;                                                   // for factory
2272   1      }
2273          
2274          //-----------------------------------------------------------------------------
2275          // Return : 0xFF --> sskey2_A2_table contains bit6
2276          //-----------------------------------------------------------------------------
2277          BYTE Hook_calc_index_comb_BIT6(void)
2278          {
2279   1          return(0x00);
2280   1      }
2281          
2282          //-----------------------------------------------------------------------------
2283          // Return : 0xFF --> sskey2_A2_table contains bit7
2284          //-----------------------------------------------------------------------------
2285          BYTE Hook_calc_index_comb_BIT7(void)
2286          {
2287   1          return(0x00);
2288   1      }
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 39  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com010E (BEGIN)
0000         L?0271:
0000 AF00        E     MOV     R7,ITempB06
0002 EF                MOV     A,R7
0003         L?0272:
0003 93                MOVC    A,@A+DPTR
0004 FF                MOV     R7,A
0005 18                DEC     R0
0006 E6                MOV     A,@R0
0007 FC                MOV     R4,A
0008 08                INC     R0
0009 E6                MOV     A,@R0
000A F582              MOV     DPL,A
000C 8C83              MOV     DPH,R4
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
0010 0500        E     INC     ITempB06
0012 E500        E     MOV     A,ITempB06
0014 22                RET     
0015         L?0273:
0015 900000      E     MOV     DPTR,#EM9_NEWFUN
0018 E0                MOVX    A,@DPTR
0019 4401              ORL     A,#01H
001B         L?0274:
001B F0                MOVX    @DPTR,A
001C         L?0275:
001C 7402              MOV     A,#02H
001E         L?0276:
001E 900000      E     MOV     DPTR,#uVPCeventSource
0021         L?0277:
0021 F0                MOVX    @DPTR,A
0022 E4                CLR     A
0023 900000      E     MOV     DPTR,#uVPCeventSource2
0026 F0                MOVX    @DPTR,A
0027 7F44              MOV     R7,#044H
0029 22                RET     
002A         L?0278:
002A         L?0279:
002A AF00        E     MOV     R7,ITempB06
002C 7400        E     MOV     A,#LOW KB_RAM_Table
002E 2F                ADD     A,R7
002F F582              MOV     DPL,A
0031 E4                CLR     A
0032 3400        E     ADDC    A,#HIGH KB_RAM_Table
0034         L?0280:
0034 AF82              MOV     R7,DPL
0036 7800        E     MOV     R0,#LOW Tmp_XPntr
0038 F6                MOV     @R0,A
0039 08                INC     R0
003A EF                MOV     A,R7
003B F6                MOV     @R0,A
003C 22                RET     
003D         L?0281:
003D         L?0282:
003D EE                MOV     A,R6
003E F0                MOVX    @DPTR,A
003F A3                INC     DPTR
0040 EF                MOV     A,R7
0041 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 40  

0042 A3                INC     DPTR
0043 EC                MOV     A,R4
0044 F0                MOVX    @DPTR,A
0045 A3                INC     DPTR
0046 ED                MOV     A,R5
0047 F0                MOVX    @DPTR,A
0048 E4                CLR     A
0049 A3                INC     DPTR
004A F0                MOVX    @DPTR,A
004B 22                RET     
004C         L?0283:
004C         L?0284:
004C A3                INC     DPTR
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F A3                INC     DPTR
0050 E0                MOVX    A,@DPTR
0051 25E0              ADD     A,ACC
0053 25E0              ADD     A,ACC
0055 22                RET     
0056         L?0285:
0056         L?0286:
0056 F583              MOV     DPH,A
0058 120000      E     LCALL   ?C?PLDCODE
005B 8982              MOV     DPL,R1
005D 8A83              MOV     DPH,R2
005F 22                RET     
0060         L?0287:
0060         L?0288:
0060 900000      R     MOV     DPTR,#table_entry
0063 E0                MOVX    A,@DPTR
0064 FF                MOV     R7,A
0065 7E00              MOV     R6,#00H
0067 A3                INC     DPTR
0068 E0                MOVX    A,@DPTR
0069 FD                MOV     R5,A
006A 7C00              MOV     R4,#00H
006C 22                RET     
006D         L?0289:
006D 7405              MOV     A,#05H
006F F0                MOVX    @DPTR,A
0070 900000      E     MOV     DPTR,#uVPCeventSource
0073 7410              MOV     A,#010H
0075 F0                MOVX    @DPTR,A
0076 E4                CLR     A
0077 900000      E     MOV     DPTR,#uVPCeventSource2
007A F0                MOVX    @DPTR,A
007B 900000      E     MOV     DPTR,#SYS_STATUS
007E E0                MOVX    A,@DPTR
007F 5407              ANL     A,#07H
0081 22                RET     
0082         L?0290:
0082         L?0291:
0082 EF                MOV     A,R7
0083 F0                MOVX    @DPTR,A
0084 900000      E     MOV     DPTR,#SYS_MISC1
0087 E0                MOVX    A,@DPTR
0088 22                RET     
0089         L?0292:
0089 E0                MOVX    A,@DPTR
008A 14                DEC     A
008B         L?0293:
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 41  

008B F0                MOVX    @DPTR,A
008C E0                MOVX    A,@DPTR
008D 900000      E     MOV     DPTR,#cRecoveryBrightValue
0090 F0                MOVX    @DPTR,A
0091 22                RET     
0092         L?0294:
0092         L?0295:
0092 900000      E     MOV     DPTR,#uReserve07
0095 E0                MOVX    A,@DPTR
0096 C4                SWAP    A
0097 13                RRC     A
0098 5407              ANL     A,#07H
009A 22                RET     
009B         L?0296:
009B 900000      E     MOV     DPTR,#eUpdateEEPROMCnt
009E 7402              MOV     A,#02H
00A0 F0                MOVX    @DPTR,A
00A1 900000      E     MOV     DPTR,#cSPIEEPROM
00A4 E0                MOVX    A,@DPTR
00A5 4404              ORL     A,#04H
00A7 F0                MOVX    @DPTR,A
00A8 22                RET     
00A9         L?0297:
00A9 AF00        E     MOV     R7,ITempB06
00AB 7400        E     MOV     A,#LOW ExKB_RAM_Table
00AD 2F                ADD     A,R7
00AE F582              MOV     DPL,A
00B0 E4                CLR     A
00B1 3400        E     ADDC    A,#HIGH ExKB_RAM_Table
00B3 22                RET     
00B4         L?0298:
00B4 900000      E     MOV     DPTR,#eEEPROMBank
00B7 7407              MOV     A,#07H
00B9 F0                MOVX    @DPTR,A
00BA 900000      E     MOV     DPTR,#eEEPROMAddrsss
00BD 22                RET     
00BE         L?0299:
00BE 900000      E     MOV     DPTR,#ShipModeEn
00C1 74A5              MOV     A,#0A5H
00C3 F0                MOVX    @DPTR,A
00C4 900000      E     MOV     DPTR,#SysPowState
00C7 22                RET     
             ; FUNCTION Com010E (END)

             ; FUNCTION _HotKey_Fn_F1 (BEGIN)
                                           ; SOURCE LINE # 221
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 224
0003 120000      R     LCALL   L?0290
0006 30E720            JNB     ACC.7,?C0005
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 7004              JNZ     ?C0002
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
000F 7FE0              MOV     R7,#0E0H
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 230
0011 800E              SJMP    ?C0262
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 42  

0013         ?C0002:
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0013 900000      R     MOV     DPTR,#event
0016 E0                MOVX    A,@DPTR
0017 B4010F            CJNE    A,#01H,?C0005
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
001A 7FE0              MOV     R7,#0E0H
001C 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 236
001F 7FF0              MOV     R7,#0F0H
0021         ?C0262:
0021 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 237
0024 7F23              MOV     R7,#023H
0026 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 238
                                           ; SOURCE LINE # 239
                                           ; SOURCE LINE # 240
                                           ; SOURCE LINE # 241
0029         ?C0005:
0029 22                RET     
             ; FUNCTION _HotKey_Fn_F1 (END)

             ; FUNCTION _HotKey_Fn_F2 (BEGIN)
                                           ; SOURCE LINE # 246
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
0003 120000      R     LCALL   L?0290
0006 30E723            JNB     ACC.7,?C0011
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 6003              JZ      ?C0008
000F B40204            CJNE    A,#02H,?C0007
0012         ?C0008:
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 252
0012 7FE0              MOV     R7,#0E0H
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
0014 800E              SJMP    ?C0263
0016         ?C0007:
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
0016 900000      R     MOV     DPTR,#event
0019 E0                MOVX    A,@DPTR
001A B4010F            CJNE    A,#01H,?C0011
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
001D 7FE0              MOV     R7,#0E0H
001F 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 260
0022 7FF0              MOV     R7,#0F0H
0024         ?C0263:
0024 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 261
0027 7F21              MOV     R7,#021H
0029 120000      E     LCALL   _Buffer_Key
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 43  

                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
                                           ; SOURCE LINE # 265
002C         ?C0011:
002C 22                RET     
             ; FUNCTION _HotKey_Fn_F2 (END)

             ; FUNCTION _HotKey_Fn_F3 (BEGIN)
                                           ; SOURCE LINE # 270
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 272
0003 120000      R     LCALL   L?0291
0006 30E723            JNB     ACC.7,?C0017
                                           ; SOURCE LINE # 273
                                           ; SOURCE LINE # 274
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 6003              JZ      ?C0014
000F B40204            CJNE    A,#02H,?C0013
0012         ?C0014:
                                           ; SOURCE LINE # 275
                                           ; SOURCE LINE # 276
0012 7FE0              MOV     R7,#0E0H
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
0014 800E              SJMP    ?C0264
0016         ?C0013:
                                           ; SOURCE LINE # 280
                                           ; SOURCE LINE # 281
0016 900000      R     MOV     DPTR,#event
0019 E0                MOVX    A,@DPTR
001A B4010F            CJNE    A,#01H,?C0017
                                           ; SOURCE LINE # 282
                                           ; SOURCE LINE # 283
001D 7FE0              MOV     R7,#0E0H
001F 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 284
0022 7FF0              MOV     R7,#0F0H
0024         ?C0264:
0024 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 285
0027 7F32              MOV     R7,#032H
0029 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
002C         ?C0017:
002C 22                RET     
             ; FUNCTION _HotKey_Fn_F3 (END)

             ; FUNCTION _HotKey_Fn_F4 (BEGIN)
                                           ; SOURCE LINE # 294
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 295
                                           ; SOURCE LINE # 297
0000 EF                MOV     A,R7
0001 7016              JNZ     ?C0020
                                           ; SOURCE LINE # 298
                                           ; SOURCE LINE # 299
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 44  

0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E70F            JNB     ACC.7,?C0020
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
000A E4                CLR     A
000B 900000      E     MOV     DPTR,#uVPCeventSource
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 302
000F 900000      E     MOV     DPTR,#uVPCeventSource2
0012 04                INC     A
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
0014 7F44              MOV     R7,#044H
0016 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 342
0019         ?C0020:
0019 22                RET     
             ; FUNCTION _HotKey_Fn_F4 (END)

             ; FUNCTION _HotKey_Fn_F5 (BEGIN)
                                           ; SOURCE LINE # 347
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 348
                                           ; SOURCE LINE # 349
0003 120000      R     LCALL   L?0291
0006 30E71C            JNB     ACC.7,?C0026
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 6011              JZ      ?C0265
000F B40202            CJNE    A,#02H,?C0022
0012         ?C0023:
                                           ; SOURCE LINE # 352
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
0012 800C              SJMP    ?C0265
0014         ?C0022:
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
0014 900000      R     MOV     DPTR,#event
0017 E0                MOVX    A,@DPTR
0018 B4010A            CJNE    A,#01H,?C0026
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 359
001B 7FF0              MOV     R7,#0F0H
001D 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 360
0020         ?C0265:
0020 7F03              MOV     R7,#03H
0022 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 362
                                           ; SOURCE LINE # 363
                                           ; SOURCE LINE # 364
0025         ?C0026:
0025 22                RET     
             ; FUNCTION _HotKey_Fn_F5 (END)

C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 45  

             ; FUNCTION _HotKey_Fn_F6 (BEGIN)
                                           ; SOURCE LINE # 369
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 371
                                           ; SOURCE LINE # 374
0000 900000      E     MOV     DPTR,#SYS_MISC1
0003 E0                MOVX    A,@DPTR
0004 30E72D            JNB     ACC.7,?C0031
                                           ; SOURCE LINE # 375
                                           ; SOURCE LINE # 376
0007 EF                MOV     A,R7
0008 7022              JNZ     ?C0028
                                           ; SOURCE LINE # 377
                                           ; SOURCE LINE # 378
000A 900000      E     MOV     DPTR,#GPDRJ
000D E0                MOVX    A,@DPTR
000E 30E30D            JNB     ACC.3,?C0029
                                           ; SOURCE LINE # 379
                                           ; SOURCE LINE # 380
0011 E0                MOVX    A,@DPTR
0012 54F7              ANL     A,#0F7H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 381
0015 900000      E     MOV     DPTR,#pDevStatus1
0018 E0                MOVX    A,@DPTR
0019 4480              ORL     A,#080H
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 382
001C 800E              SJMP    ?C0028
001E         ?C0029:
                                           ; SOURCE LINE # 384
                                           ; SOURCE LINE # 385
001E 900000      E     MOV     DPTR,#GPDRJ
0021 E0                MOVX    A,@DPTR
0022 4408              ORL     A,#08H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 386
0025 900000      E     MOV     DPTR,#pDevStatus1
0028 E0                MOVX    A,@DPTR
0029 547F              ANL     A,#07FH
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 387
                                           ; SOURCE LINE # 389
002C         ?C0028:
                                           ; SOURCE LINE # 390
002C 7420              MOV     A,#020H
                                           ; SOURCE LINE # 391
                                           ; SOURCE LINE # 392
002E 120000      R     LCALL   L?0276
0031 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 395
                                           ; SOURCE LINE # 496
0034         ?C0031:
0034 22                RET     
             ; FUNCTION _HotKey_Fn_F6 (END)

             ; FUNCTION _HotKey_Fn_F7 (BEGIN)
                                           ; SOURCE LINE # 501
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 502
                                           ; SOURCE LINE # 505
0000 EF                MOV     A,R7
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 46  

0001 7017              JNZ     ?C0034
                                           ; SOURCE LINE # 506
                                           ; SOURCE LINE # 507
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E710            JNB     ACC.7,?C0034
                                           ; SOURCE LINE # 508
                                           ; SOURCE LINE # 509
000A E4                CLR     A
000B 900000      E     MOV     DPTR,#uVPCeventSource
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 510
000F 900000      E     MOV     DPTR,#uVPCeventSource2
0012 7420              MOV     A,#020H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 511
0015 7F44              MOV     R7,#044H
0017 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 513
                                           ; SOURCE LINE # 514
                                           ; SOURCE LINE # 517
001A         ?C0034:
001A 22                RET     
             ; FUNCTION _HotKey_Fn_F7 (END)

             ; FUNCTION _HotKey_Fn_F8 (BEGIN)
                                           ; SOURCE LINE # 522
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 523
                                           ; SOURCE LINE # 525
0000 EF                MOV     A,R7
0001 7020              JNZ     ?C0037
                                           ; SOURCE LINE # 526
                                           ; SOURCE LINE # 527
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E719            JNB     ACC.7,?C0037
                                           ; SOURCE LINE # 528
                                           ; SOURCE LINE # 529
000A 900000      E     MOV     DPTR,#LENOVODEVICE
000D E0                MOVX    A,@DPTR
000E 6410              XRL     A,#010H
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 530
0011 900000      E     MOV     DPTR,#uVPCeventSource
0014 7480              MOV     A,#080H
                                           ; SOURCE LINE # 531
                                           ; SOURCE LINE # 532
0016 120000      R     LCALL   L?0277
0019 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 533
001C 900000      E     MOV     DPTR,#pDevStus
001F E0                MOVX    A,@DPTR
0020 6410              XRL     A,#010H
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 534
                                           ; SOURCE LINE # 535
                                           ; SOURCE LINE # 576
0023         ?C0037:
0023 22                RET     
             ; FUNCTION _HotKey_Fn_F8 (END)

C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 47  

             ; FUNCTION _HotKey_Fn_F9 (BEGIN)
                                           ; SOURCE LINE # 581
0000 900000      R     MOV     DPTR,#event
                                           ; SOURCE LINE # 582
                                           ; SOURCE LINE # 584
0003 120000      R     LCALL   L?0291
0006 30E737            JNB     ACC.7,?C0043
                                           ; SOURCE LINE # 585
                                           ; SOURCE LINE # 586
0009 900000      R     MOV     DPTR,#event
000C E0                MOVX    A,@DPTR
000D 6003              JZ      ?C0040
000F B4020E            CJNE    A,#02H,?C0039
0012         ?C0040:
                                           ; SOURCE LINE # 587
                                           ; SOURCE LINE # 588
0012 7FE0              MOV     R7,#0E0H
0014 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 589
0017 7F1F              MOV     R7,#01FH
0019 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 590
001C 7F4B              MOV     R7,#04BH
                                           ; SOURCE LINE # 591
001E 801D              SJMP    ?C0266
0020         ?C0039:
                                           ; SOURCE LINE # 593
                                           ; SOURCE LINE # 594
0020 900000      R     MOV     DPTR,#event
0023 E0                MOVX    A,@DPTR
0024 B40119            CJNE    A,#01H,?C0043
                                           ; SOURCE LINE # 595
                                           ; SOURCE LINE # 596
0027 7FF0              MOV     R7,#0F0H
0029 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 597
002C 7F4B              MOV     R7,#04BH
002E 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 598
0031 7FE0              MOV     R7,#0E0H
0033 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 599
0036 7FF0              MOV     R7,#0F0H
0038 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 600
003B 7F1F              MOV     R7,#01FH
003D         ?C0266:
003D 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 601
                                           ; SOURCE LINE # 602
                                           ; SOURCE LINE # 603
                                           ; SOURCE LINE # 675
0040         ?C0043:
0040 22                RET     
             ; FUNCTION _HotKey_Fn_F9 (END)

             ; FUNCTION _HotKey_Fn_F10 (BEGIN)
                                           ; SOURCE LINE # 680
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 681
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 48  

                                           ; SOURCE LINE # 683
0005 900000      E     MOV     DPTR,#ACPI_HOTKEY
0008 E0                MOVX    A,@DPTR
0009 30E348            JNB     ACC.3,?C0044
                                           ; SOURCE LINE # 684
                                           ; SOURCE LINE # 685
000C 900000      R     MOV     DPTR,#event
000F E0                MOVX    A,@DPTR
0010 FD                MOV     R5,A
0011 7024              JNZ     ?C0045
                                           ; SOURCE LINE # 686
                                           ; SOURCE LINE # 687
0013 900000      E     MOV     DPTR,#SYS_MISC1
0016 E0                MOVX    A,@DPTR
0017 30E71D            JNB     ACC.7,?C0045
                                           ; SOURCE LINE # 688
                                           ; SOURCE LINE # 689
001A 900000      E     MOV     DPTR,#SysStatus
001D E0                MOVX    A,@DPTR
001E 20E20C            JB      ACC.2,?C0047
                                           ; SOURCE LINE # 690
                                           ; SOURCE LINE # 691
0021 7F1F              MOV     R7,#01FH
0023 120000      E     LCALL   _e0_prefix_code
                                           ; SOURCE LINE # 692
0026 900000      E     MOV     DPTR,#SysStatus
0029 E0                MOVX    A,@DPTR
002A 4404              ORL     A,#04H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 693
002D         ?C0047:
                                           ; SOURCE LINE # 694
002D 900000      R     MOV     DPTR,#event
0030 E0                MOVX    A,@DPTR
0031 FD                MOV     R5,A
0032 7F4D              MOV     R7,#04DH
0034 120000      E     LCALL   _simple_code
                                           ; SOURCE LINE # 695
                                           ; SOURCE LINE # 696
0037         ?C0045:
                                           ; SOURCE LINE # 698
0037 900000      R     MOV     DPTR,#event
003A E0                MOVX    A,@DPTR
003B FD                MOV     R5,A
003C 6401              XRL     A,#01H
003E 7052              JNZ     ?C0056
                                           ; SOURCE LINE # 699
                                           ; SOURCE LINE # 700
0040 900000      E     MOV     DPTR,#SYS_MISC1
0043 E0                MOVX    A,@DPTR
0044 30E74B            JNB     ACC.7,?C0056
                                           ; SOURCE LINE # 701
                                           ; SOURCE LINE # 702
0047 7F4D              MOV     R7,#04DH
0049 120000      E     LCALL   _simple_code
                                           ; SOURCE LINE # 703
004C 900000      E     MOV     DPTR,#SysStatus
004F E0                MOVX    A,@DPTR
0050 4408              ORL     A,#08H
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 704
                                           ; SOURCE LINE # 705
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 49  

                                           ; SOURCE LINE # 706
0053 22                RET     
0054         ?C0044:
                                           ; SOURCE LINE # 708
                                           ; SOURCE LINE # 709
0054 900000      E     MOV     DPTR,#SYS_MISC1
0057 E0                MOVX    A,@DPTR
0058 30E737            JNB     ACC.7,?C0056
                                           ; SOURCE LINE # 710
                                           ; SOURCE LINE # 711
005B 900000      R     MOV     DPTR,#event
005E E0                MOVX    A,@DPTR
005F 6003              JZ      ?C0053
0061 B4020E            CJNE    A,#02H,?C0052
0064         ?C0053:
                                           ; SOURCE LINE # 712
                                           ; SOURCE LINE # 713
0064 7FE0              MOV     R7,#0E0H
0066 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 714
0069 7F1F              MOV     R7,#01FH
006B 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 715
006E 7F4D              MOV     R7,#04DH
                                           ; SOURCE LINE # 716
0070 801D              SJMP    ?C0267
0072         ?C0052:
                                           ; SOURCE LINE # 718
                                           ; SOURCE LINE # 719
0072 900000      R     MOV     DPTR,#event
0075 E0                MOVX    A,@DPTR
0076 B40119            CJNE    A,#01H,?C0056
                                           ; SOURCE LINE # 720
                                           ; SOURCE LINE # 721
0079 7FF0              MOV     R7,#0F0H
007B 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 722
007E 7F4D              MOV     R7,#04DH
0080 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 723
0083 7FE0              MOV     R7,#0E0H
0085 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 724
0088 7FF0              MOV     R7,#0F0H
008A 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 725
008D 7F1F              MOV     R7,#01FH
008F         ?C0267:
008F 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 726
                                           ; SOURCE LINE # 727
                                           ; SOURCE LINE # 728
                                           ; SOURCE LINE # 729
                                           ; SOURCE LINE # 754
0092         ?C0056:
0092 22                RET     
             ; FUNCTION _HotKey_Fn_F10 (END)

             ; FUNCTION _HotKey_Fn_F11 (BEGIN)
                                           ; SOURCE LINE # 759
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 50  

0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 760
                                           ; SOURCE LINE # 761
0005 6401              XRL     A,#01H
0007 603E              JZ      ?C0057
                                           ; SOURCE LINE # 762
                                           ; SOURCE LINE # 763
0009 900000      E     MOV     DPTR,#cBrightDnDelayCnt
000C E0                MOVX    A,@DPTR
000D 7031              JNZ     ?C0058
                                           ; SOURCE LINE # 764
                                           ; SOURCE LINE # 765
                                           ; SOURCE LINE # 766
                                           ; SOURCE LINE # 767
                                           ; SOURCE LINE # 769
000F 120000      R     LCALL   L?0289
0012 6022              JZ      ?C0059
                                           ; SOURCE LINE # 770
                                           ; SOURCE LINE # 771
0014 E0                MOVX    A,@DPTR
0015 5407              ANL     A,#07H
0017 6403              XRL     A,#03H
0019 7016              JNZ     ?C0060
                                           ; SOURCE LINE # 772
                                           ; SOURCE LINE # 773
001B 900000      E     MOV     DPTR,#nBrightValue
001E E0                MOVX    A,@DPTR
001F 6003              JZ      ?C0061
                                           ; SOURCE LINE # 774
                                           ; SOURCE LINE # 775
                                           ; SOURCE LINE # 776
0021 120000      R     LCALL   L?0292
                                           ; SOURCE LINE # 777
0024         ?C0061:
                                           ; SOURCE LINE # 778
0024 120000      R     LCALL   L?0294
0027 30E029            JNB     ACC.0,?C0069
                                           ; SOURCE LINE # 779
                                           ; SOURCE LINE # 780
002A 7F44              MOV     R7,#044H
002C 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 781
                                           ; SOURCE LINE # 782
                                           ; SOURCE LINE # 783
002F 8000              SJMP    ?C0268
0031         ?C0060:
                                           ; SOURCE LINE # 785
                                           ; SOURCE LINE # 786
0031         ?C0268:
0031 7F11              MOV     R7,#011H
0033 020000      E     LJMP    _ECQEvent
                                           ; SOURCE LINE # 787
                                           ; SOURCE LINE # 788
0036         ?C0059:
                                           ; SOURCE LINE # 791
                                           ; SOURCE LINE # 792
0036 900000      E     MOV     DPTR,#nBrightValue
0039 E0                MOVX    A,@DPTR
003A 6017              JZ      ?C0069
                                           ; SOURCE LINE # 793
                                           ; SOURCE LINE # 794
                                           ; SOURCE LINE # 795
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 51  

003C 120000      R     LCALL   L?0292
                                           ; SOURCE LINE # 796
                                           ; SOURCE LINE # 797
                                           ; SOURCE LINE # 798
003F 22                RET     
0040         ?C0058:
                                           ; SOURCE LINE # 800
                                           ; SOURCE LINE # 801
0040 900000      E     MOV     DPTR,#cBrightDnDelayCnt
0043 E0                MOVX    A,@DPTR
0044 14                DEC     A
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 802
                                           ; SOURCE LINE # 803
0046 22                RET     
0047         ?C0057:
                                           ; SOURCE LINE # 804
0047 900000      R     MOV     DPTR,#event
004A E0                MOVX    A,@DPTR
004B B40105            CJNE    A,#01H,?C0069
                                           ; SOURCE LINE # 805
                                           ; SOURCE LINE # 806
004E E4                CLR     A
004F 900000      E     MOV     DPTR,#cBrightDnDelayCnt
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 807
                                           ; SOURCE LINE # 809
0053         ?C0069:
0053 22                RET     
             ; FUNCTION _HotKey_Fn_F11 (END)

             ; FUNCTION _HotKey_Fn_F12 (BEGIN)
                                           ; SOURCE LINE # 814
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 815
                                           ; SOURCE LINE # 816
0005 6401              XRL     A,#01H
0007 6048              JZ      ?C0070
                                           ; SOURCE LINE # 817
                                           ; SOURCE LINE # 818
0009 900000      E     MOV     DPTR,#cBrightUpDelayCnt
000C E0                MOVX    A,@DPTR
000D 703B              JNZ     ?C0071
                                           ; SOURCE LINE # 819
                                           ; SOURCE LINE # 820
                                           ; SOURCE LINE # 821
                                           ; SOURCE LINE # 822
                                           ; SOURCE LINE # 824
000F 120000      R     LCALL   L?0289
0012 6027              JZ      ?C0072
                                           ; SOURCE LINE # 825
                                           ; SOURCE LINE # 826
0014 E0                MOVX    A,@DPTR
0015 5407              ANL     A,#07H
0017 6403              XRL     A,#03H
0019 701B              JNZ     ?C0073
                                           ; SOURCE LINE # 827
                                           ; SOURCE LINE # 828
001B 900000      E     MOV     DPTR,#nBrightValue
001E E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 52  

001F C3                CLR     C
0020 9409              SUBB    A,#09H
0022 5005              JNC     ?C0074
                                           ; SOURCE LINE # 829
                                           ; SOURCE LINE # 830
0024 E0                MOVX    A,@DPTR
0025 04                INC     A
                                           ; SOURCE LINE # 831
0026 120000      R     LCALL   L?0293
                                           ; SOURCE LINE # 832
0029         ?C0074:
                                           ; SOURCE LINE # 833
0029 120000      R     LCALL   L?0294
002C 30E02E            JNB     ACC.0,?C0082
                                           ; SOURCE LINE # 834
                                           ; SOURCE LINE # 835
002F 7F44              MOV     R7,#044H
0031 120000      E     LCALL   _ECQEvent
                                           ; SOURCE LINE # 836
                                           ; SOURCE LINE # 837
                                           ; SOURCE LINE # 838
0034 8000              SJMP    ?C0269
0036         ?C0073:
                                           ; SOURCE LINE # 840
                                           ; SOURCE LINE # 841
0036         ?C0269:
0036 7F12              MOV     R7,#012H
0038 020000      E     LJMP    _ECQEvent
                                           ; SOURCE LINE # 842
                                           ; SOURCE LINE # 843
003B         ?C0072:
                                           ; SOURCE LINE # 846
                                           ; SOURCE LINE # 847
003B 900000      E     MOV     DPTR,#nBrightValue
003E E0                MOVX    A,@DPTR
003F C3                CLR     C
0040 9409              SUBB    A,#09H
0042 5019              JNC     ?C0082
                                           ; SOURCE LINE # 848
                                           ; SOURCE LINE # 849
0044 E0                MOVX    A,@DPTR
0045 04                INC     A
                                           ; SOURCE LINE # 850
0046 120000      R     LCALL   L?0293
                                           ; SOURCE LINE # 851
                                           ; SOURCE LINE # 852
                                           ; SOURCE LINE # 853
0049 22                RET     
004A         ?C0071:
                                           ; SOURCE LINE # 855
                                           ; SOURCE LINE # 856
004A 900000      E     MOV     DPTR,#cBrightUpDelayCnt
004D E0                MOVX    A,@DPTR
004E 14                DEC     A
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 857
                                           ; SOURCE LINE # 858
0050 22                RET     
0051         ?C0070:
                                           ; SOURCE LINE # 859
0051 900000      R     MOV     DPTR,#event
0054 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 53  

0055 B40105            CJNE    A,#01H,?C0082
                                           ; SOURCE LINE # 860
                                           ; SOURCE LINE # 861
0058 E4                CLR     A
0059 900000      E     MOV     DPTR,#cBrightUpDelayCnt
005C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 862
                                           ; SOURCE LINE # 863
005D         ?C0082:
005D 22                RET     
             ; FUNCTION _HotKey_Fn_F12 (END)

             ; FUNCTION _HotKey_Fn_Plus (BEGIN)
                                           ; SOURCE LINE # 868
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 869
                                           ; SOURCE LINE # 870
0000 EF                MOV     A,R7
0001 700D              JNZ     ?C0085
                                           ; SOURCE LINE # 871
                                           ; SOURCE LINE # 872
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E706            JNB     ACC.7,?C0085
                                           ; SOURCE LINE # 873
                                           ; SOURCE LINE # 875
                                           ; SOURCE LINE # 876
                                           ; SOURCE LINE # 877
                                           ; SOURCE LINE # 878
                                           ; SOURCE LINE # 879
000A 120000      R     LCALL   L?0273
000D 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 880
                                           ; SOURCE LINE # 881
                                           ; SOURCE LINE # 882
                                           ; SOURCE LINE # 883
0010         ?C0085:
0010 22                RET     
             ; FUNCTION _HotKey_Fn_Plus (END)

             ; FUNCTION _HotKey_Fn_Minus (BEGIN)
                                           ; SOURCE LINE # 887
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 888
                                           ; SOURCE LINE # 889
0000 EF                MOV     A,R7
0001 7013              JNZ     ?C0088
                                           ; SOURCE LINE # 890
                                           ; SOURCE LINE # 891
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E70C            JNB     ACC.7,?C0088
                                           ; SOURCE LINE # 892
                                           ; SOURCE LINE # 894
                                           ; SOURCE LINE # 895
000A 900000      E     MOV     DPTR,#EM9_NEWFUN
000D E0                MOVX    A,@DPTR
000E 4402              ORL     A,#02H
                                           ; SOURCE LINE # 896
                                           ; SOURCE LINE # 897
                                           ; SOURCE LINE # 898
0010 120000      R     LCALL   L?0274
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 54  

0013 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 899
                                           ; SOURCE LINE # 900
                                           ; SOURCE LINE # 901
                                           ; SOURCE LINE # 902
0016         ?C0088:
0016 22                RET     
             ; FUNCTION _HotKey_Fn_Minus (END)

             ; FUNCTION _HotKey_Fn_ESC (BEGIN)
                                           ; SOURCE LINE # 907
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 908
                                           ; SOURCE LINE # 922
0005 22                RET     
             ; FUNCTION _HotKey_Fn_ESC (END)

             ; FUNCTION _HotKey_Fn_UP (BEGIN)
                                           ; SOURCE LINE # 927
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 928
                                           ; SOURCE LINE # 965
0005 22                RET     
             ; FUNCTION _HotKey_Fn_UP (END)

             ; FUNCTION _HotKey_Fn_DOWN (BEGIN)
                                           ; SOURCE LINE # 970
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 971
                                           ; SOURCE LINE # 1006
0005 22                RET     
             ; FUNCTION _HotKey_Fn_DOWN (END)

             ; FUNCTION _HotKey_Fn_LEFT (BEGIN)
                                           ; SOURCE LINE # 1011
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1012
                                           ; SOURCE LINE # 1013
0000 EF                MOV     A,R7
0001 700D              JNZ     ?C0094
                                           ; SOURCE LINE # 1014
                                           ; SOURCE LINE # 1015
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E706            JNB     ACC.7,?C0094
                                           ; SOURCE LINE # 1016
                                           ; SOURCE LINE # 1017
                                           ; SOURCE LINE # 1018
                                           ; SOURCE LINE # 1019
                                           ; SOURCE LINE # 1020
000A 120000      R     LCALL   L?0273
000D 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1021
                                           ; SOURCE LINE # 1022
                                           ; SOURCE LINE # 1023
0010         ?C0094:
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 55  

0010 22                RET     
             ; FUNCTION _HotKey_Fn_LEFT (END)

             ; FUNCTION _HotKey_Fn_RIGHT (BEGIN)
                                           ; SOURCE LINE # 1028
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1029
                                           ; SOURCE LINE # 1030
0000 EF                MOV     A,R7
0001 7013              JNZ     ?C0097
                                           ; SOURCE LINE # 1031
                                           ; SOURCE LINE # 1032
0003 900000      E     MOV     DPTR,#SYS_MISC1
0006 E0                MOVX    A,@DPTR
0007 30E70C            JNB     ACC.7,?C0097
                                           ; SOURCE LINE # 1033
                                           ; SOURCE LINE # 1034
000A 900000      E     MOV     DPTR,#EM9_NEWFUN
000D E0                MOVX    A,@DPTR
000E 4402              ORL     A,#02H
                                           ; SOURCE LINE # 1035
                                           ; SOURCE LINE # 1036
                                           ; SOURCE LINE # 1037
0010 120000      R     LCALL   L?0274
0013 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1038
                                           ; SOURCE LINE # 1039
                                           ; SOURCE LINE # 1040
0016         ?C0097:
0016 22                RET     
             ; FUNCTION _HotKey_Fn_RIGHT (END)

             ; FUNCTION _HotKey_Fn_Space (BEGIN)
                                           ; SOURCE LINE # 1045
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1046
                                           ; SOURCE LINE # 1063
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6455              XRL     A,#055H
0006 6039              JZ      ?C0100
0008 E0                MOVX    A,@DPTR
0009 6433              XRL     A,#033H
000B 6034              JZ      ?C0100
                                           ; SOURCE LINE # 1064
                                           ; SOURCE LINE # 1066
000D         ?C0098:
                                           ; SOURCE LINE # 1069
000D EF                MOV     A,R7
000E 7031              JNZ     ?C0100
                                           ; SOURCE LINE # 1070
                                           ; SOURCE LINE # 1071
0010 900000      E     MOV     DPTR,#LED_KB_PWM_Step
0013 E0                MOVX    A,@DPTR
0014 04                INC     A
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1072
0016 E0                MOVX    A,@DPTR
0017 B40302            CJNE    A,#03H,?C0102
                                           ; SOURCE LINE # 1073
                                           ; SOURCE LINE # 1074
001A E4                CLR     A
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 56  

001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1075
001C         ?C0102:
                                           ; SOURCE LINE # 1077
001C 900000      E     MOV     DPTR,#LED_KB_PWM_Step
001F E0                MOVX    A,@DPTR
0020 900000      E     MOV     DPTR,#EMStatusBit
0023 6006              JZ      ?C0103
                                           ; SOURCE LINE # 1078
                                           ; SOURCE LINE # 1079
0025 E0                MOVX    A,@DPTR
0026 4401              ORL     A,#01H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1080
0029 8004              SJMP    ?C0104
002B         ?C0103:
                                           ; SOURCE LINE # 1082
                                           ; SOURCE LINE # 1083
002B E0                MOVX    A,@DPTR
002C 54FE              ANL     A,#0FEH
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1084
002F         ?C0104:
                                           ; SOURCE LINE # 1086
002F 900000      E     MOV     DPTR,#UpdateLEDBL_delay
0032 7402              MOV     A,#02H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1087
0035 120000      R     LCALL   L?0295
0038 30E006            JNB     ACC.0,?C0100
                                           ; SOURCE LINE # 1088
                                           ; SOURCE LINE # 1089
                                           ; SOURCE LINE # 1090
                                           ; SOURCE LINE # 1091
003B 120000      R     LCALL   L?0275
003E 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1092
                                           ; SOURCE LINE # 1094
                                           ; SOURCE LINE # 1095
0041         ?C0100:
0041 22                RET     
             ; FUNCTION _HotKey_Fn_Space (END)

             ; FUNCTION _HotKey_Fn_Q (BEGIN)
                                           ; SOURCE LINE # 1096
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1097
                                           ; SOURCE LINE # 1099
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 6455              XRL     A,#055H
0006 6031              JZ      ?C0108
0008 E0                MOVX    A,@DPTR
0009 6433              XRL     A,#033H
000B 602C              JZ      ?C0108
                                           ; SOURCE LINE # 1100
                                           ; SOURCE LINE # 1102
000D         ?C0106:
                                           ; SOURCE LINE # 1103
000D 900000      E     MOV     DPTR,#GPDRC
0010 E0                MOVX    A,@DPTR
0011 20E525            JB      ACC.5,?C0108
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 57  

                                           ; SOURCE LINE # 1104
                                           ; SOURCE LINE # 1106
0014         ?C0109:
                                           ; SOURCE LINE # 1107
0014 EF                MOV     A,R7
0015 7022              JNZ     ?C0108
                                           ; SOURCE LINE # 1108
                                           ; SOURCE LINE # 1109
0017 900000      E     MOV     DPTR,#ThermalMode
001A E0                MOVX    A,@DPTR
001B B40105            CJNE    A,#01H,?C0111
                                           ; SOURCE LINE # 1110
                                           ; SOURCE LINE # 1111
001E 7403              MOV     A,#03H
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1112
0021 8006              SJMP    ?C0112
0023         ?C0111:
                                           ; SOURCE LINE # 1114
                                           ; SOURCE LINE # 1115
0023 900000      E     MOV     DPTR,#ThermalMode
0026 7401              MOV     A,#01H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1116
0029         ?C0112:
                                           ; SOURCE LINE # 1117
0029 7F13              MOV     R7,#013H
002B 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1118
002E 900000      E     MOV     DPTR,#uVPCeventSource
0031 7401              MOV     A,#01H
                                           ; SOURCE LINE # 1119
                                           ; SOURCE LINE # 1120
0033 120000      R     LCALL   L?0277
0036 120000      E     LCALL   _ECSMI_SCIEvent
                                           ; SOURCE LINE # 1121
                                           ; SOURCE LINE # 1122
0039         ?C0108:
0039 22                RET     
             ; FUNCTION _HotKey_Fn_Q (END)

             ; FUNCTION _HotKey_Fn_H (BEGIN)
                                           ; SOURCE LINE # 1123
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1124
                                           ; SOURCE LINE # 1126
0005         ?C0113:
0005 22                RET     
             ; FUNCTION _HotKey_Fn_H (END)

             ; FUNCTION _HotKey_Fn_B (BEGIN)
                                           ; SOURCE LINE # 1127
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1128
                                           ; SOURCE LINE # 1130
0005         ?C0114:
0005 22                RET     
             ; FUNCTION _HotKey_Fn_B (END)
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 58  


             ; FUNCTION _CrisisHotkey05 (BEGIN)
                                           ; SOURCE LINE # 1676
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1677
                                           ; SOURCE LINE # 1690
                                           ; SOURCE LINE # 1691
0005 900000      E     MOV     DPTR,#F2_Pressed
0008 E0                MOVX    A,@DPTR
0009 4401              ORL     A,#01H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1692
000C E0                MOVX    A,@DPTR
000D 54FD              ANL     A,#0FDH
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1693
                                           ; SOURCE LINE # 1695
0010 22                RET     
             ; FUNCTION _CrisisHotkey05 (END)

             ; FUNCTION _CrisisHotkey06 (BEGIN)
                                           ; SOURCE LINE # 1697
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1698
                                           ; SOURCE LINE # 1711
                                           ; SOURCE LINE # 1712
0005 900000      E     MOV     DPTR,#F2_Pressed
0008 E0                MOVX    A,@DPTR
0009 4402              ORL     A,#02H
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1713
000C E0                MOVX    A,@DPTR
000D 54FE              ANL     A,#0FEH
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1714
                                           ; SOURCE LINE # 1717
0010 22                RET     
             ; FUNCTION _CrisisHotkey06 (END)

             ; FUNCTION _FnHotkey01 (BEGIN)
                                           ; SOURCE LINE # 1720
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1721
                                           ; SOURCE LINE # 1722
0000 EF                MOV     A,R7
0001 B40106            CJNE    A,#01H,?C0117
                                           ; SOURCE LINE # 1723
                                           ; SOURCE LINE # 1724
0004 E4                CLR     A
0005 900000      E     MOV     DPTR,#DebugCombineKey
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1725
0009 22                RET     
000A         ?C0117:
                                           ; SOURCE LINE # 1726
000A EF                MOV     A,R7
000B 7005              JNZ     ?C0120
                                           ; SOURCE LINE # 1727
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 59  

                                           ; SOURCE LINE # 1728
000D 900000      E     MOV     DPTR,#DebugCombineKey
0010 04                INC     A
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1729
                                           ; SOURCE LINE # 1730
0012         ?C0120:
0012 22                RET     
             ; FUNCTION _FnHotkey01 (END)

             ; FUNCTION _FnHotkey02 (BEGIN)
                                           ; SOURCE LINE # 1732
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1733
                                           ; SOURCE LINE # 1734
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0124
                                           ; SOURCE LINE # 1735
                                           ; SOURCE LINE # 1736
0003 900000      E     MOV     DPTR,#DebugCombineKey
0006 E0                MOVX    A,@DPTR
0007 B40104            CJNE    A,#01H,?C0122
                                           ; SOURCE LINE # 1737
000A 7402              MOV     A,#02H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0122:
                                           ; SOURCE LINE # 1739
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#DebugCombineKey
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1740
                                           ; SOURCE LINE # 1741
0013         ?C0124:
0013 22                RET     
             ; FUNCTION _FnHotkey02 (END)

             ; FUNCTION _FnHotkey03 (BEGIN)
                                           ; SOURCE LINE # 1743
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1744
                                           ; SOURCE LINE # 1745
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0128
                                           ; SOURCE LINE # 1746
                                           ; SOURCE LINE # 1747
0003 900000      E     MOV     DPTR,#DebugCombineKey
0006 E0                MOVX    A,@DPTR
0007 B40204            CJNE    A,#02H,?C0126
                                           ; SOURCE LINE # 1748
000A 7403              MOV     A,#03H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0126:
                                           ; SOURCE LINE # 1750
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#DebugCombineKey
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1751
                                           ; SOURCE LINE # 1752
0013         ?C0128:
0013 22                RET     
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 60  

             ; FUNCTION _FnHotkey03 (END)

             ; FUNCTION _FnHotkey04 (BEGIN)
                                           ; SOURCE LINE # 1754
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1755
                                           ; SOURCE LINE # 1756
0000 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0003 E0                MOVX    A,@DPTR
0004 20E427            JB      ACC.4,?C0133
                                           ; SOURCE LINE # 1757
                                           ; SOURCE LINE # 1758
0007 EF                MOV     A,R7
0008 7024              JNZ     ?C0133
                                           ; SOURCE LINE # 1759
                                           ; SOURCE LINE # 1760
000A 900000      E     MOV     DPTR,#DebugCombineKey
000D E0                MOVX    A,@DPTR
000E B40318            CJNE    A,#03H,?C0131
                                           ; SOURCE LINE # 1761
                                           ; SOURCE LINE # 1762
0011 7404              MOV     A,#04H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1763
                                           ; SOURCE LINE # 1764
0014 120000      R     LCALL   L?0298
0017 74F1              MOV     A,#0F1H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1765
001A 9022BF            MOV     DPTR,#022BFH
001D E0                MOVX    A,@DPTR
001E 900000      E     MOV     DPTR,#eEEPROMData
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1766
0022 120000      E     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 1767
                                           ; SOURCE LINE # 1768
0025 120000      R     LCALL   L?0296
                                           ; SOURCE LINE # 1769
0028 22                RET     
0029         ?C0131:
                                           ; SOURCE LINE # 1771
0029 E4                CLR     A
002A 900000      E     MOV     DPTR,#DebugCombineKey
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1772
                                           ; SOURCE LINE # 1773
                                           ; SOURCE LINE # 1774
002E         ?C0133:
002E 22                RET     
             ; FUNCTION _FnHotkey04 (END)

             ; FUNCTION _CheckBootHotKey (BEGIN)
                                           ; SOURCE LINE # 1784
0000 900000      R     MOV     DPTR,#matrix
                                           ; SOURCE LINE # 1785
                                           ; SOURCE LINE # 1787
0003 120000      R     LCALL   L?0281
0006         ?C0134:
0006 900000      R     MOV     DPTR,#index
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 61  

000B C3                CLR     C
000C 9404              SUBB    A,#04H
000E 5037              JNC     ?C0135
                                           ; SOURCE LINE # 1788
                                           ; SOURCE LINE # 1789
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 25E0              ADD     A,ACC
0015 2400        R     ADD     A,#LOW asBootHotKeyStruct
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        R     ADDC    A,#HIGH asBootHotKeyStruct
001C F583              MOV     DPH,A
001E E4                CLR     A
001F 93                MOVC    A,@A+DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#matrix
0024 E0                MOVX    A,@DPTR
0025 7003              JNZ     ?C0258
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 6F                XRL     A,R7
002A         ?C0258:
002A 7013              JNZ     ?C0136
                                           ; SOURCE LINE # 1790
                                           ; SOURCE LINE # 1791
002C 900000      R     MOV     DPTR,#event
002F 120000      R     LCALL   L?0283
0032 2400        R     ADD     A,#LOW asBootHotKeyStruct+01H
0034 F582              MOV     DPL,A
0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH asBootHotKeyStruct+01H
0039 120000      R     LCALL   L?0285
003C 020000      E     LJMP    ?C?ICALL2
                                           ; SOURCE LINE # 1793
                                           ; SOURCE LINE # 1794
003F         ?C0136:
003F 900000      R     MOV     DPTR,#index
0042 E0                MOVX    A,@DPTR
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 80BF              SJMP    ?C0134
0047         ?C0135:
                                           ; SOURCE LINE # 1795
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#DebugCombineKey
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1796
004C         ?C0138:
004C 22                RET     
             ; FUNCTION _CheckBootHotKey (END)

             ; FUNCTION _FnHotkeyPort80Log01 (BEGIN)
                                           ; SOURCE LINE # 1799
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1800
                                           ; SOURCE LINE # 1810
0000 EF                MOV     A,R7
0001 700E              JNZ     ?C0139
0003 900000      E     MOV     DPTR,#FnStatus
0006 E0                MOVX    A,@DPTR
0007 B40107            CJNE    A,#01H,?C0139
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 62  

                                           ; SOURCE LINE # 1811
                                           ; SOURCE LINE # 1812
000A 900000      E     MOV     DPTR,#CombineKeyRN
000D 7401              MOV     A,#01H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1813
0010 22                RET     
0011         ?C0139:
                                           ; SOURCE LINE # 1815
0011 EF                MOV     A,R7
0012 B40105            CJNE    A,#01H,?C0142
                                           ; SOURCE LINE # 1816
                                           ; SOURCE LINE # 1817
0015 E4                CLR     A
0016 900000      E     MOV     DPTR,#CombineKeyRN
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1818
                                           ; SOURCE LINE # 1820
001A         ?C0142:
001A 22                RET     
             ; FUNCTION _FnHotkeyPort80Log01 (END)

             ; FUNCTION _FnHotkeyPort80Log02 (BEGIN)
                                           ; SOURCE LINE # 1823
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1824
                                           ; SOURCE LINE # 1825
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0146
                                           ; SOURCE LINE # 1826
                                           ; SOURCE LINE # 1827
0003 900000      E     MOV     DPTR,#CombineKeyRN
0006 E0                MOVX    A,@DPTR
0007 B40104            CJNE    A,#01H,?C0144
                                           ; SOURCE LINE # 1828
000A 7402              MOV     A,#02H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0144:
                                           ; SOURCE LINE # 1830
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#CombineKeyRN
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1831
                                           ; SOURCE LINE # 1832
0013         ?C0146:
0013 22                RET     
             ; FUNCTION _FnHotkeyPort80Log02 (END)

             ; FUNCTION _FnHotkeyPort80Log03 (BEGIN)
                                           ; SOURCE LINE # 1834
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1835
                                           ; SOURCE LINE # 1844
0000 900000      E     MOV     DPTR,#SYS_MISC1
0003 E0                MOVX    A,@DPTR
0004 20E31C            JB      ACC.3,?C0151
                                           ; SOURCE LINE # 1845
                                           ; SOURCE LINE # 1846
0007 EF                MOV     A,R7
0008 6003              JZ      ?C0149
000A B4020F            CJNE    A,#02H,?C0148
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 63  

000D         ?C0149:
000D 900000      E     MOV     DPTR,#FnStatus
0010 E0                MOVX    A,@DPTR
0011 B40108            CJNE    A,#01H,?C0148
                                           ; SOURCE LINE # 1847
                                           ; SOURCE LINE # 1848
0014 900000      E     MOV     DPTR,#SYS_MISC1
0017 E0                MOVX    A,@DPTR
0018 4440              ORL     A,#040H
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1849
001B 22                RET     
001C         ?C0148:
                                           ; SOURCE LINE # 1851
                                           ; SOURCE LINE # 1852
001C 900000      E     MOV     DPTR,#SYS_MISC1
001F E0                MOVX    A,@DPTR
0020 54BF              ANL     A,#0BFH
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1853
                                           ; SOURCE LINE # 1854
                                           ; SOURCE LINE # 1855
0023         ?C0151:
0023 22                RET     
             ; FUNCTION _FnHotkeyPort80Log03 (END)

             ; FUNCTION _FnHotkeyPort80Log04 (BEGIN)
                                           ; SOURCE LINE # 1857
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1858
                                           ; SOURCE LINE # 1859
0000 EF                MOV     A,R7
0001 7017              JNZ     ?C0155
                                           ; SOURCE LINE # 1860
                                           ; SOURCE LINE # 1861
0003 900000      E     MOV     DPTR,#CombineKeyRN
0006 E0                MOVX    A,@DPTR
0007 B4030B            CJNE    A,#03H,?C0153
                                           ; SOURCE LINE # 1862
                                           ; SOURCE LINE # 1863
000A 7404              MOV     A,#04H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1864
000D 900000      E     MOV     DPTR,#CombineKeyStatus
0010 E0                MOVX    A,@DPTR
0011 4401              ORL     A,#01H
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1865
0014 22                RET     
0015         ?C0153:
                                           ; SOURCE LINE # 1867
0015 E4                CLR     A
0016 900000      E     MOV     DPTR,#CombineKeyRN
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1868
                                           ; SOURCE LINE # 1869
001A         ?C0155:
001A 22                RET     
             ; FUNCTION _FnHotkeyPort80Log04 (END)

             ; FUNCTION _FnHotkeyPort80Log05 (BEGIN)
                                           ; SOURCE LINE # 1870
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 64  

;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1871
                                           ; SOURCE LINE # 1872
0000 EF                MOV     A,R7
0001 701C              JNZ     ?C0157
0003 900000      E     MOV     DPTR,#FnStatus
0006 E0                MOVX    A,@DPTR
0007 B40115            CJNE    A,#01H,?C0157
000A 900000      E     MOV     DPTR,#CombineKeyRN
000D E0                MOVX    A,@DPTR
000E B4010E            CJNE    A,#01H,?C0157
                                           ; SOURCE LINE # 1873
                                           ; SOURCE LINE # 1874
0011 900000      E     MOV     DPTR,#P80CMOSSts
0014 E0                MOVX    A,@DPTR
0015 4401              ORL     A,#01H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1875
0018 900000      E     MOV     DPTR,#ACPI_HOTKEY
001B E0                MOVX    A,@DPTR
001C 4440              ORL     A,#040H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1876
                                           ; SOURCE LINE # 1877
001F         ?C0157:
001F 22                RET     
             ; FUNCTION _FnHotkeyPort80Log05 (END)

             ; FUNCTION _CheckRNHotKey (BEGIN)
                                           ; SOURCE LINE # 1889
0000 900000      R     MOV     DPTR,#matrix
                                           ; SOURCE LINE # 1890
                                           ; SOURCE LINE # 1892
0003 120000      R     LCALL   L?0281
0006         ?C0158:
0006 900000      R     MOV     DPTR,#index
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B C3                CLR     C
000C 9405              SUBB    A,#05H
000E 5037              JNC     ?C0159
                                           ; SOURCE LINE # 1893
                                           ; SOURCE LINE # 1894
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 25E0              ADD     A,ACC
0015 2400        R     ADD     A,#LOW asCheckRNStruct
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        R     ADDC    A,#HIGH asCheckRNStruct
001C F583              MOV     DPH,A
001E E4                CLR     A
001F 93                MOVC    A,@A+DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#matrix
0024 E0                MOVX    A,@DPTR
0025 7003              JNZ     ?C0259
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 6F                XRL     A,R7
002A         ?C0259:
002A 7013              JNZ     ?C0160
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 65  

                                           ; SOURCE LINE # 1895
                                           ; SOURCE LINE # 1896
002C 900000      R     MOV     DPTR,#event
002F 120000      R     LCALL   L?0283
0032 2400        R     ADD     A,#LOW asCheckRNStruct+01H
0034 F582              MOV     DPL,A
0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH asCheckRNStruct+01H
0039 120000      R     LCALL   L?0285
003C 020000      E     LJMP    ?C?ICALL2
                                           ; SOURCE LINE # 1898
                                           ; SOURCE LINE # 1899
003F         ?C0160:
003F 900000      R     MOV     DPTR,#index
0042 E0                MOVX    A,@DPTR
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 80BF              SJMP    ?C0158
0047         ?C0159:
                                           ; SOURCE LINE # 1900
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#CombineKeyRN
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1901
004C         ?C0162:
004C 22                RET     
             ; FUNCTION _CheckRNHotKey (END)

             ; FUNCTION _FnHotkeyGPIO01 (BEGIN)
                                           ; SOURCE LINE # 1903
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1904
                                           ; SOURCE LINE # 1905
0000 EF                MOV     A,R7
0001 B40106            CJNE    A,#01H,?C0163
                                           ; SOURCE LINE # 1906
                                           ; SOURCE LINE # 1907
0004 E4                CLR     A
0005 900000      E     MOV     DPTR,#CombineKeyIO
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1908
0009 22                RET     
000A         ?C0163:
                                           ; SOURCE LINE # 1909
000A EF                MOV     A,R7
000B 7005              JNZ     ?C0166
                                           ; SOURCE LINE # 1910
                                           ; SOURCE LINE # 1911
000D 900000      E     MOV     DPTR,#CombineKeyIO
0010 04                INC     A
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1912
                                           ; SOURCE LINE # 1914
0012         ?C0166:
0012 22                RET     
             ; FUNCTION _FnHotkeyGPIO01 (END)

             ; FUNCTION _FnHotkeyGPIO02 (BEGIN)
                                           ; SOURCE LINE # 1916
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1917
                                           ; SOURCE LINE # 1918
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 66  

0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0170
                                           ; SOURCE LINE # 1919
                                           ; SOURCE LINE # 1920
0003 900000      E     MOV     DPTR,#CombineKeyIO
0006 E0                MOVX    A,@DPTR
0007 B40104            CJNE    A,#01H,?C0168
                                           ; SOURCE LINE # 1921
000A 7402              MOV     A,#02H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0168:
                                           ; SOURCE LINE # 1923
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#CombineKeyIO
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1924
                                           ; SOURCE LINE # 1925
0013         ?C0170:
0013 22                RET     
             ; FUNCTION _FnHotkeyGPIO02 (END)

             ; FUNCTION _FnHotkeyGPIO03 (BEGIN)
                                           ; SOURCE LINE # 1927
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1928
                                           ; SOURCE LINE # 1929
0000 EF                MOV     A,R7
0001 7010              JNZ     ?C0174
                                           ; SOURCE LINE # 1930
                                           ; SOURCE LINE # 1931
0003 900000      E     MOV     DPTR,#CombineKeyIO
0006 E0                MOVX    A,@DPTR
0007 B40204            CJNE    A,#02H,?C0172
                                           ; SOURCE LINE # 1932
000A 7403              MOV     A,#03H
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0172:
                                           ; SOURCE LINE # 1934
000E E4                CLR     A
000F 900000      E     MOV     DPTR,#CombineKeyIO
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1935
                                           ; SOURCE LINE # 1937
0013         ?C0174:
0013 22                RET     
             ; FUNCTION _FnHotkeyGPIO03 (END)

             ; FUNCTION _FnHotkeyGPIO04 (BEGIN)
                                           ; SOURCE LINE # 1939
;---- Variable 'event' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1940
                                           ; SOURCE LINE # 1941
0000 EF                MOV     A,R7
0001 6003              JZ      $ + 5H
0003 020000      R     LJMP    ?C0186
                                           ; SOURCE LINE # 1942
                                           ; SOURCE LINE # 1943
0006 900000      E     MOV     DPTR,#CombineKeyIO
0009 E0                MOVX    A,@DPTR
000A 6403              XRL     A,#03H
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 67  

000C 6003              JZ      $ + 5H
000E 020000      R     LJMP    ?C0176
                                           ; SOURCE LINE # 1944
                                           ; SOURCE LINE # 1945
0011 900000      E     MOV     DPTR,#GPIO_STATUS
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1946
0015 900000      E     MOV     DPTR,#GPDRC
0018 E0                MOVX    A,@DPTR
0019 30E007            JNB     ACC.0,?C0177
                                           ; SOURCE LINE # 1947
001C 900000      E     MOV     DPTR,#GPIO_STATUS
001F E0                MOVX    A,@DPTR
0020 4401              ORL     A,#01H
0022 F0                MOVX    @DPTR,A
0023         ?C0177:
                                           ; SOURCE LINE # 1948
0023 900000      E     MOV     DPTR,#GPDRF
0026 E0                MOVX    A,@DPTR
0027 30E107            JNB     ACC.1,?C0178
                                           ; SOURCE LINE # 1949
002A 900000      E     MOV     DPTR,#GPIO_STATUS
002D E0                MOVX    A,@DPTR
002E 4402              ORL     A,#02H
0030 F0                MOVX    @DPTR,A
0031         ?C0178:
                                           ; SOURCE LINE # 1950
0031 900000      E     MOV     DPTR,#GPDRE
0034 E0                MOVX    A,@DPTR
0035 30E207            JNB     ACC.2,?C0179
                                           ; SOURCE LINE # 1951
0038 900000      E     MOV     DPTR,#GPIO_STATUS
003B E0                MOVX    A,@DPTR
003C 4404              ORL     A,#04H
003E F0                MOVX    @DPTR,A
003F         ?C0179:
                                           ; SOURCE LINE # 1952
003F 900000      E     MOV     DPTR,#GPDRD
0042 E0                MOVX    A,@DPTR
0043 30E007            JNB     ACC.0,?C0180
                                           ; SOURCE LINE # 1953
0046 900000      E     MOV     DPTR,#GPIO_STATUS
0049 E0                MOVX    A,@DPTR
004A 4408              ORL     A,#08H
004C F0                MOVX    @DPTR,A
004D         ?C0180:
                                           ; SOURCE LINE # 1954
004D 900000      E     MOV     DPTR,#GPDRD
0050 E0                MOVX    A,@DPTR
0051 30E107            JNB     ACC.1,?C0181
                                           ; SOURCE LINE # 1955
0054 900000      E     MOV     DPTR,#GPIO_STATUS
0057 E0                MOVX    A,@DPTR
0058 4410              ORL     A,#010H
005A F0                MOVX    @DPTR,A
005B         ?C0181:
                                           ; SOURCE LINE # 1957
005B 900000      E     MOV     DPTR,#GPDRE
005E E0                MOVX    A,@DPTR
005F 30E407            JNB     ACC.4,?C0182
                                           ; SOURCE LINE # 1958
0062 900000      E     MOV     DPTR,#GPIO_STATUS
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 68  

0065 E0                MOVX    A,@DPTR
0066 4440              ORL     A,#040H
0068 F0                MOVX    @DPTR,A
0069         ?C0182:
                                           ; SOURCE LINE # 1959
0069 900000      E     MOV     DPTR,#GPDRH
006C E0                MOVX    A,@DPTR
006D 30E607            JNB     ACC.6,?C0183
                                           ; SOURCE LINE # 1960
0070 900000      E     MOV     DPTR,#GPIO_STATUS
0073 E0                MOVX    A,@DPTR
0074 4480              ORL     A,#080H
0076 F0                MOVX    @DPTR,A
0077         ?C0183:
                                           ; SOURCE LINE # 1962
0077 900000      E     MOV     DPTR,#CombineKeyIO
007A 7404              MOV     A,#04H
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1963
007D 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
0080 E0                MOVX    A,@DPTR
0081 20E41A            JB      ACC.4,?C0186
                                           ; SOURCE LINE # 1964
                                           ; SOURCE LINE # 1966
                                           ; SOURCE LINE # 1967
0084 120000      R     LCALL   L?0298
0087 74EF              MOV     A,#0EFH
0089 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1968
008A 900000      E     MOV     DPTR,#GPIO_STATUS
008D E0                MOVX    A,@DPTR
008E 900000      E     MOV     DPTR,#eEEPROMData
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1969
0092 120000      E     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 1970
                                           ; SOURCE LINE # 1971
0095 120000      R     LCALL   L?0296
                                           ; SOURCE LINE # 1972
                                           ; SOURCE LINE # 1974
0098 22                RET     
0099         ?C0176:
                                           ; SOURCE LINE # 1976
0099 E4                CLR     A
009A 900000      E     MOV     DPTR,#CombineKeyIO
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1977
                                           ; SOURCE LINE # 1978
009E         ?C0186:
009E 22                RET     
             ; FUNCTION _FnHotkeyGPIO04 (END)

             ; FUNCTION _CheckIOHotKey (BEGIN)
                                           ; SOURCE LINE # 1987
0000 900000      R     MOV     DPTR,#matrix
                                           ; SOURCE LINE # 1988
                                           ; SOURCE LINE # 1990
0003 120000      R     LCALL   L?0282
0006         ?C0187:
0006 900000      R     MOV     DPTR,#index
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 69  

000B C3                CLR     C
000C 9404              SUBB    A,#04H
000E 5037              JNC     ?C0188
                                           ; SOURCE LINE # 1991
                                           ; SOURCE LINE # 1992
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 25E0              ADD     A,ACC
0015 2400        R     ADD     A,#LOW asCheckIOStruct
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        R     ADDC    A,#HIGH asCheckIOStruct
001C F583              MOV     DPH,A
001E E4                CLR     A
001F 93                MOVC    A,@A+DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#matrix
0024 E0                MOVX    A,@DPTR
0025 7003              JNZ     ?C0260
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 6F                XRL     A,R7
002A         ?C0260:
002A 7013              JNZ     ?C0189
                                           ; SOURCE LINE # 1993
                                           ; SOURCE LINE # 1994
002C 900000      R     MOV     DPTR,#event
002F 120000      R     LCALL   L?0284
0032 2400        R     ADD     A,#LOW asCheckIOStruct+01H
0034 F582              MOV     DPL,A
0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH asCheckIOStruct+01H
0039 120000      R     LCALL   L?0286
003C 020000      E     LJMP    ?C?ICALL2
                                           ; SOURCE LINE # 1996
                                           ; SOURCE LINE # 1997
003F         ?C0189:
003F 900000      R     MOV     DPTR,#index
0042 E0                MOVX    A,@DPTR
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 80BF              SJMP    ?C0187
0047         ?C0188:
                                           ; SOURCE LINE # 1998
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#CombineKeyIO
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1999
004C         ?C0191:
004C 22                RET     
             ; FUNCTION _CheckIOHotKey (END)

             ; FUNCTION _FnHotkeyBattShip01 (BEGIN)
                                           ; SOURCE LINE # 2003
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2004
                                           ; SOURCE LINE # 2005
0005 7029              JNZ     ?C0192
0007 900000      E     MOV     DPTR,#FnStatus
000A E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 70  

000B 6401              XRL     A,#01H
000D 7021              JNZ     ?C0192
                                           ; SOURCE LINE # 2006
                                           ; SOURCE LINE # 2007
000F 900000      E     MOV     DPTR,#CombineKeyShip
0012 E0                MOVX    A,@DPTR
0013 4401              ORL     A,#01H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2008
0016 E0                MOVX    A,@DPTR
0017 5403              ANL     A,#03H
0019 602A              JZ      ?C0198
                                           ; SOURCE LINE # 2009
                                           ; SOURCE LINE # 2010
001B 120000      R     LCALL   L?0299
001E E0                MOVX    A,@DPTR
001F B46608            CJNE    A,#066H,?C0194
                                           ; SOURCE LINE # 2011
0022 7455              MOV     A,#055H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2012
0025 7FFD              MOV     R7,#0FDH
0027 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2013
002A         ?C0194:
                                           ; SOURCE LINE # 2014
002A E4                CLR     A
002B 900000      E     MOV     DPTR,#CombineKeyShip
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2015
                                           ; SOURCE LINE # 2016
002F 22                RET     
0030         ?C0192:
0030 900000      R     MOV     DPTR,#event
0033 E0                MOVX    A,@DPTR
0034 6401              XRL     A,#01H
0036 6006              JZ      ?C0197
0038 900000      E     MOV     DPTR,#FnStatus
003B E0                MOVX    A,@DPTR
003C 7007              JNZ     ?C0198
003E         ?C0197:
                                           ; SOURCE LINE # 2017
003E 900000      E     MOV     DPTR,#CombineKeyShip
0041 E0                MOVX    A,@DPTR
0042 54FE              ANL     A,#0FEH
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2018
0045         ?C0198:
0045 22                RET     
             ; FUNCTION _FnHotkeyBattShip01 (END)

             ; FUNCTION _FnHotkeyBattShip02 (BEGIN)
                                           ; SOURCE LINE # 2020
0000 900000      R     MOV     DPTR,#event
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2021
                                           ; SOURCE LINE # 2022
0005 702A              JNZ     ?C0199
0007 900000      E     MOV     DPTR,#FnStatus
000A E0                MOVX    A,@DPTR
000B 6401              XRL     A,#01H
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 71  

000D 7022              JNZ     ?C0199
                                           ; SOURCE LINE # 2023
                                           ; SOURCE LINE # 2024
000F 900000      E     MOV     DPTR,#CombineKeyShip
0012 E0                MOVX    A,@DPTR
0013 4402              ORL     A,#02H
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2025
0016 E0                MOVX    A,@DPTR
0017 5403              ANL     A,#03H
0019 602B              JZ      ?C0205
                                           ; SOURCE LINE # 2026
001B E4                CLR     A
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2028
001D 900000      E     MOV     DPTR,#SysPowState
0020 E0                MOVX    A,@DPTR
0021 6466              XRL     A,#066H
0023 7021              JNZ     ?C0205
                                           ; SOURCE LINE # 2029
0025 7FFD              MOV     R7,#0FDH
0027 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2030
                                           ; SOURCE LINE # 2031
002A 120000      R     LCALL   L?0299
002D 7455              MOV     A,#055H
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2032
                                           ; SOURCE LINE # 2033
                                           ; SOURCE LINE # 2034
0030 22                RET     
0031         ?C0199:
                                           ; SOURCE LINE # 2036
0031 900000      R     MOV     DPTR,#event
0034 E0                MOVX    A,@DPTR
0035 6401              XRL     A,#01H
0037 6006              JZ      ?C0204
0039 900000      E     MOV     DPTR,#FnStatus
003C E0                MOVX    A,@DPTR
003D 7007              JNZ     ?C0205
003F         ?C0204:
                                           ; SOURCE LINE # 2037
003F 900000      E     MOV     DPTR,#CombineKeyShip
0042 E0                MOVX    A,@DPTR
0043 54FD              ANL     A,#0FDH
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2038
0046         ?C0205:
0046 22                RET     
             ; FUNCTION _FnHotkeyBattShip02 (END)

             ; FUNCTION _CheckBattShipHotKey (BEGIN)
                                           ; SOURCE LINE # 2044
0000 900000      R     MOV     DPTR,#matrix
                                           ; SOURCE LINE # 2045
                                           ; SOURCE LINE # 2047
0003 120000      R     LCALL   L?0282
0006         ?C0206:
0006 900000      R     MOV     DPTR,#index
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B C3                CLR     C
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 72  

000C 9402              SUBB    A,#02H
000E 5037              JNC     ?C0207
                                           ; SOURCE LINE # 2048
                                           ; SOURCE LINE # 2049
0010 EF                MOV     A,R7
0011 25E0              ADD     A,ACC
0013 25E0              ADD     A,ACC
0015 2400        R     ADD     A,#LOW asBattShipHotKeyStruct
0017 F582              MOV     DPL,A
0019 E4                CLR     A
001A 3400        R     ADDC    A,#HIGH asBattShipHotKeyStruct
001C F583              MOV     DPH,A
001E E4                CLR     A
001F 93                MOVC    A,@A+DPTR
0020 FF                MOV     R7,A
0021 900000      R     MOV     DPTR,#matrix
0024 E0                MOVX    A,@DPTR
0025 7003              JNZ     ?C0261
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 6F                XRL     A,R7
002A         ?C0261:
002A 7013              JNZ     ?C0208
                                           ; SOURCE LINE # 2050
                                           ; SOURCE LINE # 2051
002C 900000      R     MOV     DPTR,#event
002F 120000      R     LCALL   L?0284
0032 2400        R     ADD     A,#LOW asBattShipHotKeyStruct+01H
0034 F582              MOV     DPL,A
0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH asBattShipHotKeyStruct+01H
0039 120000      R     LCALL   L?0286
003C 020000      E     LJMP    ?C?ICALL2
                                           ; SOURCE LINE # 2053
                                           ; SOURCE LINE # 2054
003F         ?C0208:
003F 900000      R     MOV     DPTR,#index
0042 E0                MOVX    A,@DPTR
0043 04                INC     A
0044 F0                MOVX    @DPTR,A
0045 80BF              SJMP    ?C0206
0047         ?C0207:
                                           ; SOURCE LINE # 2055
0047 E4                CLR     A
0048 900000      E     MOV     DPTR,#CombineKeyShip
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2056
004C 900000      E     MOV     DPTR,#CombineKeyShip1
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2057
0050         ?C0210:
0050 22                RET     
             ; FUNCTION _CheckBattShipHotKey (END)

             ; FUNCTION _OEM_Hook_Send_Key (BEGIN)
                                           ; SOURCE LINE # 2064
0000 900000      R     MOV     DPTR,#table_entry
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 73  

                                           ; SOURCE LINE # 2065
                                           ; SOURCE LINE # 2068
0008 7E00              MOV     R6,#00H
000A 7C00              MOV     R4,#00H
000C 120000      R     LCALL   _CheckBootHotKey
                                           ; SOURCE LINE # 2069
000F 120000      R     LCALL   L?0287
0012 120000      R     LCALL   _CheckRNHotKey
                                           ; SOURCE LINE # 2070
0015 120000      R     LCALL   L?0287
0018 120000      R     LCALL   _CheckIOHotKey
                                           ; SOURCE LINE # 2073
001B 900000      E     MOV     DPTR,#GPDRB
001E E0                MOVX    A,@DPTR
001F 30E003            JNB     ACC.0,?C0212
0022 D3                SETB    C
0023 8001              SJMP    ?C0213
0025         ?C0212:
0025 C3                CLR     C
0026         ?C0213:
0026 400D              JC      ?C0211
0028 900000      E     MOV     DPTR,#SysPowState
002B E0                MOVX    A,@DPTR
002C B46606            CJNE    A,#066H,?C0211
                                           ; SOURCE LINE # 2074
                                           ; SOURCE LINE # 2075
002F 120000      R     LCALL   L?0288
0032 120000      R     LCALL   _CheckBattShipHotKey
                                           ; SOURCE LINE # 2076
0035         ?C0211:
                                           ; SOURCE LINE # 2078
0035 900000      E     MOV     DPTR,#SysPowState
0038 E0                MOVX    A,@DPTR
0039 6444              XRL     A,#044H
003B 6009              JZ      ?C0215
003D E0                MOVX    A,@DPTR
003E 6455              XRL     A,#055H
0040 6004              JZ      ?C0215
0042 E0                MOVX    A,@DPTR
0043 B4660C            CJNE    A,#066H,?C0217
0046         ?C0215:
                                           ; SOURCE LINE # 2079
                                           ; SOURCE LINE # 2080
0046 900000      R     MOV     DPTR,#event
0049 E0                MOVX    A,@DPTR
004A B40105            CJNE    A,#01H,?C0217
                                           ; SOURCE LINE # 2081
004D 7F01              MOV     R7,#01H
004F 120000      E     LCALL   _S4S5_KeyWake
                                           ; SOURCE LINE # 2082
                                           ; SOURCE LINE # 2085
0052         ?C0217:
0052 22                RET     
             ; FUNCTION _OEM_Hook_Send_Key (END)

             ; FUNCTION OEM_Hook_Skip_Send_Key (BEGIN)
                                           ; SOURCE LINE # 2090
                                           ; SOURCE LINE # 2091
                                           ; SOURCE LINE # 2092
0000 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2093
0002         ?C0218:
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 74  

0002 22                RET     
             ; FUNCTION OEM_Hook_Skip_Send_Key (END)

             ; FUNCTION _Hook_keyboard (BEGIN)
                                           ; SOURCE LINE # 2100
0000 900000      R     MOV     DPTR,#KSIValus
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2101
                                           ; SOURCE LINE # 2103
0008 22                RET     
             ; FUNCTION _Hook_keyboard (END)

             ; FUNCTION _Et_Hook_keyboard (BEGIN)
                                           ; SOURCE LINE # 2110
0000 900000      R     MOV     DPTR,#KSIValus
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2111
                                           ; SOURCE LINE # 2113
0008 22                RET     
             ; FUNCTION _Et_Hook_keyboard (END)

             ; FUNCTION Hook_Setup_Scanner_Pntr (BEGIN)
                                           ; SOURCE LINE # 2122
                                           ; SOURCE LINE # 2123
                                           ; SOURCE LINE # 2125
0000 7800        E     MOV     R0,#LOW Scanner_RAM_Pntr
0002 7400        E     MOV     A,#HIGH KB_RAM_Table
0004 F6                MOV     @R0,A
0005 08                INC     R0
0006 7400        E     MOV     A,#LOW KB_RAM_Table
0008 F6                MOV     @R0,A
                                           ; SOURCE LINE # 2126
0009 7E00        E     MOV     R6,#HIGH ExKB_RAM_Table
000B 7F00        E     MOV     R7,#LOW ExKB_RAM_Table
000D 7800        E     MOV     R0,#LOW Extendkey_RAM_Pntr
000F 7400        E     MOV     A,#HIGH ExKB_RAM_Table
0011 F6                MOV     @R0,A
0012 08                INC     R0
0013 7400        E     MOV     A,#LOW ExKB_RAM_Table
0015 F6                MOV     @R0,A
                                           ; SOURCE LINE # 2127
0016 020000      R     LJMP    LoadKBMatrixToRAM
             ; FUNCTION Hook_Setup_Scanner_Pntr (END)

             ; FUNCTION LoadKBMatrixToRAM (BEGIN)
                                           ; SOURCE LINE # 2137
                                           ; SOURCE LINE # 2138
                                           ; SOURCE LINE # 2142
0000 900000      E     MOV     DPTR,#uMBID
0003 E0                MOVX    A,@DPTR
0004 30E040            JNB     ACC.0,?C0222
                                           ; SOURCE LINE # 2143
                                           ; SOURCE LINE # 2144
0007 900000      E     MOV     DPTR,#cKBStatus
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 75  

000A E0                MOVX    A,@DPTR
000B 5403              ANL     A,#03H
000D 6403              XRL     A,#03H
000F 6011              JZ      ?C0223
                                           ; SOURCE LINE # 2145
                                           ; SOURCE LINE # 2146
0011 E4                CLR     A
0012 F500        E     MOV     ITempB06,A
0014         ?C0224:
                                           ; SOURCE LINE # 2147
                                           ; SOURCE LINE # 2148
0014 120000      R     LCALL   L?0278
                                           ; SOURCE LINE # 2149
0017 900000      R     MOV     DPTR,#Rc_ROM_Tables
                                           ; SOURCE LINE # 2150
001A 120000      R     LCALL   L?0271
001D B480F4            CJNE    A,#080H,?C0224
0020 800F              SJMP    ?C0227
                                           ; SOURCE LINE # 2151
0022         ?C0223:
                                           ; SOURCE LINE # 2153
                                           ; SOURCE LINE # 2154
0022 E4                CLR     A
0023 F500        E     MOV     ITempB06,A
0025         ?C0228:
                                           ; SOURCE LINE # 2155
                                           ; SOURCE LINE # 2156
0025 120000      R     LCALL   L?0278
                                           ; SOURCE LINE # 2157
0028 900000      R     MOV     DPTR,#Rc_ROM_Tables_15BR
                                           ; SOURCE LINE # 2158
002B 120000      R     LCALL   L?0271
002E B480F4            CJNE    A,#080H,?C0228
                                           ; SOURCE LINE # 2159
0031         ?C0227:
                                           ; SOURCE LINE # 2161
0031 E4                CLR     A
0032 F500        E     MOV     ITempB06,A
0034         ?C0231:
                                           ; SOURCE LINE # 2162
                                           ; SOURCE LINE # 2163
0034 120000      R     LCALL   L?0297
0037 120000      R     LCALL   L?0280
                                           ; SOURCE LINE # 2164
003A AF00        E     MOV     R7,ITempB06
003C EF                MOV     A,R7
003D 900000      R     MOV     DPTR,#EtKey_ROM_Tables
                                           ; SOURCE LINE # 2165
0040 120000      R     LCALL   L?0272
0043 B418EE            CJNE    A,#018H,?C0231
0046 22                RET     
                                           ; SOURCE LINE # 2166
0047         ?C0222:
                                           ; SOURCE LINE # 2168
                                           ; SOURCE LINE # 2169
0047 900000      E     MOV     DPTR,#cKBStatus
004A E0                MOVX    A,@DPTR
004B 5403              ANL     A,#03H
004D 6403              XRL     A,#03H
004F 6014              JZ      ?C0235
                                           ; SOURCE LINE # 2170
                                           ; SOURCE LINE # 2171
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 76  

0051 E4                CLR     A
0052 F500        E     MOV     ITempB06,A
0054         ?C0236:
                                           ; SOURCE LINE # 2172
                                           ; SOURCE LINE # 2173
0054 120000      R     LCALL   L?0279
                                           ; SOURCE LINE # 2174
0057 AF00        E     MOV     R7,ITempB06
0059 EF                MOV     A,R7
005A 900000      R     MOV     DPTR,#Rc_ROM_Tables_14
                                           ; SOURCE LINE # 2175
005D 120000      R     LCALL   L?0272
0060 B480F1            CJNE    A,#080H,?C0236
0063 8012              SJMP    ?C0239
                                           ; SOURCE LINE # 2176
0065         ?C0235:
                                           ; SOURCE LINE # 2178
                                           ; SOURCE LINE # 2179
0065 E4                CLR     A
0066 F500        E     MOV     ITempB06,A
0068         ?C0240:
                                           ; SOURCE LINE # 2180
                                           ; SOURCE LINE # 2181
0068 120000      R     LCALL   L?0279
                                           ; SOURCE LINE # 2182
006B AF00        E     MOV     R7,ITempB06
006D EF                MOV     A,R7
006E 900000      R     MOV     DPTR,#Rc_ROM_Tables_14BR
                                           ; SOURCE LINE # 2183
0071 120000      R     LCALL   L?0272
0074 B480F1            CJNE    A,#080H,?C0240
                                           ; SOURCE LINE # 2184
0077         ?C0239:
                                           ; SOURCE LINE # 2186
0077 E4                CLR     A
0078 F500        E     MOV     ITempB06,A
007A         ?C0243:
                                           ; SOURCE LINE # 2187
                                           ; SOURCE LINE # 2188
007A 120000      R     LCALL   L?0297
007D 120000      R     LCALL   L?0280
                                           ; SOURCE LINE # 2189
0080 AF00        E     MOV     R7,ITempB06
0082 EF                MOV     A,R7
0083 900000      R     MOV     DPTR,#EtKey_ROM_Tables_1
                                           ; SOURCE LINE # 2190
0086 120000      R     LCALL   L?0272
0089 B418EE            CJNE    A,#018H,?C0243
                                           ; SOURCE LINE # 2191
                                           ; SOURCE LINE # 2192
008C         ?C0246:
008C 22                RET     
             ; FUNCTION LoadKBMatrixToRAM (END)

             ; FUNCTION Hook_SetGPIOScanPinH (BEGIN)
                                           ; SOURCE LINE # 2197
                                           ; SOURCE LINE # 2198
                                           ; SOURCE LINE # 2200
0000 22                RET     
             ; FUNCTION Hook_SetGPIOScanPinH (END)

             ; FUNCTION Hook_SetGPIOScanPinL (BEGIN)
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 77  

                                           ; SOURCE LINE # 2205
                                           ; SOURCE LINE # 2206
                                           ; SOURCE LINE # 2208
0000 22                RET     
             ; FUNCTION Hook_SetGPIOScanPinL (END)

             ; FUNCTION Hook_SetGPIOScanPinCtrl (BEGIN)
                                           ; SOURCE LINE # 2213
                                           ; SOURCE LINE # 2214
                                           ; SOURCE LINE # 2216
0000 22                RET     
             ; FUNCTION Hook_SetGPIOScanPinCtrl (END)

             ; FUNCTION Hook_Fn_Key_Make (BEGIN)
                                           ; SOURCE LINE # 2221
                                           ; SOURCE LINE # 2222
                                           ; SOURCE LINE # 2223
0000 900000      E     MOV     DPTR,#cCmd
0003 E0                MOVX    A,@DPTR
0004 30E60C            JNB     ACC.6,?C0250
                                           ; SOURCE LINE # 2224
                                           ; SOURCE LINE # 2225
0007 7FE0              MOV     R7,#0E0H
0009 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2226
000C 7F16              MOV     R7,#016H
000E 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2227
0011 D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 2228
0013         ?C0250:
                                           ; SOURCE LINE # 2229
0013 900000      E     MOV     DPTR,#FnStatus
0016 7401              MOV     A,#01H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2231
0019 22                RET     
             ; FUNCTION Hook_Fn_Key_Make (END)

             ; FUNCTION Hook_Fn_Key_Break (BEGIN)
                                           ; SOURCE LINE # 2236
                                           ; SOURCE LINE # 2237
                                           ; SOURCE LINE # 2249
0000 900000      E     MOV     DPTR,#SysStatus
0003 E0                MOVX    A,@DPTR
0004 30E220            JNB     ACC.2,?C0252
                                           ; SOURCE LINE # 2250
                                           ; SOURCE LINE # 2251
0007 E0                MOVX    A,@DPTR
0008 20E307            JB      ACC.3,?C0253
                                           ; SOURCE LINE # 2252
                                           ; SOURCE LINE # 2253
000B 7D01              MOV     R5,#01H
000D 7F4D              MOV     R7,#04DH
000F 120000      E     LCALL   _simple_code
                                           ; SOURCE LINE # 2254
0012         ?C0253:
                                           ; SOURCE LINE # 2255
0012 7D01              MOV     R5,#01H
0014 7F1F              MOV     R7,#01FH
0016 120000      E     LCALL   _e0_prefix_code
                                           ; SOURCE LINE # 2257
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 78  

0019 900000      E     MOV     DPTR,#SysStatus
001C E0                MOVX    A,@DPTR
001D 54F3              ANL     A,#0F3H
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2259
0020 D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 2260
0022 7F04              MOV     R7,#04H
0024 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 2261
0027         ?C0252:
                                           ; SOURCE LINE # 2264
0027 900000      E     MOV     DPTR,#cCmd
002A E0                MOVX    A,@DPTR
002B 30E611            JNB     ACC.6,?C0254
                                           ; SOURCE LINE # 2265
                                           ; SOURCE LINE # 2266
002E 7FE0              MOV     R7,#0E0H
0030 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2267
0033 7FF0              MOV     R7,#0F0H
0035 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2268
0038 7F16              MOV     R7,#016H
003A 120000      E     LCALL   _Buffer_Key
                                           ; SOURCE LINE # 2269
003D D200        E     SETB    F_Service_SEND
                                           ; SOURCE LINE # 2270
003F         ?C0254:
                                           ; SOURCE LINE # 2271
003F E4                CLR     A
0040 900000      E     MOV     DPTR,#FnStatus
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2272
0044 22                RET     
             ; FUNCTION Hook_Fn_Key_Break (END)

             ; FUNCTION Hook_calc_index_comb_BIT6 (BEGIN)
                                           ; SOURCE LINE # 2277
                                           ; SOURCE LINE # 2278
                                           ; SOURCE LINE # 2279
0000 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2280
0002         ?C0256:
0002 22                RET     
             ; FUNCTION Hook_calc_index_comb_BIT6 (END)

             ; FUNCTION Hook_calc_index_comb_BIT7 (BEGIN)
                                           ; SOURCE LINE # 2285
                                           ; SOURCE LINE # 2286
                                           ; SOURCE LINE # 2287
0000 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2288
0002         ?C0257:
0002 22                RET     
             ; FUNCTION Hook_calc_index_comb_BIT7 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2463    ----
   CONSTANT SIZE    =   1342    ----
C51 COMPILER V8.12   OEM_SCANTABS                                                          09/14/2018 11:08:09 PAGE 79  

   XDATA SIZE       =   ----      43
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
