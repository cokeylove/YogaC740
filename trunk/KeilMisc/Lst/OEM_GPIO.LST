C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_GPIO
OBJECT MODULE PLACED IN Code\OEM\OEM_GPIO.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\OEM\OEM_GPIO.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\IN
                    -CLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_GPIO.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          //-----------------------------------------------------------------
  14          // External ram GPIO Registers
  15          //-----------------------------------------------------------------
  16          const sInitGPIOReg code asInitGPIOReg[] =
  17          {
  18                  { &GCR,         GCR_Init                },      //
  19                  { &GCR2,        GCR2_Init               },      //
  20          //      { &GCR3,        GCR3_Init               },      //72JERRY021: Modify clkrun signal setting follow quiet mode.
  21                  { &GCR10,       GCR10_Init              },
  22           //     { &GPOTE,       GPOTE_Init              },
  23          //      { &GPOTD,       GPOTD_Init              }, //BROOKEW005: start configure GPIO 1.8V and Open drain
  24                  { &GPOTH,       GPOTH_Init              }, //72JERRY021: Modify clkrun signal setting follow quiet mode.
  25                  
  26                  
  27                  //{ &GPOTA,     0x06                    },      // msmart  /AC  //cwy
  28           //     { &GPOTA,       GPOTA_Init                      },      //ANGELAS011 :Set  EC_VCCST_PWRGD pin is OD.//72JERRY037: Modify power seque
             -nce and GPIO setting follow EE.
  29          //      { &GPOTE,       GPOTE_Init                      },      //MEILING039 :Set  GPU_PROCHOT_ON# pin is OD.
  30                  
  31          
  32                  { &GPDRA,       PortA_Init              },      // Port A Data port Init
  33                  { &GPDRB,       PortB_Init              },      // Port B Data port Init
  34                  { &GPDRC,       PortC_Init              },      // Port C Data port Init
  35                  { &GPDRD,       PortD_Init              },      // Port D Data port Init
  36                  { &GPDRE,       PortE_Init              },      // Port E Data port Init
  37                  { &GPDRF,       PortF_Init              },      // Port F Data port Init
  38                  { &GPDRG,       PortG_Init              },      // Port G Data port Init
  39                  { &GPDRH,       PortH_Init              },      // Port H Data port Init
  40                  { &GPDRI,       PortI_Init              },      // Port I Data port Init
  41                  { &GPDRJ,       PortJ_Init              },      // Port J Data port Init
  42          
  43                  { &GPCRA0,      PortA0_Ctrl             },
  44                  { &GPCRA1,      PortA1_Ctrl             },
  45                  { &GPCRA2,      PortA2_Ctrl             },
  46                  { &GPCRA3,      PortA3_Ctrl             },
  47                  { &GPCRA4,      PortA4_Ctrl             },
  48                  { &GPCRA5,      PortA5_Ctrl             },
  49                  { &GPCRA6,      PortA6_Ctrl             },
  50                  { &GPCRA7,      PortA7_Ctrl             },
  51          
  52                  { &GPCRB0,      PortB0_Ctrl             },
  53                  { &GPCRB1,      PortB1_Ctrl             },
C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 2   

  54                  { &GPCRB2,      PortB2_Ctrl             },
  55                  { &GPCRB3,      PortB3_Ctrl             },
  56                  { &GPCRB4,      PortB4_Ctrl             },
  57                  { &GPCRB5,      PortB5_Ctrl             },
  58                  { &GPCRB6,      PortB6_Ctrl             },
  59                  { &GPCRB7,      PortB7_Ctrl             },
  60          
  61                  { &GPCRC0,      PortC0_Ctrl             },
  62                  { &GPCRC1,      PortC1_Ctrl             },
  63                  { &GPCRC2,      PortC2_Ctrl             },
  64                  { &GPCRC3,      PortC3_Ctrl             },
  65                  { &GPCRC4,      PortC4_Ctrl             },
  66                  { &GPCRC5,      PortC5_Ctrl             },
  67                  { &GPCRC6,      PortC6_Ctrl             },
  68                  { &GPCRC7,      PortC7_Ctrl             },
  69          
  70                  { &GPCRD0,      PortD0_Ctrl             },
  71                  { &GPCRD1,      PortD1_Ctrl             },
  72                  { &GPCRD2,      PortD2_Ctrl             },
  73                  { &GPCRD3,      PortD3_Ctrl             },
  74                  { &GPCRD4,      PortD4_Ctrl             },
  75                  { &GPCRD5,      PortD5_Ctrl             },
  76                  { &GPCRD6,      PortD6_Ctrl             },
  77                  { &GPCRD7,      PortD7_Ctrl             },
  78          
  79                  { &GPCRE0,      PortE0_Ctrl             },
  80                  { &GPCRE1,      PortE1_Ctrl             },
  81                  { &GPCRE2,      PortE2_Ctrl             },
  82                  { &GPCRE3,      PortE3_Ctrl             },
  83                  { &GPCRE4,      PortE4_Ctrl     },
  84                  { &GPCRE5,      PortE5_Ctrl             },
  85                  { &GPCRE6,      PortE6_Ctrl             },
  86                  { &GPCRE7,      PortE7_Ctrl             },
  87          
  88                  { &GPCRF0,      PortF0_Ctrl             },
  89                  { &GPCRF1,      PortF1_Ctrl             },
  90                  { &GPCRF2,      PortF2_Ctrl             },
  91                  { &GPCRF3,      PortF3_Ctrl             },
  92                  { &GPCRF4,      PortF4_Ctrl             },
  93                  { &GPCRF5,      PortF5_Ctrl             },
  94                  { &GPCRF6,      PortF6_Ctrl             },
  95                  { &GPCRF7,      PortF7_Ctrl             },
  96          
  97                  { &GPCRG0,      PortG0_Ctrl             },
  98                  { &GPCRG1,      PortG1_Ctrl             },
  99                  { &GPCRG2,      PortG2_Ctrl             },
 100                  { &GPCRG3,      PortG3_Ctrl             },
 101                  { &GPCRG4,      PortG4_Ctrl             },
 102                  { &GPCRG5,      PortG5_Ctrl             },
 103                  { &GPCRG6,      PortG6_Ctrl             },
 104                  { &GPCRG7,      PortG7_Ctrl             },
 105          
 106                  { &GPCRH0,      PortH0_Ctrl             },
 107                  { &GPCRH1,      PortH1_Ctrl             },
 108                  { &GPCRH2,      PortH2_Ctrl             },
 109                  { &GPCRH3,      PortH3_Ctrl             },
 110                  { &GPCRH4,      PortH4_Ctrl             },
 111                  { &GPCRH5,      PortH5_Ctrl             },
 112                  { &GPCRH6,      PortH6_Ctrl             },
 113          
 114                  { &GPCRI0,      PortI0_Ctrl             },
 115                  { &GPCRI1,      PortI1_Ctrl             },
C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 3   

 116                  { &GPCRI2,      PortI2_Ctrl             },
 117                  { &GPCRI3,      PortI3_Ctrl             },
 118                  { &GPCRI4,      PortI4_Ctrl             },
 119                  { &GPCRI5,      PortI5_Ctrl             },
 120                  { &GPCRI6,      PortI6_Ctrl             },
 121                  { &GPCRI7,      PortI7_Ctrl             },
 122          
 123                  { &GPCRJ0,      PortJ0_Ctrl             },
 124                  { &GPCRJ1,      PortJ1_Ctrl             },
 125                  { &GPCRJ2,      PortJ2_Ctrl             },
 126                  { &GPCRJ3,      PortJ3_Ctrl             },
 127                  { &GPCRJ4,      PortJ4_Ctrl             },
 128                  { &GPCRJ5,      PortJ5_Ctrl             },
 129                  { &GPCRJ6,      PortJ6_Ctrl             },
 130                  { &GPCRJ7,      PortJ7_Ctrl             }
 131          
 132          };
 133          
 134          //-----------------------------------------------------------------------------
 135          // The function of GPIO register init.
 136          //-----------------------------------------------------------------------------
 137          void Init_GPIO(void)
 138          {
 139   1              BYTE index;
 140   1              index=0x00;
 141   1              //GPCRE5= OUTPUT;//JERRYSK002:Change GPIO ctrl.
 142   1          //DPWROK_EC_HI();
 143   1          //Delay1MS(1);
 144   1          //RamDebug(0x44);
 145   1          //GPCRH0=OUTPUT; //ANGELAS015:Change GPIO ctrl.
 146   1          // RSMRST_HI();//JERRYSK001:modify RSMRST signal to low when GPIO init.
 147   1              while(index<(sizeof(asInitGPIOReg)/sizeof(sInitGPIOReg)))
 148   1              {
 149   2                      /*ANGELAS038:remove start
 150   2                      //ANGELAS023:s+Modify UMA LED function.
 151   2                      if((NTC_FLAG==1) && (index==6))
 152   2                      {
 153   2                              *asInitGPIOReg[index].reg=0x07;
 154   2                              index++;
 155   2                              break;
 156   2                      }
 157   2                      //ANGELAS023:e+Modify UMA LED function.
 158   2                      *///ANGELAS038:remove end
 159   2                      *asInitGPIOReg[index].reg=asInitGPIOReg[index].value;
 160   2                      index++;
 161   2              }
 162   1      }
 163          
 164          //----------------------------------------------------------------------------
 165          // Hook function of SCI high
 166          //----------------------------------------------------------------------------
 167          void Hook_SCION(void)
 168          {
 169   1              SCI_ON();
 170   1      }
 171          
 172          //----------------------------------------------------------------------------
 173          // Hook function of SCI low
 174          //----------------------------------------------------------------------------
 175          void Hook_SCIOFF(void)
 176          {
 177   1              SCI_OFF();
C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 4   

 178   1      }
 179          
 180          //----------------------------------------------------------------------------
 181          // Hook function of SMI high
 182          //----------------------------------------------------------------------------
 183          void Hook_SMION(void)
 184          {
 185   1              SMI_ON();//hang check
 186   1      }
 187          
 188          //----------------------------------------------------------------------------
 189          // Hook function of SMI low
 190          //----------------------------------------------------------------------------
 191          void Hook_SMIOFF(void)
 192          {
 193   1              SMI_OFF();//hang check
 194   1      }
 195          
 196          //----------------------------------------------------------------------------
 197          // Hook function of A20 high
 198          //----------------------------------------------------------------------------
 199          void Hook_A20ON(void)
 200          {
 201   1              //GATEA20_ON();
 202   1      }
 203          
 204          //----------------------------------------------------------------------------
 205          // Hook function of A20 low
 206          //----------------------------------------------------------------------------
 207          void Hook_A20OFF(void)
 208          {
 209   1              //GATEA20_OFF();
 210   1      }
 211          
 212          //----------------------------------------------------------------------------
 213          // Hook function of keyboard reset low
 214          //----------------------------------------------------------------------------
 215          void Hook_KBRSTON(void)
 216          {
 217   1              KBRST_ON();
 218   1      }
 219          
 220          //----------------------------------------------------------------------------
 221          // Hook function of keyboard reset high
 222          //----------------------------------------------------------------------------
 223          void Hook_KBRSTOFF(void)
 224          {
 225   1              KBRST_OFF();
 226   1      }
 227          
 228          //----------------------------------------------------------------------------
 229          // Hook function of NUM LED ON
 230          //----------------------------------------------------------------------------
 231          void Hook_NUMLED_ON(void)
 232          {
 233   1              if (cOsLedCtrl.fbit.cOL_CtrlRight ==0 )
 234   1                      {
 235   2                      //NUMLED_ON();
 236   2                      }
 237   1      }
 238          
 239          //----------------------------------------------------------------------------
C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 5   

 240          // Hook function of NUM LED OFF
 241          //----------------------------------------------------------------------------
 242          void Hook_NUMLED_OFF(void)
 243          {
 244   1              if (cOsLedCtrl.fbit.cOL_CtrlRight ==0 )
 245   1                      {
 246   2                      //NUMLED_OFF();
 247   2                      }
 248   1      }
 249          
 250          //----------------------------------------------------------------------------
 251          // Hook function of CAP LED ON
 252          //----------------------------------------------------------------------------
 253          void Hook_CAPLED_ON(void)
 254          {
 255   1              if (cOsLedCtrl.fbit.cOL_CtrlRight ==0 )
 256   1                      CAPLED_ON();
 257   1      }
 258          
 259          //----------------------------------------------------------------------------
 260          // Hook function of CAP LED OFF
 261          //----------------------------------------------------------------------------
 262          void Hook_CAPLED_OFF(void)
 263          {
 264   1              if (cOsLedCtrl.fbit.cOL_CtrlRight ==0 )
 265   1                      CAPLED_OFF();
 266   1      }
C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 6   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0014 (BEGIN)
0000         L?0021:
0000 900000      E     MOV     DPTR,#cOsLedCtrl
0003 E0                MOVX    A,@DPTR
0004 C4                SWAP    A
0005 13                RRC     A
0006 13                RRC     A
0007 13                RRC     A
0008 5401              ANL     A,#01H
000A 22                RET     
000B         L?0022:
000B 75F003            MOV     B,#03H
000E EF                MOV     A,R7
000F 120000      E     LCALL   ?C?OFFXADD
0012 E4                CLR     A
0013 93                MOVC    A,@A+DPTR
0014 22                RET     
             ; FUNCTION Com0014 (END)

             ; FUNCTION Init_GPIO (BEGIN)
                                           ; SOURCE LINE # 137
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 140
;---- Variable 'index' assigned to Register 'R7' ----
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002         ?C0001:
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 159
0002 900000      R     MOV     DPTR,#asInitGPIOReg+02H
0005 120000      R     LCALL   L?0022
0008 FE                MOV     R6,A
0009 900000      R     MOV     DPTR,#asInitGPIOReg
000C 120000      R     LCALL   L?0022
000F FC                MOV     R4,A
0010 7401              MOV     A,#01H
0012 93                MOVC    A,@A+DPTR
0013 F582              MOV     DPL,A
0015 8C83              MOV     DPH,R4
0017 EE                MOV     A,R6
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
0019 0F                INC     R7
                                           ; SOURCE LINE # 161
001A EF                MOV     A,R7
001B B45DE4            CJNE    A,#05DH,?C0001
                                           ; SOURCE LINE # 162
001E         ?C0003:
001E 22                RET     
             ; FUNCTION Init_GPIO (END)

             ; FUNCTION Hook_SCION (BEGIN)
                                           ; SOURCE LINE # 167
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
0000 900000      E     MOV     DPTR,#GPDRD
0003 E0                MOVX    A,@DPTR
0004 54F7              ANL     A,#0F7H
C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 7   

0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
0007 22                RET     
             ; FUNCTION Hook_SCION (END)

             ; FUNCTION Hook_SCIOFF (BEGIN)
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
0000 900000      E     MOV     DPTR,#GPDRD
0003 E0                MOVX    A,@DPTR
0004 4408              ORL     A,#08H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 178
0007 22                RET     
             ; FUNCTION Hook_SCIOFF (END)

             ; FUNCTION Hook_SMION (BEGIN)
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
0000 900000      E     MOV     DPTR,#GPDRD
0003 E0                MOVX    A,@DPTR
0004 54EF              ANL     A,#0EFH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
0007 22                RET     
             ; FUNCTION Hook_SMION (END)

             ; FUNCTION Hook_SMIOFF (BEGIN)
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 193
0000 900000      E     MOV     DPTR,#GPDRD
0003 E0                MOVX    A,@DPTR
0004 4410              ORL     A,#010H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
0007 22                RET     
             ; FUNCTION Hook_SMIOFF (END)

             ; FUNCTION Hook_A20ON (BEGIN)
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 202
0000 22                RET     
             ; FUNCTION Hook_A20ON (END)

             ; FUNCTION Hook_A20OFF (BEGIN)
                                           ; SOURCE LINE # 207
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 210
0000 22                RET     
             ; FUNCTION Hook_A20OFF (END)

             ; FUNCTION Hook_KBRSTON (BEGIN)
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
0000 900000      E     MOV     DPTR,#GPDRB
0003 E0                MOVX    A,@DPTR
0004 54BF              ANL     A,#0BFH
C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 8   

0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 218
0007 22                RET     
             ; FUNCTION Hook_KBRSTON (END)

             ; FUNCTION Hook_KBRSTOFF (BEGIN)
                                           ; SOURCE LINE # 223
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
0000 900000      E     MOV     DPTR,#GPDRB
0003 E0                MOVX    A,@DPTR
0004 4440              ORL     A,#040H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
0007 22                RET     
             ; FUNCTION Hook_KBRSTOFF (END)

             ; FUNCTION Hook_NUMLED_ON (BEGIN)
                                           ; SOURCE LINE # 231
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0000 900000      E     MOV     DPTR,#cOsLedCtrl
0003 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 236
                                           ; SOURCE LINE # 237
0004         ?C0013:
0004 22                RET     
             ; FUNCTION Hook_NUMLED_ON (END)

             ; FUNCTION Hook_NUMLED_OFF (BEGIN)
                                           ; SOURCE LINE # 242
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 244
0000 900000      E     MOV     DPTR,#cOsLedCtrl
0003 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 247
                                           ; SOURCE LINE # 248
0004         ?C0015:
0004 22                RET     
             ; FUNCTION Hook_NUMLED_OFF (END)

             ; FUNCTION Hook_CAPLED_ON (BEGIN)
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
                                           ; SOURCE LINE # 255
0000 120000      R     LCALL   L?0021
0003 20E007            JB      ACC.0,?C0017
                                           ; SOURCE LINE # 256
0006 900000      E     MOV     DPTR,#GPDRH
0009 E0                MOVX    A,@DPTR
000A 54F7              ANL     A,#0F7H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 257
000D         ?C0017:
000D 22                RET     
             ; FUNCTION Hook_CAPLED_ON (END)

             ; FUNCTION Hook_CAPLED_OFF (BEGIN)
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 263
C51 COMPILER V8.12   OEM_GPIO                                                              09/14/2018 11:08:05 PAGE 9   

                                           ; SOURCE LINE # 264
0000 120000      R     LCALL   L?0021
0003 20E007            JB      ACC.0,?C0019
                                           ; SOURCE LINE # 265
0006 900000      E     MOV     DPTR,#GPDRH
0009 E0                MOVX    A,@DPTR
000A 4408              ORL     A,#08H
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 266
000D         ?C0019:
000D 22                RET     
             ; FUNCTION Hook_CAPLED_OFF (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =    279    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
