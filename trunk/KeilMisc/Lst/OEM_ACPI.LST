C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE OEM_ACPI
OBJECT MODULE PLACED IN Code\OEM\OEM_ACPI.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\OEM\OEM_ACPI.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(.\Code\CORE\IN
                    -CLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_ACPI.C
   3           *
   4           * Author : Dino
   5           *
   6           * Note : These functions are reference only.
   7           *        Please follow your project software specification to do some modification.
   8           *---------------------------------------------------------------------------*/
   9          
  10          #include <CORE_INCLUDE.H>
  11          #include <OEM_INCLUDE.H>
  12          
  13          //----------------------------------------------------------------------------
  14          // The hook function of 62 port data
  15          //  Note :
  16          //  PM1Step != 0x00 is necessary.
  17          //----------------------------------------------------------------------------
  18          #pragma ot(8, speed)    
  19          void Hook_62Port(BYTE PM1Cmd)
  20          {
  21   1              BYTE i;
  22   1      
  23   1              switch(PM1Cmd)
  24   1              {
  25   2              case 0x40:
  26   2                      Cmd_40(PM1Data);
  27   2                      break;
  28   2              case 0x41:
  29   2                      if(PM1Data==0xA1) Cmd_41_A1(0x62);
  30   2                      break;
  31   2              case 0x42:
  32   2                      Cmd_42(PM1Data);
  33   2                      break;
  34   2              case 0x43:
  35   2                      Cmd_43(0x62,PM1Data);
  36   2                      break;
  37   2              case 0x45:
  38   2                      Cmd_45(0x62,PM1Data);
  39   2                      break;
  40   2              case 0x46:
  41   2                      Cmd_46(0x62,PM1Data); 
  42   2                      break;
  43   2              case 0x47:
  44   2                      Cmd_47(0x62,PM1Data);
  45   2                      break;
  46   2              case 0x49:
  47   2                      break;
  48   2              case 0x4B:
  49   2                      if (PM1Step == 0x04)
  50   2                      {
  51   3                              i = PM1Data;
  52   3                              break;
  53   3                      }
  54   2                      if (PM1Step == 0x03)
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 2   

  55   2                      {
  56   3                              eEEPROMAddrsss = PM1Data;
  57   3                              break;
  58   3                      }
  59   2                      if (PM1Step == 0x02)
  60   2                      {
  61   3                              eEEPROMBank = PM1Data;
  62   3                              break;
  63   3                      }
  64   2                      if (PM1Step == 0x01)
  65   2                      {
  66   3                              eEEPROMData     = PM1Data;
  67   3                  SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
  68   3                              Update_EEPROMMark();
  69   3                  CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
  70   3                              Data2PortDirect(0x62, 0x00);  
  71   3                      }
  72   2                      break;
  73   2      
  74   2              case 0x4C:
  75   2                      if (PM1Step == 0x03)
  76   2                      {
  77   3                              i = PM1Data;
  78   3                              break;
  79   3                      }
  80   2                      if (PM1Step == 0x02)
  81   2                      {
  82   3                              eEEPROMAddrsss = PM1Data;
  83   3                              break;
  84   3                      }
  85   2                      if (PM1Step == 0x01)
  86   2                      {
  87   3                              eEEPROMBank = PM1Data;
  88   3                              Cmd_4E(0x62,eEEPROMAddrsss);
  89   3                      }
  90   2                      break;
  91   2      
  92   2              case 0x4D:
  93   2                      if (PM1Step == 0x02)
  94   2                      {
  95   3                              eEEPROMAddrsss = PM1Data;
  96   3                              break;
  97   3                      }
  98   2                      if (PM1Step == 0x01)
  99   2                      {
 100   3                              eEEPROMData     = PM1Data;
 101   3                  SET_MASK(LENOVOPMFW_Temp,EEPROM_Token);
 102   3                              Update_EEPROMMark();
 103   3                  CLEAR_MASK(LENOVOPMFW_Temp,EEPROM_Token);
 104   3                              Data2PortDirect(0x62, 0x00);  
 105   3                      }
 106   2                      break;
 107   2      
 108   2              case 0x4E:
 109   2                      eEEPROMAddrsss = PM1Data;
 110   2                      Cmd_4E(0x62,eEEPROMAddrsss);
 111   2                      break;
 112   2      
 113   2              case 0x51:
 114   2                      break;
 115   2      
 116   2              case 0x52:
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 3   

 117   2                      if(PM1Data==0xA0) Cmd_52_A0(0x62);
 118   2                      if(PM1Data==0xA3) Cmd_52_A3(0x62);
 119   2                      if(PM1Data==0xA4) Cmd_52_A4(0x62);
 120   2                      if(PM1Data==0xA5) Cmd_52_A5(0x62);
 121   2                      if(PM1Data==0xA6) Cmd_52_A6(0x62); 
 122   2                      if(PM1Data==0xA7) Cmd_52_A7(0x62); 
 123   2                      break;
 124   2      
 125   2              case 0x53:
 126   2                      if (PM1Step == 0x01)
 127   2                      {
 128   3                              Cmd_53(0x62,PM1Data2,PM1Data1,PM1Data);
 129   3                      }
 130   2                      break;
 131   2              case 0x56:
 132   2                      break;
 133   2              case 0x58:
 134   2                      Cmd_58(PM1Data);
 135   2                      break;
 136   2              case 0x59:
 137   2                      Cmd_59(0x62,PM1Data,0);
 138   2                      break;
 139   2              case 0x5C:
 140   2                      Cmd_5C(0x62);
 141   2                      break;
 142   2              case 0x5D:
 143   2                      Cmd_5D(PM1Data);
 144   2                      break;
 145   2          case 0x71:
 146   2              Cmd_71(PM1Data);
 147   2                      break;
 148   2              case 0x72:
 149   2                      Cmd_72(PM1Data);//add flag for tool to keep the battery at 60%
 150   2                      break;                  
 151   2              case 0x7A:
 152   2                      Cmd_7A(0x62,PM1Data);
 153   2                      break;
 154   2              case 0x7B:
 155   2                      if( PM1Step == 0x01 )
 156   2                      {
 157   3                              Cmd_7B(0x62,PM1Data1,PM1Data);;
 158   3                      }
 159   2                      break;                  
 160   2              //Add 7Eh Command to access all EC RAM.
 161   2              case 0x7E:
 162   2                      if( PM1Step == 0x01 )
 163   2                      {
 164   3                              Cmd_7E(0x62,PM1Data1,PM1Data);
 165   3                      }
 166   2                      break;
 167   2              case 0xB0:
 168   2                      Cmd_B0(0x62,PM1Data);
 169   2                      break;
 170   2              case 0xB3:
 171   2                      if (PM1Step == 0x01)
 172   2                      {
 173   3                              Cmd_B3(0x62,PM1Data1,PM1Data);
 174   3                      }
 175   2                      break;
 176   2              }
 177   1      }
 178          
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 4   

 179          //----------------------------------------------------------------------------
 180          // The hook function of 66 port command.
 181          //----------------------------------------------------------------------------
 182          #pragma ot(8, speed)    
 183          void Hook_66Port(BYTE PM1Cmd)
 184          {
 185   1              switch(PM1Cmd)
 186   1              {
 187   2              case 0x40:
 188   2                      PM1Step=0x01;
 189   2                      break;
 190   2              case 0x41:
 191   2                      PM1Step=0x01;
 192   2                      break;
 193   2              case 0x42:
 194   2                      PM1Step=0x01;
 195   2                      break;
 196   2              case 0x43:
 197   2                      PM1Step=0x01;
 198   2                      break;
 199   2              case 0x44:
 200   2                      Cmd_44(0x62);
 201   2                      break;
 202   2              case 0x45:
 203   2                      PM1Step=0x01;
 204   2                      break;
 205   2              case 0x46:
 206   2                      PM1Step=0x01;
 207   2                      break;
 208   2              case 0x47:
 209   2                      PM1Step=0x01;
 210   2                      break;
 211   2              case 0x49:
 212   2                      Cmd_49(0x62);
 213   2                      break;
 214   2              case 0x4B:
 215   2                      PM1Step=0x04;
 216   2                      break;
 217   2              case 0x4C:
 218   2                      PM1Step=0x03;
 219   2                      break;
 220   2              case 0x4D:
 221   2                      PM1Step=0x02;
 222   2                      break;
 223   2              case 0x4E:
 224   2                      PM1Step=0x01;
 225   2                      break;
 226   2      
 227   2              case 0x4F:
 228   2                      Erase_EEPROMAll();
 229   2                      break;
 230   2      //Add CMD 0X50 for osAging S4 keep EC power.
 231   2                      case 0x50:
 232   2                              SET_MASK(ACPI_HOTKEY, b6Cmd_NoShut);//for osAging s4 keep EC power
 233   2                              break;
 234   2              // Add CMD 0X50 for osAging S4 keep EC power.
 235   2              case 0x51:
 236   2                      Cmd_51(0x62);
 237   2                      break;
 238   2              case 0x52:
 239   2                      PM1Step=0x01;
 240   2                      break;
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 5   

 241   2              case 0x53:
 242   2                      PM1Step=0x03; //change 2 to 3
 243   2                      break;
 244   2              case 0x56:
 245   2                      break;
 246   2              case 0x58:
 247   2                      PM1Step=0x01;
 248   2                      break;
 249   2              case 0x59:
 250   2                      PM1Step=0x01;
 251   2                      break;
 252   2              case 0x5C:
 253   2                      break;
 254   2              case 0x5D:
 255   2                      PM1Step=0x01;
 256   2                      break;
 257   2              case 0x5E:                      // UNLOCK SHIP MODE 
 258   2                      #if shipmodesupport             //add ship mode judge
 259   2                      Unlock_ShipMode();
 260   2                      #endif
 261   2                      break;
 262   2              case 0x5F:      
 263   2                      #if shipmodesupport             //add ship mode judge// LOCK SHIP MODE 
 264   2                      ShipModeEn=0xA5;  
 265   2                      Data2PortDirect(0x62, 0x5A);
 266   2              RamDebug(0xA5);
 267   2                      #endif
 268   2                      break;
 269   2          case 0x71:
 270   2                      PM1Step=0x01; 
 271   2                      break;
 272   2              case 0x72:
 273   2                      PM1Step=0x01;
 274   2                      break;
 275   2              case 0x75:
 276   2                      Cmd_75(); 
 277   2                      break;
 278   2              case 0x7A:
 279   2                      PM1Step=0x01;
 280   2                      break;
 281   2              case 0x7B:
 282   2                      PM1Step=0x02;
 283   2                      break;  
 284   2              //Add workaround for hang bios.
 285   2              case 0x7C:
 286   2                      Bioswatchdog=1;
 287   2                      Bioswatchdogtime=0;//clear time.
 288   2                      Data2PortDirect(0x62, 0x55);//add return date for bios.
 289   2                      break;
 290   2              case 0x7D:
 291   2                      Bioswatchdog=0;
 292   2                      Data2PortDirect(0x62, 0x55);//add return date for bios.
 293   2                      break;
 294   2              //Add 7Eh Command to access all EC RAM.
 295   2              case 0x7E:
 296   2                      PM1Step=0x02;
 297   2                      break;
 298   2              case 0xB0:
 299   2                      PM1Step=0x01;
 300   2                      break;
 301   2              //start for save P80 code to setup. 
 302   2              case 0xB1:
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 6   

 303   2                      Cmd_B1(0x62,0xB1);
 304   2                      break;
 305   2              case 0xB2:
 306   2                      Cmd_B2(0x62,0xB2);
 307   2                      break;
 308   2              //end for save P80 code to setup. 
 309   2              case 0xB3:
 310   2                      PM1Step=0x02;
 311   2                      break;
 312   2      
 313   2              }
 314   1      }
 315          
 316          
 317          #if ACPI_Smbus
 318          BYTE vOSSMbusWBlcok(void)
 319          {
 320   1               RamDebug(0xFA);
 321   1          if(SmBat_Addr == SMB_ADDR)
 322   1             return (bWSMBusBlock(SMbusChB, SMbusRBK, SMB_ADDR, SMB_CMD, &SMB_DATA, SMB_BCNT,SMBus_NeedPEC));
 323   1              #if SUPPORT_CYPRESS_PD_CCG4
 324   1          else if(Cypress_Addr == SMB_ADDR)
 325   1             return (bI2cMasterWrite(SMbusChA, SMB_ADDR, SMB_BCNT, SMB_CMD,(BYTE *)&SMB_DATA));//72JERRY003: Mod
             -ify flash PD FW interface.//72JERRY022: Modify GPIO setting follow SIT.CHANGE B TO C
 326   1              #endif   
 327   1          else 
 328   1                 return (bWSMBusBlock(SMbusChB, SMbusRBK, SMB_ADDR, SMB_CMD, &SMB_DATA, SMB_BCNT,SMBus_NeedPEC));
 329   1              
 330   1      }
 331          
 332          BYTE vOSSMbusRBlcok(void)
 333          {
 334   1          if(SmBat_Addr == SMB_ADDR)
 335   1                 return (bRSMBusBlock(SMbusChB, SMbusRBK, SMB_ADDR, SMB_CMD, &SMB_DATA));
 336   1              #if SUPPORT_CYPRESS_PD_CCG4
 337   1          if(Cypress_Addr == SMB_ADDR)
 338   1             return (bI2cMasterWriteToRead(SMbusChA, SMB_ADDR, SMB_CMD, SMB_DATA, SMB_BCNT, (BYTE *)&SMB_DATA1))
             -; //72JERRY003: Modify flash PD FW interface. //72JERRY022
 339   1          #endif
 340   1              else 
 341   1                      return (bRSMBusBlock(SMbusChB, SMbusRBK, SMB_ADDR, SMB_CMD, (BYTE *)&SMB_DATA));//72JERRY003: Modify fla
             -sh PD FW interface.
 342   1              
 343   1      }
 344          
 345          BYTE vOSSMbusRByte(void)
 346          {
 347   1              return (bRWSMBus(SMbusChB, SMbusRB, SMB_ADDR, SMB_CMD, &SMB_DATA, SMBus_NeedPEC));
 348   1      }
 349          
 350          BYTE vOSSMbusRWord(void)
 351          {
 352   1              return (bRWSMBus(SMbusChB, SMbusRW, SMB_ADDR, SMB_CMD, &SMB_DATA, SMBus_NeedPEC));
 353   1      }
 354          
 355          BYTE vOSSMbusWBYTE(void)
 356          {
 357   1              return (bRWSMBus(SMbusChB, SMbusWB, SMB_ADDR, SMB_CMD, &SMB_DATA, SMBus_NeedPEC));
 358   1      }
 359          
 360          BYTE vOSSMbusWWord(void)
 361          {
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 7   

 362   1              return (bRWSMBus(SMbusChB, SMbusWW, SMB_ADDR, SMB_CMD, &SMB_DATA, SMBus_NeedPEC));
 363   1      }
 364          
 365          void DummyFunction(void)
 366          {
 367   1      }
 368          
 369          const FUNCT_PTR_B_V code vOSSMbusComd_table[16] =
 370          {                                                               //the low nibble of SMB_PRTC
 371                  DummyFunction,          //0x00
 372                  DummyFunction,          //0x01
 373                  DummyFunction,          //0x02-Write Quick Command
 374                  DummyFunction,          //0x03-Read Quick Command
 375                  DummyFunction,          //0x04-Send Byte
 376                  DummyFunction,          //0x05-Receive Byte
 377                  vOSSMbusWBYTE,          //0x06-Write Byte
 378                  vOSSMbusRByte,          //0x07-Read Byte
 379                  vOSSMbusWWord,          //0x08-Write Word
 380                  vOSSMbusRWord,          //0x09-Read Word
 381                  vOSSMbusWBlcok,         //0x0A-Write Block
 382                  vOSSMbusRBlcok,         //0x0B-Read Block
 383                  DummyFunction,          //0x0C-Process Call
 384                  DummyFunction,          //0x0D-Write Block-Read Block Process Call
 385                  DummyFunction,          //0x0E
 386                  DummyFunction           //0x0F
 387          };
 388          
 389          // ACPI response to writes to SMBus Protocol register.
 390          void OSSMbusComd(void)
 391          {
 392   1              if( SMB_PRTC != 0x00 )
 393   1              {
 394   2                      SMB_STS = 0x00;
 395   2      
 396   2              if((vOSSMbusComd_table[(SMB_PRTC & 0x0F)])()) {
 397   3                      SMB_STS = 0x80;
 398   3              }
 399   2                      else 
 400   2                      {
 401   3                      if( IS_MASK_SET(HOSTA_A,BIT0) ) { SMB_STS = 0x1A; }
 402   3                      else if( IS_MASK_SET(HOSTA_A,BIT2) ) { SMB_STS = 0x17; }
 403   3                      else if( IS_MASK_SET(HOSTA_A,BIT3) ) { SMB_STS = 0x07; }
 404   3                      else if( IS_MASK_SET(HOSTA_A,BIT4) ) { SMB_STS = 0x19; }
 405   3                      else if( IS_MASK_SET(HOSTA_A,BIT5) ) { SMB_STS = 0x10; }
 406   3                      else if( IS_MASK_SET(HOSTA_A,BIT6) ) { SMB_STS = 0x18; }
 407   3                      }
 408   2              SMB_PRTC = 0x00;
 409   2      
 410   2              }
 411   1      }
 412          
 413          #endif  // ACPI_Smbus
 414          
 415          //----------------------------------------------------------------------------
 416          // Hook function of ACPI command
 417          //----------------------------------------------------------------------------
 418          void Hook_ACPICommand(void)
 419          {
 420   1          #if ACPI_Smbus
 421   1          OSSMbusComd();              // ACPI SMBus command
 422   1          #endif
 423   1      }
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 8   

 424          
 425          //-------------------------------------------------------------------------------
 426          // parameter "QeventSCI" only, For a pulsed SCI
 427          //------------------------------------------------------------------------------
 428          void OEM_ACPI_Gen_Int(void)
 429          {
 430   1          ACPI_Gen_Int(QeventSCI);
 431   1      }
 432          
 433          //-------------------------------------------------------------------------------
 434          //
 435          //-------------------------------------------------------------------------------
 436          void ResetSCIEvent(void)
 437          {
 438   1      
 439   1          CLEAR_MASK(PM1STS,SCIEVT);
 440   1          ECCheckBurstMode = 0;
 441   1      }
 442          
 443          /* ----------------------------------------------------------------------------
 444           * FUNCTION: ECQEvent -Setup cause flag for an SCI and start the ACPI_Timer.
 445           *
 446           * sci_number = 1 through 255.  The Host uses this number to determine the
 447           * cause of the SCI.
 448           * ------------------------------------------------------------------------- */
 449          void ECQEvent(BYTE sci_number)
 450          {
 451   1              if(IS_MASK_CLEAR(SYS_MISC1,ACPI_OS) || (SysPowState!=SYSTEM_S0))
 452   1              {
 453   2                      return;
 454   2              }
 455   1      
 456   1              ITempB05 = SCI_Event_In_Index;                  // Get the input index.
 457   1              SCI_Event_Buffer[ITempB05] = sci_number; // Put the SCI number in the buffer.
 458   1              ITempB05++;                                                     // Increment the index.
 459   1              if (ITempB05 >= EVENT_BUFFER_SIZE)
 460   1              {
 461   2              ITempB05 = 0;
 462   2              }
 463   1                                                                                              // If the buffer is not full, update the input index.
 464   1              if (ITempB05 != SCI_Event_Out_Index)
 465   1              {
 466   2                      SCI_Event_In_Index = ITempB05;
 467   2          }
 468   1              SET_MASK(PM1STS,SCIEVT);
 469   1          OEM_ACPI_Gen_Int();
 470   1      }
 471          
 472          //Hang check
 473          void ECSMIEvent(void)
 474          {
 475   1               if(SysPowState!=SYSTEM_S0)
 476   1          {
 477   2              return;
 478   2          }
 479   1          SET_MASK(PM1STS,SMIEVT);
 480   1              DisableAllInterrupt();
 481   1          Hook_SMIOFF();
 482   1              Hook_SMION();
 483   1          /* Delay 15.26 us */
 484   1          WNCKR = 0x00;
 485   1              Hook_SMIOFF();
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 9   

 486   1          EnableAllInterrupt();
 487   1      }
 488          //      Hang check
 489          //Enable SMI for hang debug.
 490          void ECSMI_SCIEvent(BYTE smi_number)
 491          {
 492   1                      ECQEvent(smi_number);
 493   1      }
 494          
 495          //----------------------------------------------------------------------------
 496          // Read EC ram Space
 497          //----------------------------------------------------------------------------
 498          BYTE Hook_ReadMapECSpace(BYTE MapIndex)
 499          {
 500   1              return( *((XBYTE *)(ECRAM|MapIndex)) );
 501   1      }
 502          
 503          void SetECSpaceAsRO(BYTE *formerByte,BYTE *writeByte,BYTE bitMask)
 504          {   
 505   1          BYTE index = 0x00;
 506   1              BYTE maskTemp = 0x00;
 507   1              BYTE indexTemp = 0x01;
 508   1              for(index=0x00;index<=0x07;index++)
 509   1              {
 510   2                  indexTemp = 0x01 << index;
 511   2                  maskTemp = bitMask & indexTemp;
 512   2                  if(maskTemp)
 513   2                  {
 514   3                      if(IS_MASK_SET(*formerByte,maskTemp))
 515   3                                SET_MASK(*writeByte,maskTemp);
 516   3                         else
 517   3                                CLEAR_MASK(*writeByte,maskTemp);
 518   3                  }
 519   2              }
 520   1      }
 521          
 522          
 523          //----------------------------------------------------------------------------
 524          // Write EC ram Space
 525          //----------------------------------------------------------------------------
 526          void Hook_WriteMapECSpace(BYTE MapIndex, BYTE data1)
 527          {
 528   1              BYTE *formerdate_XPntr;
 529   1              BYTE *writedate_XPntr;
 530   1              BYTE *Tmp_XPntr;
 531   1              Tmp_XPntr= (XBYTE *)(ECRAM|MapIndex);
 532   1          if(MapIndex == 0xA1)
 533   1              {
 534   2                 RamDebug(0xA1);
 535   2                 RamDebug(data1);
 536   2          }
 537   1          if(MapIndex == 0x43)
 538   1              {
 539   2                  if((IS_MASK_SET(data1,b5TPDRIVER_STATUS))&&(IS_MASK_CLEAR(pDevStatus1,b5TPDRIVER_STATUS)))
 540   2                      {
 541   3                        RamDebug(0xD2);
 542   3                        RamDebug(data1);
 543   3                        RamDebug(pDevStatus1);
 544   3                        if(IS_MASK_SET(pDevStatus1,b4LNVAPP_STATUS))  
 545   3                        {
 546   4                               if(IS_MASK_SET(pDevStatus1,b6MODE_STATUS))
 547   4                               {
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 10  

 548   5                                  ECQEvent(0x3F);
 549   5                               }
 550   4                               else
 551   4                               {
 552   5                                  ECQEvent(0x3E);
 553   5                               }
 554   4                        }
 555   3                      } 
 556   2                      formerdate_XPntr = &pDevStatus1;
 557   2                      writedate_XPntr  = &data1;
 558   2                      SetECSpaceAsRO(formerdate_XPntr,writedate_XPntr,b0F6ScanCodeSend+b1F6DisableTP+b2DisableKB+b3Scancode_ST
             -ATUS+b4LNVAPP_STATUS+b6MODE_STATUS);    
 559   2          }   
 560   1              *Tmp_XPntr= data1;
 561   1              VPC_interface();
 562   1              ThermalMailBox();
 563   1      }
 564          
 565          
 566          void Data_To_PM1_nWait(BYTE data_byte)
 567          {
 568   1          Data_To_PM1(data_byte);
 569   1      
 570   1          TR1 = 0;                    // Disable timer1
 571   1          ET1 = 0;                    // Disable timer1 interrupt
 572   1          _nop_();
 573   1          _nop_();
 574   1          _nop_();
 575   1          _nop_();
 576   1          TH1 = Timer_85ms>>8;        // Set timer1 counter 26ms
 577   1          TL1 = Timer_85ms;           // Set timer1 counter 26ms
 578   1          TF1 = 0;                    // Clear overflow flag
 579   1          TR1 = 1;                    // Enable timer1
 580   1      
 581   1              while (!TF1)
 582   1              {
 583   2                  if(IS_MASK_CLEAR(PM1STS, OBF))
 584   2              {
 585   3                  break;
 586   3              }
 587   2      //open below 4 line        
 588   2              if(IS_MASK_SET(PM1STS, IBF))
 589   2              {
 590   3                  break;
 591   3              }
 592   2              }
 593   1      
 594   1          TR1 = 0;                    // disable timer1
 595   1              TF1 = 0;                        // clear overflow flag
 596   1              ET1 = 1;                        // Enable timer1 interrupt
 597   1      }
 598          
 599          
 600          void Data2PortDirect(BYTE nPort, BYTE rData)
 601          {
 602   1              switch(nPort) 
 603   1              {
 604   2              case 0x60:
 605   2                      Data_To_Port(rData); 
 606   2                      break;
 607   2              case 0x62:
 608   2                      Data_To_PM1(rData);
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 11  

 609   2                      break;
 610   2              //Add 68/6C interface.
 611   2              case 0x68:
 612   2                      Data_To_PM2(rData);
 613   2                      break;                  
 614   2              case 0xFE://Add case for Mailbox
 615   2                      MMIO_rDATA[MMIO_rDATA_index] = rData;
 616   2                      MMIO_rDATA_index++;
 617   2                      break;
 618   2              }
 619   1      }
 620          
 621          
 622          //Add 68/6C interface.
 623          void Data_To_PM2_nWait(BYTE data_byte)
 624          {
 625   1          Data_To_PM2(data_byte);
 626   1      
 627   1          TR1 = 0;                    // Disable timer1
 628   1          ET1 = 0;                    // Disable timer1 interrupt
 629   1          _nop_();
 630   1          _nop_();
 631   1          _nop_();
 632   1          _nop_();
 633   1          TH1 = Timer_85ms>>8;        // Set timer1 counter 26ms
 634   1          TL1 = Timer_85ms;           // Set timer1 counter 26ms
 635   1          TF1 = 0;                    // Clear overflow flag
 636   1          TR1 = 1;                    // Enable timer1
 637   1      
 638   1              while (!TF1)
 639   1              {
 640   2                  if(IS_MASK_CLEAR(PM2STS, OBF))
 641   2              {
 642   3                  break;
 643   3              }       
 644   2              if(IS_MASK_SET(PM2STS, IBF))
 645   2              {
 646   3                  break;
 647   3              }
 648   2              }
 649   1      
 650   1          TR1 = 0;                    // disable timer1
 651   1              TF1 = 0;                        // clear overflow flag
 652   1              ET1 = 1;                        // Enable timer1 interrupt
 653   1      }
 654          
 655          
 656          
 657          void Data2Port(BYTE nPort, BYTE rData)
 658          {
 659   1              switch(nPort) 
 660   1              {
 661   2              case 0x60:
 662   2                      Data_To_Port_nWait(rData); 
 663   2                      break;
 664   2              case 0x62:
 665   2                      Data_To_PM1_nWait(rData);
 666   2                      break;
 667   2              //68/6C interface.
 668   2              case 0x68:
 669   2                      Data_To_PM2_nWait(rData);
 670   2                      break;
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 12  

 671   2              case 0xFE://Add case for Mailbox
 672   2                      MMIO_rDATA[MMIO_rDATA_index] = rData;
 673   2                      MMIO_rDATA_index++;
 674   2                      break;
 675   2              }
 676   1      }
 677          
 678          void MultiB2Port(BYTE nPort, BYTE rData)
 679          {
 680   1              switch(nPort) 
 681   1              {
 682   2              case 0x60:
 683   2                      Data_To_Port_nWait(rData); 
 684   2                      break;
 685   2              case 0x62:
 686   2                      Data_To_PM1_nWait(rData);
 687   2                      break;
 688   2              //Add 68/6C interface.
 689   2              case 0x68:
 690   2                      Data_To_PM2_nWait(rData);
 691   2                      break;                  
 692   2              case 0xFE://Add case for Mailbox
 693   2                      MMIO_rDATA[MMIO_rDATA_index] = rData;
 694   2                      MMIO_rDATA_index++;
 695   2                      break;
 696   2              }
 697   1      }
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 13  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _Hook_62Port (BEGIN)
                                           ; SOURCE LINE # 19
;---- Variable 'PM1Cmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 20
                                           ; SOURCE LINE # 23
0000 EF                MOV     A,R7
0001 120000      E     LCALL   ?C?CCASE
0004 0000        R     DW      ?C0002
0006 40                DB      040H
0007 0000        R     DW      ?C0003
0009 41                DB      041H
000A 0000        R     DW      ?C0005
000C 42                DB      042H
000D 0000        R     DW      ?C0006
000F 43                DB      043H
0010 0000        R     DW      ?C0007
0012 45                DB      045H
0013 0000        R     DW      ?C0008
0015 46                DB      046H
0016 0000        R     DW      ?C0009
0018 47                DB      047H
0019 0000        R     DW      ?C0011
001B 4B                DB      04BH
001C 0000        R     DW      ?C0016
001E 4C                DB      04CH
001F 0000        R     DW      ?C0020
0021 4D                DB      04DH
0022 0000        R     DW      ?C0023
0024 4E                DB      04EH
0025 0000        R     DW      ?C0025
0027 52                DB      052H
0028 0000        R     DW      ?C0032
002A 53                DB      053H
002B 0000        R     DW      ?C0035
002D 58                DB      058H
002E 0000        R     DW      ?C0036
0030 59                DB      059H
0031 0000        R     DW      ?C0037
0033 5C                DB      05CH
0034 0000        R     DW      ?C0038
0036 5D                DB      05DH
0037 0000        R     DW      ?C0039
0039 71                DB      071H
003A 0000        R     DW      ?C0040
003C 72                DB      072H
003D 0000        R     DW      ?C0041
003F 7A                DB      07AH
0040 0000        R     DW      ?C0042
0042 7B                DB      07BH
0043 0000        R     DW      ?C0044
0045 7E                DB      07EH
0046 0000        R     DW      ?C0046
0048 B0                DB      0B0H
0049 0000        R     DW      ?C0047
004B B3                DB      0B3H
004C 0000              DW      00H
004E 0000        R     DW      ?C0049
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 14  

0050         ?C0002:
                                           ; SOURCE LINE # 26
0050 AF00        E     MOV     R7,PM1Data
0052 020000      E     LJMP    _Cmd_40
                                           ; SOURCE LINE # 27
                                           ; SOURCE LINE # 28
0055         ?C0003:
                                           ; SOURCE LINE # 29
0055 E500        E     MOV     A,PM1Data
0057 64A1              XRL     A,#0A1H
0059 6003              JZ      $ + 5H
005B 020000      R     LJMP    ?C0049
005E 7F62              MOV     R7,#062H
0060 020000      E     LJMP    _Cmd_41_A1
                                           ; SOURCE LINE # 30
                                           ; SOURCE LINE # 31
0063         ?C0005:
                                           ; SOURCE LINE # 32
0063 AF00        E     MOV     R7,PM1Data
0065 020000      E     LJMP    _Cmd_42
                                           ; SOURCE LINE # 33
                                           ; SOURCE LINE # 34
0068         ?C0006:
                                           ; SOURCE LINE # 35
0068 AD00        E     MOV     R5,PM1Data
006A 7F62              MOV     R7,#062H
006C 020000      E     LJMP    _Cmd_43
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
006F         ?C0007:
                                           ; SOURCE LINE # 38
006F AD00        E     MOV     R5,PM1Data
0071 7F62              MOV     R7,#062H
0073 020000      E     LJMP    _Cmd_45
                                           ; SOURCE LINE # 39
                                           ; SOURCE LINE # 40
0076         ?C0008:
                                           ; SOURCE LINE # 41
0076 AD00        E     MOV     R5,PM1Data
0078 7F62              MOV     R7,#062H
007A 020000      E     LJMP    _Cmd_46
                                           ; SOURCE LINE # 42
                                           ; SOURCE LINE # 43
007D         ?C0009:
                                           ; SOURCE LINE # 44
007D AD00        E     MOV     R5,PM1Data
007F 7F62              MOV     R7,#062H
0081 020000      E     LJMP    _Cmd_47
                                           ; SOURCE LINE # 45
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
                                           ; SOURCE LINE # 48
0084         ?C0011:
                                           ; SOURCE LINE # 49
0084 E500        E     MOV     A,PM1Step
0086 B40402            CJNE    A,#04H,?C0012
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
                                           ; SOURCE LINE # 52
0089 8021              SJMP    ?C0174
                                           ; SOURCE LINE # 53
008B         ?C0012:
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 15  

                                           ; SOURCE LINE # 54
008B E500        E     MOV     A,PM1Step
008D B40302            CJNE    A,#03H,?C0013
                                           ; SOURCE LINE # 55
                                           ; SOURCE LINE # 56
                                           ; SOURCE LINE # 57
0090 8024              SJMP    ?C0175
                                           ; SOURCE LINE # 58
0092         ?C0013:
                                           ; SOURCE LINE # 59
0092 E500        E     MOV     A,PM1Step
0094 B40205            CJNE    A,#02H,?C0014
                                           ; SOURCE LINE # 60
                                           ; SOURCE LINE # 61
0097 900000      E     MOV     DPTR,#eEEPROMBank
                                           ; SOURCE LINE # 62
009A 803B              SJMP    ?C0179
                                           ; SOURCE LINE # 63
009C         ?C0014:
                                           ; SOURCE LINE # 64
009C E500        E     MOV     A,PM1Step
009E 6401              XRL     A,#01H
00A0 6003              JZ      $ + 5H
00A2 020000      R     LJMP    ?C0049
                                           ; SOURCE LINE # 65
                                           ; SOURCE LINE # 66
                                           ; SOURCE LINE # 67
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 72
00A5 803D              SJMP    ?C0177
                                           ; SOURCE LINE # 74
00A7         ?C0016:
                                           ; SOURCE LINE # 75
00A7 E500        E     MOV     A,PM1Step
00A9 B40305            CJNE    A,#03H,?C0017
                                           ; SOURCE LINE # 76
                                           ; SOURCE LINE # 77
00AC         ?C0174:
00AC 900000      R     MOV     DPTR,#i
00AF         ?C0176:
                                           ; SOURCE LINE # 78
00AF 8026              SJMP    ?C0179
                                           ; SOURCE LINE # 79
00B1         ?C0017:
                                           ; SOURCE LINE # 80
00B1 E500        E     MOV     A,PM1Step
00B3 B40205            CJNE    A,#02H,?C0018
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
00B6         ?C0175:
00B6 900000      E     MOV     DPTR,#eEEPROMAddrsss
00B9         ?C0178:
                                           ; SOURCE LINE # 83
00B9 801C              SJMP    ?C0179
                                           ; SOURCE LINE # 84
00BB         ?C0018:
                                           ; SOURCE LINE # 85
00BB E500        E     MOV     A,PM1Step
00BD 6401              XRL     A,#01H
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 16  

00BF 6003              JZ      $ + 5H
00C1 020000      R     LJMP    ?C0049
                                           ; SOURCE LINE # 86
                                           ; SOURCE LINE # 87
00C4 900000      E     MOV     DPTR,#eEEPROMBank
00C7 E500        E     MOV     A,PM1Data
00C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 88
00CA 900000      E     MOV     DPTR,#eEEPROMAddrsss
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
00CD 8039              SJMP    ?C0180
                                           ; SOURCE LINE # 92
00CF         ?C0020:
                                           ; SOURCE LINE # 93
00CF E500        E     MOV     A,PM1Step
00D1 B40207            CJNE    A,#02H,?C0021
                                           ; SOURCE LINE # 94
                                           ; SOURCE LINE # 95
00D4 900000      E     MOV     DPTR,#eEEPROMAddrsss
00D7         ?C0179:
00D7 E500        E     MOV     A,PM1Data
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 96
00DA 22                RET     
                                           ; SOURCE LINE # 97
00DB         ?C0021:
                                           ; SOURCE LINE # 98
00DB E500        E     MOV     A,PM1Step
00DD 6401              XRL     A,#01H
00DF 6003              JZ      $ + 5H
00E1 020000      R     LJMP    ?C0049
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
00E4         ?C0177:
00E4 900000      E     MOV     DPTR,#eEEPROMData
00E7 E500        E     MOV     A,PM1Data
00E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
00EA 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
00ED E0                MOVX    A,@DPTR
00EE 4410              ORL     A,#010H
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 102
00F1 120000      E     LCALL   Update_EEPROMMark
                                           ; SOURCE LINE # 103
00F4 900000      E     MOV     DPTR,#LENOVOPMFW_Temp
00F7 E0                MOVX    A,@DPTR
00F8 54EF              ANL     A,#0EFH
00FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 104
00FB E4                CLR     A
00FC FD                MOV     R5,A
00FD 7F62              MOV     R7,#062H
00FF 020000      R     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
                                           ; SOURCE LINE # 108
0102         ?C0023:
                                           ; SOURCE LINE # 109
0102 900000      E     MOV     DPTR,#eEEPROMAddrsss
0105 E500        E     MOV     A,PM1Data
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 17  

0107 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 110
0108         ?C0180:
0108 E0                MOVX    A,@DPTR
0109 FD                MOV     R5,A
010A 7F62              MOV     R7,#062H
010C 020000      E     LJMP    _Cmd_4E
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 116
010F         ?C0025:
                                           ; SOURCE LINE # 117
010F E500        E     MOV     A,PM1Data
0111 B4A005            CJNE    A,#0A0H,?C0026
0114 7F62              MOV     R7,#062H
0116 120000      E     LCALL   _Cmd_52_A0
0119         ?C0026:
                                           ; SOURCE LINE # 118
0119 E500        E     MOV     A,PM1Data
011B B4A305            CJNE    A,#0A3H,?C0027
011E 7F62              MOV     R7,#062H
0120 120000      E     LCALL   _Cmd_52_A3
0123         ?C0027:
                                           ; SOURCE LINE # 119
0123 E500        E     MOV     A,PM1Data
0125 B4A405            CJNE    A,#0A4H,?C0028
0128 7F62              MOV     R7,#062H
012A 120000      E     LCALL   _Cmd_52_A4
012D         ?C0028:
                                           ; SOURCE LINE # 120
012D E500        E     MOV     A,PM1Data
012F B4A505            CJNE    A,#0A5H,?C0029
0132 7F62              MOV     R7,#062H
0134 120000      E     LCALL   _Cmd_52_A5
0137         ?C0029:
                                           ; SOURCE LINE # 121
0137 E500        E     MOV     A,PM1Data
0139 B4A605            CJNE    A,#0A6H,?C0030
013C 7F62              MOV     R7,#062H
013E 120000      E     LCALL   _Cmd_52_A6
0141         ?C0030:
                                           ; SOURCE LINE # 122
0141 E500        E     MOV     A,PM1Data
0143 64A7              XRL     A,#0A7H
0145 7076              JNZ     ?C0049
0147 7F62              MOV     R7,#062H
0149 020000      E     LJMP    _Cmd_52_A7
                                           ; SOURCE LINE # 123
                                           ; SOURCE LINE # 125
014C         ?C0032:
                                           ; SOURCE LINE # 126
014C E500        E     MOV     A,PM1Step
014E 6401              XRL     A,#01H
0150 706B              JNZ     ?C0049
                                           ; SOURCE LINE # 127
                                           ; SOURCE LINE # 128
0152 900000      E     MOV     DPTR,#?_Cmd_53?BYTE+03H
0155 E500        E     MOV     A,PM1Data
0157 F0                MOVX    @DPTR,A
0158 AB00        E     MOV     R3,PM1Data1
015A AD00        E     MOV     R5,PM1Data2
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 18  

015C 7F62              MOV     R7,#062H
015E 020000      E     LJMP    _Cmd_53
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 130
                                           ; SOURCE LINE # 131
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
0161         ?C0035:
                                           ; SOURCE LINE # 134
0161 AF00        E     MOV     R7,PM1Data
0163 020000      E     LJMP    _Cmd_58
                                           ; SOURCE LINE # 135
                                           ; SOURCE LINE # 136
0166         ?C0036:
                                           ; SOURCE LINE # 137
0166 E4                CLR     A
0167 FB                MOV     R3,A
0168 AD00        E     MOV     R5,PM1Data
016A 7F62              MOV     R7,#062H
016C 020000      E     LJMP    _Cmd_59
                                           ; SOURCE LINE # 138
                                           ; SOURCE LINE # 139
016F         ?C0037:
                                           ; SOURCE LINE # 140
016F 7F62              MOV     R7,#062H
0171 020000      E     LJMP    _Cmd_5C
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 142
0174         ?C0038:
                                           ; SOURCE LINE # 143
0174 AF00        E     MOV     R7,PM1Data
0176 020000      E     LJMP    _Cmd_5D
                                           ; SOURCE LINE # 144
                                           ; SOURCE LINE # 145
0179         ?C0039:
                                           ; SOURCE LINE # 146
0179 AF00        E     MOV     R7,PM1Data
017B 020000      E     LJMP    _Cmd_71
                                           ; SOURCE LINE # 147
                                           ; SOURCE LINE # 148
017E         ?C0040:
                                           ; SOURCE LINE # 149
017E AF00        E     MOV     R7,PM1Data
0180 020000      E     LJMP    _Cmd_72
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
0183         ?C0041:
                                           ; SOURCE LINE # 152
0183 AD00        E     MOV     R5,PM1Data
0185 7F62              MOV     R7,#062H
0187 020000      E     LJMP    _Cmd_7A
                                           ; SOURCE LINE # 153
                                           ; SOURCE LINE # 154
018A         ?C0042:
                                           ; SOURCE LINE # 155
018A E500        E     MOV     A,PM1Step
018C 6401              XRL     A,#01H
018E 702D              JNZ     ?C0049
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 157
0190 AB00        E     MOV     R3,PM1Data
0192 AD00        E     MOV     R5,PM1Data1
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 19  

0194 7F62              MOV     R7,#062H
0196 020000      E     LJMP    _Cmd_7B
                                           ; SOURCE LINE # 158
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 161
0199         ?C0044:
                                           ; SOURCE LINE # 162
0199 E500        E     MOV     A,PM1Step
019B 6401              XRL     A,#01H
019D 701E              JNZ     ?C0049
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
019F AB00        E     MOV     R3,PM1Data
01A1 AD00        E     MOV     R5,PM1Data1
01A3 7F62              MOV     R7,#062H
01A5 020000      E     LJMP    _Cmd_7E
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
01A8         ?C0046:
                                           ; SOURCE LINE # 168
01A8 AD00        E     MOV     R5,PM1Data
01AA 7F62              MOV     R7,#062H
01AC 020000      E     LJMP    _Cmd_B0
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
01AF         ?C0047:
                                           ; SOURCE LINE # 171
01AF E500        E     MOV     A,PM1Step
01B1 B40109            CJNE    A,#01H,?C0049
                                           ; SOURCE LINE # 172
                                           ; SOURCE LINE # 173
01B4 AB00        E     MOV     R3,PM1Data
01B6 AD00        E     MOV     R5,PM1Data1
01B8 7F62              MOV     R7,#062H
01BA 120000      E     LCALL   _Cmd_B3
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
                                           ; SOURCE LINE # 177
01BD         ?C0049:
01BD 22                RET     
             ; FUNCTION _Hook_62Port (END)

             ; FUNCTION _Hook_66Port (BEGIN)
                                           ; SOURCE LINE # 183
;---- Variable 'PM1Cmd' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
0000 EF                MOV     A,R7
0001 120000      E     LCALL   ?C?CCASE
0004 0000        R     DW      ?C0051
0006 40                DB      040H
0007 0000        R     DW      ?C0052
0009 41                DB      041H
000A 0000        R     DW      ?C0053
000C 42                DB      042H
000D 0000        R     DW      ?C0054
000F 43                DB      043H
0010 0000        R     DW      ?C0055
0012 44                DB      044H
0013 0000        R     DW      ?C0056
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 20  

0015 45                DB      045H
0016 0000        R     DW      ?C0057
0018 46                DB      046H
0019 0000        R     DW      ?C0058
001B 47                DB      047H
001C 0000        R     DW      ?C0059
001E 49                DB      049H
001F 0000        R     DW      ?C0060
0021 4B                DB      04BH
0022 0000        R     DW      ?C0061
0024 4C                DB      04CH
0025 0000        R     DW      ?C0083
0027 4D                DB      04DH
0028 0000        R     DW      ?C0063
002A 4E                DB      04EH
002B 0000        R     DW      ?C0064
002D 4F                DB      04FH
002E 0000        R     DW      ?C0065
0030 50                DB      050H
0031 0000        R     DW      ?C0066
0033 51                DB      051H
0034 0000        R     DW      ?C0067
0036 52                DB      052H
0037 0000        R     DW      ?C0068
0039 53                DB      053H
003A 0000        R     DW      ?C0070
003C 58                DB      058H
003D 0000        R     DW      ?C0071
003F 59                DB      059H
0040 0000        R     DW      ?C0073
0042 5D                DB      05DH
0043 0000        R     DW      ?C0074
0045 5E                DB      05EH
0046 0000        R     DW      ?C0075
0048 5F                DB      05FH
0049 0000        R     DW      ?C0076
004B 71                DB      071H
004C 0000        R     DW      ?C0077
004E 72                DB      072H
004F 0000        R     DW      ?C0078
0051 75                DB      075H
0052 0000        R     DW      ?C0079
0054 7A                DB      07AH
0055 0000        R     DW      ?C0083
0057 7B                DB      07BH
0058 0000        R     DW      ?C0081
005A 7C                DB      07CH
005B 0000        R     DW      ?C0082
005D 7D                DB      07DH
005E 0000        R     DW      ?C0083
0060 7E                DB      07EH
0061 0000        R     DW      ?C0084
0063 B0                DB      0B0H
0064 0000        R     DW      ?C0085
0066 B1                DB      0B1H
0067 0000        R     DW      ?C0086
0069 B2                DB      0B2H
006A 0000        R     DW      ?C0083
006C B3                DB      0B3H
006D 0000              DW      00H
006F 0000        R     DW      ?C0088
                                           ; SOURCE LINE # 186
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 21  

                                           ; SOURCE LINE # 187
0071         ?C0051:
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
0071 8072              SJMP    ?C0197
                                           ; SOURCE LINE # 190
0073         ?C0052:
                                           ; SOURCE LINE # 191
0073         ?C0181:
                                           ; SOURCE LINE # 192
0073 8070              SJMP    ?C0197
                                           ; SOURCE LINE # 193
0075         ?C0053:
                                           ; SOURCE LINE # 194
0075         ?C0182:
                                           ; SOURCE LINE # 195
0075 806E              SJMP    ?C0197
                                           ; SOURCE LINE # 196
0077         ?C0054:
                                           ; SOURCE LINE # 197
0077         ?C0183:
                                           ; SOURCE LINE # 198
0077 806C              SJMP    ?C0197
                                           ; SOURCE LINE # 199
0079         ?C0055:
                                           ; SOURCE LINE # 200
0079 7F62              MOV     R7,#062H
007B 020000      E     LJMP    _Cmd_44
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 202
007E         ?C0056:
                                           ; SOURCE LINE # 203
007E         ?C0184:
                                           ; SOURCE LINE # 204
007E 8065              SJMP    ?C0197
                                           ; SOURCE LINE # 205
0080         ?C0057:
                                           ; SOURCE LINE # 206
0080         ?C0185:
                                           ; SOURCE LINE # 207
0080 8063              SJMP    ?C0197
                                           ; SOURCE LINE # 208
0082         ?C0058:
                                           ; SOURCE LINE # 209
0082         ?C0186:
                                           ; SOURCE LINE # 210
0082 8061              SJMP    ?C0197
                                           ; SOURCE LINE # 211
0084         ?C0059:
                                           ; SOURCE LINE # 212
0084 7F62              MOV     R7,#062H
0086 020000      E     LJMP    _Cmd_49
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
0089         ?C0060:
                                           ; SOURCE LINE # 215
0089 750004      E     MOV     PM1Step,#04H
                                           ; SOURCE LINE # 216
008C 22                RET     
                                           ; SOURCE LINE # 217
008D         ?C0061:
                                           ; SOURCE LINE # 218
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 22  

                                           ; SOURCE LINE # 219
008D 8014              SJMP    ?C0188
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 223
008F         ?C0063:
                                           ; SOURCE LINE # 224
008F         ?C0187:
                                           ; SOURCE LINE # 225
008F 8054              SJMP    ?C0197
                                           ; SOURCE LINE # 227
0091         ?C0064:
                                           ; SOURCE LINE # 228
0091 020000      E     LJMP    Erase_EEPROMAll
                                           ; SOURCE LINE # 229
                                           ; SOURCE LINE # 231
0094         ?C0065:
                                           ; SOURCE LINE # 232
0094 900000      E     MOV     DPTR,#ACPI_HOTKEY
0097 E0                MOVX    A,@DPTR
0098 4440              ORL     A,#040H
009A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
009B 22                RET     
                                           ; SOURCE LINE # 235
009C         ?C0066:
                                           ; SOURCE LINE # 236
009C 7F62              MOV     R7,#062H
009E 020000      E     LJMP    _Cmd_51
                                           ; SOURCE LINE # 237
                                           ; SOURCE LINE # 238
00A1         ?C0067:
                                           ; SOURCE LINE # 239
00A1         ?C0190:
                                           ; SOURCE LINE # 240
00A1 8042              SJMP    ?C0197
                                           ; SOURCE LINE # 241
00A3         ?C0068:
                                           ; SOURCE LINE # 242
00A3         ?C0188:
00A3 750003      E     MOV     PM1Step,#03H
                                           ; SOURCE LINE # 243
00A6 22                RET     
                                           ; SOURCE LINE # 244
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
00A7         ?C0070:
                                           ; SOURCE LINE # 247
00A7         ?C0191:
                                           ; SOURCE LINE # 248
00A7 803C              SJMP    ?C0197
                                           ; SOURCE LINE # 249
00A9         ?C0071:
                                           ; SOURCE LINE # 250
00A9         ?C0192:
                                           ; SOURCE LINE # 251
00A9 803A              SJMP    ?C0197
                                           ; SOURCE LINE # 252
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
00AB         ?C0073:
                                           ; SOURCE LINE # 255
00AB         ?C0193:
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 23  

                                           ; SOURCE LINE # 256
00AB 8038              SJMP    ?C0197
                                           ; SOURCE LINE # 257
00AD         ?C0074:
                                           ; SOURCE LINE # 259
00AD 020000      E     LJMP    Unlock_ShipMode
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 262
00B0         ?C0075:
                                           ; SOURCE LINE # 264
00B0 900000      E     MOV     DPTR,#ShipModeEn
00B3 74A5              MOV     A,#0A5H
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 265
00B6 7D5A              MOV     R5,#05AH
00B8 7F62              MOV     R7,#062H
00BA 120000      R     LCALL   _Data2PortDirect
                                           ; SOURCE LINE # 266
00BD 7FA5              MOV     R7,#0A5H
00BF 020000      E     LJMP    _RamDebug
                                           ; SOURCE LINE # 268
                                           ; SOURCE LINE # 269
00C2         ?C0076:
                                           ; SOURCE LINE # 270
00C2         ?C0194:
                                           ; SOURCE LINE # 271
00C2 8021              SJMP    ?C0197
                                           ; SOURCE LINE # 272
00C4         ?C0077:
                                           ; SOURCE LINE # 273
00C4         ?C0195:
                                           ; SOURCE LINE # 274
00C4 801F              SJMP    ?C0197
                                           ; SOURCE LINE # 275
00C6         ?C0078:
                                           ; SOURCE LINE # 276
00C6 020000      E     LJMP    Cmd_75
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
00C9         ?C0079:
                                           ; SOURCE LINE # 279
00C9         ?C0196:
                                           ; SOURCE LINE # 280
00C9 801A              SJMP    ?C0197
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 285
00CB         ?C0081:
                                           ; SOURCE LINE # 286
00CB 900000      E     MOV     DPTR,#Bioswatchdog
00CE 7401              MOV     A,#01H
00D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 287
00D1 E4                CLR     A
00D2 900000      E     MOV     DPTR,#Bioswatchdogtime
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
00D5 8004              SJMP    ?C0199
                                           ; SOURCE LINE # 290
00D7         ?C0082:
                                           ; SOURCE LINE # 291
00D7 E4                CLR     A
00D8 900000      E     MOV     DPTR,#Bioswatchdog
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 24  

00DB         ?C0199:
00DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
00DC 7D55              MOV     R5,#055H
00DE 7F62              MOV     R7,#062H
00E0 020000      R     LJMP    _Data2PortDirect
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 295
00E3         ?C0083:
                                           ; SOURCE LINE # 296
00E3         ?C0198:
                                           ; SOURCE LINE # 297
00E3 8012              SJMP    ?C0200
                                           ; SOURCE LINE # 298
00E5         ?C0084:
                                           ; SOURCE LINE # 299
00E5         ?C0197:
00E5 750001      E     MOV     PM1Step,#01H
                                           ; SOURCE LINE # 300
00E8 22                RET     
                                           ; SOURCE LINE # 302
00E9         ?C0085:
                                           ; SOURCE LINE # 303
00E9 7DB1              MOV     R5,#0B1H
00EB 7F62              MOV     R7,#062H
00ED 020000      E     LJMP    _Cmd_B1
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
00F0         ?C0086:
                                           ; SOURCE LINE # 306
00F0 7DB2              MOV     R5,#0B2H
00F2 7F62              MOV     R7,#062H
00F4 020000      E     LJMP    _Cmd_B2
                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 309
00F7         ?C0200:
00F7 750002      E     MOV     PM1Step,#02H
                                           ; SOURCE LINE # 311
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 314
00FA         ?C0088:
00FA 22                RET     
             ; FUNCTION _Hook_66Port (END)

             ; FUNCTION vOSSMbusWBlcok (BEGIN)
                                           ; SOURCE LINE # 318
                                           ; SOURCE LINE # 319
                                           ; SOURCE LINE # 320
0000 7FFA              MOV     R7,#0FAH
0002 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 321
0005 900000      E     MOV     DPTR,#SMB_ADDR
0008 E0                MOVX    A,@DPTR
0009 6416              XRL     A,#016H
000B 7002              JNZ     ?C0089
                                           ; SOURCE LINE # 322
000D 8028              SJMP    ?C0201
000F         ?C0089:
                                           ; SOURCE LINE # 324
000F 900000      E     MOV     DPTR,#SMB_ADDR
0012 E0                MOVX    A,@DPTR
0013 B4101E            CJNE    A,#010H,?C0092
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 25  

                                           ; SOURCE LINE # 325
0016 E0                MOVX    A,@DPTR
0017 FD                MOV     R5,A
0018 900000      E     MOV     DPTR,#SMB_BCNT
001B E0                MOVX    A,@DPTR
001C FB                MOV     R3,A
001D 900000      E     MOV     DPTR,#SMB_CMD
0020 E0                MOVX    A,@DPTR
0021 900000      E     MOV     DPTR,#?_bI2cMasterWrite?BYTE+03H
0024 F0                MOVX    @DPTR,A
0025 7E00        E     MOV     R6,#HIGH SMB_DATA
0027 A3                INC     DPTR
0028 7400        E     MOV     A,#HIGH SMB_DATA
002A F0                MOVX    @DPTR,A
002B A3                INC     DPTR
002C 7400        E     MOV     A,#LOW SMB_DATA
002E F0                MOVX    @DPTR,A
002F E4                CLR     A
0030 FF                MOV     R7,A
0031 020000      E     LJMP    _bI2cMasterWrite
0034         ?C0092:
                                           ; SOURCE LINE # 328
0034 900000      E     MOV     DPTR,#SMB_ADDR
0037         ?C0201:
0037 E0                MOVX    A,@DPTR
0038 FB                MOV     R3,A
0039 900000      E     MOV     DPTR,#SMB_CMD
003C E0                MOVX    A,@DPTR
003D 900000      E     MOV     DPTR,#?_bWSMBusBlock?BYTE+03H
0040 F0                MOVX    @DPTR,A
0041 7E00        E     MOV     R6,#HIGH SMB_DATA
0043 A3                INC     DPTR
0044 7400        E     MOV     A,#HIGH SMB_DATA
0046 F0                MOVX    @DPTR,A
0047 A3                INC     DPTR
0048 7400        E     MOV     A,#LOW SMB_DATA
004A F0                MOVX    @DPTR,A
004B 900000      E     MOV     DPTR,#SMB_BCNT
004E E0                MOVX    A,@DPTR
004F 900000      E     MOV     DPTR,#?_bWSMBusBlock?BYTE+06H
0052 F0                MOVX    @DPTR,A
0053 A3                INC     DPTR
0054 7401              MOV     A,#01H
0056 F0                MOVX    @DPTR,A
0057 7D14              MOV     R5,#014H
0059 FF                MOV     R7,A
005A 120000      E     LCALL   _bWSMBusBlock
                                           ; SOURCE LINE # 330
005D         ?C0090:
005D 22                RET     
             ; FUNCTION vOSSMbusWBlcok (END)

             ; FUNCTION vOSSMbusRBlcok (BEGIN)
                                           ; SOURCE LINE # 332
                                           ; SOURCE LINE # 333
                                           ; SOURCE LINE # 334
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 B41602            CJNE    A,#016H,?C0094
                                           ; SOURCE LINE # 335
0007 8031              SJMP    ?C0202
0009         ?C0094:
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 26  

                                           ; SOURCE LINE # 337
0009 900000      E     MOV     DPTR,#SMB_ADDR
000C E0                MOVX    A,@DPTR
000D 6410              XRL     A,#010H
000F 7026              JNZ     ?C0096
                                           ; SOURCE LINE # 338
0011 E0                MOVX    A,@DPTR
0012 FD                MOV     R5,A
0013 900000      E     MOV     DPTR,#SMB_CMD
0016 E0                MOVX    A,@DPTR
0017 FB                MOV     R3,A
0018 900000      E     MOV     DPTR,#SMB_DATA
001B E0                MOVX    A,@DPTR
001C 900000      E     MOV     DPTR,#?_bI2cMasterWriteToRead?BYTE+03H
001F F0                MOVX    @DPTR,A
0020 900000      E     MOV     DPTR,#SMB_BCNT
0023 E0                MOVX    A,@DPTR
0024 900000      E     MOV     DPTR,#?_bI2cMasterWriteToRead?BYTE+04H
0027 F0                MOVX    @DPTR,A
0028 7E00        E     MOV     R6,#HIGH SMB_DATA1
002A A3                INC     DPTR
002B 7400        E     MOV     A,#HIGH SMB_DATA1
002D F0                MOVX    @DPTR,A
002E A3                INC     DPTR
002F 7400        E     MOV     A,#LOW SMB_DATA1
0031 F0                MOVX    @DPTR,A
0032 E4                CLR     A
0033 FF                MOV     R7,A
0034 020000      E     LJMP    _bI2cMasterWriteToRead
0037         ?C0096:
                                           ; SOURCE LINE # 341
0037 900000      E     MOV     DPTR,#SMB_ADDR
003A         ?C0202:
003A E0                MOVX    A,@DPTR
003B FB                MOV     R3,A
003C 900000      E     MOV     DPTR,#SMB_CMD
003F E0                MOVX    A,@DPTR
0040 900000      E     MOV     DPTR,#?_bRSMBusBlock?BYTE+03H
0043 F0                MOVX    @DPTR,A
0044 7E00        E     MOV     R6,#HIGH SMB_DATA
0046 A3                INC     DPTR
0047 7400        E     MOV     A,#HIGH SMB_DATA
0049 F0                MOVX    @DPTR,A
004A A3                INC     DPTR
004B 7400        E     MOV     A,#LOW SMB_DATA
004D F0                MOVX    @DPTR,A
004E 7D14              MOV     R5,#014H
0050 7F01              MOV     R7,#01H
0052 120000      E     LCALL   _bRSMBusBlock
                                           ; SOURCE LINE # 343
0055         ?C0095:
0055 22                RET     
             ; FUNCTION vOSSMbusRBlcok (END)

             ; FUNCTION vOSSMbusRByte (BEGIN)
                                           ; SOURCE LINE # 345
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 347
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 27  

0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7401              MOV     A,#01H
001A F0                MOVX    @DPTR,A
001B 7D08              MOV     R5,#08H
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
                                           ; SOURCE LINE # 348
0021         ?C0098:
0021 22                RET     
             ; FUNCTION vOSSMbusRByte (END)

             ; FUNCTION vOSSMbusRWord (BEGIN)
                                           ; SOURCE LINE # 350
                                           ; SOURCE LINE # 351
                                           ; SOURCE LINE # 352
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7401              MOV     A,#01H
001A F0                MOVX    @DPTR,A
001B 7D0C              MOV     R5,#0CH
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
                                           ; SOURCE LINE # 353
0021         ?C0099:
0021 22                RET     
             ; FUNCTION vOSSMbusRWord (END)

             ; FUNCTION vOSSMbusWBYTE (BEGIN)
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 356
                                           ; SOURCE LINE # 357
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 28  

000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7401              MOV     A,#01H
001A F0                MOVX    @DPTR,A
001B 7D88              MOV     R5,#088H
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
                                           ; SOURCE LINE # 358
0021         ?C0100:
0021 22                RET     
             ; FUNCTION vOSSMbusWBYTE (END)

             ; FUNCTION vOSSMbusWWord (BEGIN)
                                           ; SOURCE LINE # 360
                                           ; SOURCE LINE # 361
                                           ; SOURCE LINE # 362
0000 900000      E     MOV     DPTR,#SMB_ADDR
0003 E0                MOVX    A,@DPTR
0004 FB                MOV     R3,A
0005 900000      E     MOV     DPTR,#SMB_CMD
0008 E0                MOVX    A,@DPTR
0009 900000      E     MOV     DPTR,#?_bRWSMBus?BYTE+03H
000C F0                MOVX    @DPTR,A
000D 7E00        E     MOV     R6,#HIGH SMB_DATA
000F A3                INC     DPTR
0010 7400        E     MOV     A,#HIGH SMB_DATA
0012 F0                MOVX    @DPTR,A
0013 A3                INC     DPTR
0014 7400        E     MOV     A,#LOW SMB_DATA
0016 F0                MOVX    @DPTR,A
0017 A3                INC     DPTR
0018 7401              MOV     A,#01H
001A F0                MOVX    @DPTR,A
001B 7D8C              MOV     R5,#08CH
001D FF                MOV     R7,A
001E 120000      E     LCALL   _bRWSMBus
                                           ; SOURCE LINE # 363
0021         ?C0101:
0021 22                RET     
             ; FUNCTION vOSSMbusWWord (END)

             ; FUNCTION DummyFunction (BEGIN)
                                           ; SOURCE LINE # 365
                                           ; SOURCE LINE # 366
                                           ; SOURCE LINE # 367
0000 22                RET     
             ; FUNCTION DummyFunction (END)

             ; FUNCTION OSSMbusComd (BEGIN)
                                           ; SOURCE LINE # 390
                                           ; SOURCE LINE # 391
                                           ; SOURCE LINE # 392
0000 900000      E     MOV     DPTR,#SMB_PRTC
0003 E0                MOVX    A,@DPTR
0004 7003              JNZ     $ + 5H
0006 020000      R     LJMP    ?C0117
                                           ; SOURCE LINE # 393
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 29  

                                           ; SOURCE LINE # 394
0009 E4                CLR     A
000A 900000      E     MOV     DPTR,#SMB_STS
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 396
000E 900000      E     MOV     DPTR,#SMB_PRTC
0011 E0                MOVX    A,@DPTR
0012 540F              ANL     A,#0FH
0014 25E0              ADD     A,ACC
0016 2400        R     ADD     A,#LOW vOSSMbusComd_table
0018 F582              MOV     DPL,A
001A E4                CLR     A
001B 3400        R     ADDC    A,#HIGH vOSSMbusComd_table
001D F583              MOV     DPH,A
001F E4                CLR     A
0020 93                MOVC    A,@A+DPTR
0021 FE                MOV     R6,A
0022 7401              MOV     A,#01H
0024 93                MOVC    A,@A+DPTR
0025 CA                XCH     A,R2
0026 EE                MOV     A,R6
0027 CA                XCH     A,R2
0028 F9                MOV     R1,A
0029 120000      E     LCALL   ?C?ICALL
002C EF                MOV     A,R7
002D 6008              JZ      ?C0104
                                           ; SOURCE LINE # 397
002F 900000      E     MOV     DPTR,#SMB_STS
0032 7480              MOV     A,#080H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 398
0035 8058              SJMP    ?C0105
0037         ?C0104:
                                           ; SOURCE LINE # 400
                                           ; SOURCE LINE # 401
0037 900000      E     MOV     DPTR,#HOSTA_A
003A E0                MOVX    A,@DPTR
003B 30E008            JNB     ACC.0,?C0106
003E 900000      E     MOV     DPTR,#SMB_STS
0041 741A              MOV     A,#01AH
0043 F0                MOVX    @DPTR,A
0044 8049              SJMP    ?C0105
0046         ?C0106:
                                           ; SOURCE LINE # 402
0046 900000      E     MOV     DPTR,#HOSTA_A
0049 E0                MOVX    A,@DPTR
004A 30E208            JNB     ACC.2,?C0108
004D 900000      E     MOV     DPTR,#SMB_STS
0050 7417              MOV     A,#017H
0052 F0                MOVX    @DPTR,A
0053 803A              SJMP    ?C0105
0055         ?C0108:
                                           ; SOURCE LINE # 403
0055 900000      E     MOV     DPTR,#HOSTA_A
0058 E0                MOVX    A,@DPTR
0059 30E308            JNB     ACC.3,?C0110
005C 900000      E     MOV     DPTR,#SMB_STS
005F 7407              MOV     A,#07H
0061 F0                MOVX    @DPTR,A
0062 802B              SJMP    ?C0105
0064         ?C0110:
                                           ; SOURCE LINE # 404
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 30  

0064 900000      E     MOV     DPTR,#HOSTA_A
0067 E0                MOVX    A,@DPTR
0068 30E408            JNB     ACC.4,?C0112
006B 900000      E     MOV     DPTR,#SMB_STS
006E 7419              MOV     A,#019H
0070 F0                MOVX    @DPTR,A
0071 801C              SJMP    ?C0105
0073         ?C0112:
                                           ; SOURCE LINE # 405
0073 900000      E     MOV     DPTR,#HOSTA_A
0076 E0                MOVX    A,@DPTR
0077 30E508            JNB     ACC.5,?C0114
007A 900000      E     MOV     DPTR,#SMB_STS
007D 7410              MOV     A,#010H
007F F0                MOVX    @DPTR,A
0080 800D              SJMP    ?C0105
0082         ?C0114:
                                           ; SOURCE LINE # 406
0082 900000      E     MOV     DPTR,#HOSTA_A
0085 E0                MOVX    A,@DPTR
0086 30E606            JNB     ACC.6,?C0105
0089 900000      E     MOV     DPTR,#SMB_STS
008C 7418              MOV     A,#018H
008E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 407
008F         ?C0105:
                                           ; SOURCE LINE # 408
008F E4                CLR     A
0090 900000      E     MOV     DPTR,#SMB_PRTC
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 411
0094         ?C0117:
0094 22                RET     
             ; FUNCTION OSSMbusComd (END)

             ; FUNCTION Hook_ACPICommand (BEGIN)
                                           ; SOURCE LINE # 418
                                           ; SOURCE LINE # 419
                                           ; SOURCE LINE # 421
0000 020000      R     LJMP    OSSMbusComd
             ; FUNCTION Hook_ACPICommand (END)

             ; FUNCTION OEM_ACPI_Gen_Int (BEGIN)
                                           ; SOURCE LINE # 428
                                           ; SOURCE LINE # 429
                                           ; SOURCE LINE # 430
0000 7F01              MOV     R7,#01H
0002 020000      E     LJMP    _ACPI_Gen_Int
             ; FUNCTION OEM_ACPI_Gen_Int (END)

             ; FUNCTION ResetSCIEvent (BEGIN)
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 437
                                           ; SOURCE LINE # 439
0000 900000      E     MOV     DPTR,#PM1STS
0003 E0                MOVX    A,@DPTR
0004 54DF              ANL     A,#0DFH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 440
0007 C200        E     CLR     ECCheckBurstMode
                                           ; SOURCE LINE # 441
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 31  

0009 22                RET     
             ; FUNCTION ResetSCIEvent (END)

             ; FUNCTION _ECQEvent (BEGIN)
                                           ; SOURCE LINE # 449
;---- Variable 'sci_number' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 450
                                           ; SOURCE LINE # 451
0000 900000      E     MOV     DPTR,#SYS_MISC1
0003 E0                MOVX    A,@DPTR
0004 30E740            JNB     ACC.7,?C0123
0007 900000      E     MOV     DPTR,#SysPowState
000A E0                MOVX    A,@DPTR
000B 6410              XRL     A,#010H
000D 7038              JNZ     ?C0123
                                           ; SOURCE LINE # 452
                                           ; SOURCE LINE # 454
000F         ?C0121:
                                           ; SOURCE LINE # 456
000F 900000      E     MOV     DPTR,#SCI_Event_In_Index
0012 E0                MOVX    A,@DPTR
0013 F500        E     MOV     ITempB05,A
                                           ; SOURCE LINE # 457
0015 AE00        E     MOV     R6,ITempB05
0017 7400        E     MOV     A,#LOW SCI_Event_Buffer
0019 2E                ADD     A,R6
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        E     ADDC    A,#HIGH SCI_Event_Buffer
001F F583              MOV     DPH,A
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 458
0023 0500        E     INC     ITempB05
                                           ; SOURCE LINE # 459
0025 E500        E     MOV     A,ITempB05
0027 C3                CLR     C
0028 9408              SUBB    A,#08H
002A 4003              JC      ?C0124
                                           ; SOURCE LINE # 460
                                           ; SOURCE LINE # 461
002C E4                CLR     A
002D F500        E     MOV     ITempB05,A
                                           ; SOURCE LINE # 462
002F         ?C0124:
                                           ; SOURCE LINE # 464
002F 900000      E     MOV     DPTR,#SCI_Event_Out_Index
0032 E0                MOVX    A,@DPTR
0033 6500        E     XRL     A,ITempB05
0035 6006              JZ      ?C0125
                                           ; SOURCE LINE # 465
                                           ; SOURCE LINE # 466
0037 900000      E     MOV     DPTR,#SCI_Event_In_Index
003A E500        E     MOV     A,ITempB05
003C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 467
003D         ?C0125:
                                           ; SOURCE LINE # 468
003D 900000      E     MOV     DPTR,#PM1STS
0040 E0                MOVX    A,@DPTR
0041 4420              ORL     A,#020H
0043 F0                MOVX    @DPTR,A
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 32  

                                           ; SOURCE LINE # 469
0044 120000      R     LCALL   OEM_ACPI_Gen_Int
                                           ; SOURCE LINE # 470
0047         ?C0123:
0047 22                RET     
             ; FUNCTION _ECQEvent (END)

             ; FUNCTION ECSMIEvent (BEGIN)
                                           ; SOURCE LINE # 473
                                           ; SOURCE LINE # 474
                                           ; SOURCE LINE # 475
0000 900000      E     MOV     DPTR,#SysPowState
0003 E0                MOVX    A,@DPTR
0004 B4101B            CJNE    A,#010H,?C0127
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 478
0007         ?C0126:
                                           ; SOURCE LINE # 479
0007 900000      E     MOV     DPTR,#PM1STS
000A E0                MOVX    A,@DPTR
000B 4440              ORL     A,#040H
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 480
000E 120000      E     LCALL   DisableAllInterrupt
                                           ; SOURCE LINE # 481
0011 120000      E     LCALL   Hook_SMIOFF
                                           ; SOURCE LINE # 482
0014 120000      E     LCALL   Hook_SMION
                                           ; SOURCE LINE # 484
0017 E4                CLR     A
0018 900000      E     MOV     DPTR,#WNCKR
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 485
001C 120000      E     LCALL   Hook_SMIOFF
                                           ; SOURCE LINE # 486
001F 120000      E     LCALL   EnableAllInterrupt
                                           ; SOURCE LINE # 487
0022         ?C0127:
0022 22                RET     
             ; FUNCTION ECSMIEvent (END)

             ; FUNCTION _ECSMI_SCIEvent (BEGIN)
                                           ; SOURCE LINE # 490
;---- Variable 'smi_number' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 492
0000 020000      R     LJMP    _ECQEvent
             ; FUNCTION _ECSMI_SCIEvent (END)

             ; FUNCTION _Hook_ReadMapECSpace (BEGIN)
                                           ; SOURCE LINE # 498
;---- Variable 'MapIndex' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 499
                                           ; SOURCE LINE # 500
0000 7404              MOV     A,#04H
0002 8F82              MOV     DPL,R7
0004 F583              MOV     DPH,A
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
                                           ; SOURCE LINE # 501
0008         ?C0129:
0008 22                RET     
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 33  

             ; FUNCTION _Hook_ReadMapECSpace (END)

             ; FUNCTION _SetECSpaceAsRO (BEGIN)
                                           ; SOURCE LINE # 503
0000 900000      R     MOV     DPTR,#formerByte
0003 EB                MOV     A,R3
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 EA                MOV     A,R2
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 E9                MOV     A,R1
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 504
                                           ; SOURCE LINE # 505
;---- Variable 'index' assigned to Register 'R7' ----
000B E4                CLR     A
000C FF                MOV     R7,A
                                           ; SOURCE LINE # 506
;---- Variable 'maskTemp' assigned to Register 'R6' ----
000D FE                MOV     R6,A
                                           ; SOURCE LINE # 507
000E 900000      R     MOV     DPTR,#indexTemp
0011 04                INC     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 508
0013         ?C0130:
                                           ; SOURCE LINE # 509
                                           ; SOURCE LINE # 510
0013 7401              MOV     A,#01H
0015 C8                XCH     A,R0
0016 EF                MOV     A,R7
0017 C8                XCH     A,R0
0018 08                INC     R0
0019 8002              SJMP    ?C0173
001B         ?C0172:
001B C3                CLR     C
001C 33                RLC     A
001D         ?C0173:
001D D8FC              DJNZ    R0,?C0172
001F FE                MOV     R6,A
0020 900000      R     MOV     DPTR,#indexTemp
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 511
0024 900000      R     MOV     DPTR,#bitMask
0027 E0                MOVX    A,@DPTR
0028 5E                ANL     A,R6
0029 FE                MOV     R6,A
                                           ; SOURCE LINE # 512
002A 6034              JZ      ?C0132
                                           ; SOURCE LINE # 513
                                           ; SOURCE LINE # 514
002C 900000      R     MOV     DPTR,#formerByte
002F E0                MOVX    A,@DPTR
0030 FB                MOV     R3,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 FA                MOV     R2,A
0034 A3                INC     DPTR
0035 E0                MOVX    A,@DPTR
0036 F9                MOV     R1,A
0037 120000      E     LCALL   ?C?CLDPTR
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 34  

003A 5E                ANL     A,R6
003B 900000      R     MOV     DPTR,#writeByte
003E 600E              JZ      ?C0134
                                           ; SOURCE LINE # 515
0040 E0                MOVX    A,@DPTR
0041 FB                MOV     R3,A
0042 A3                INC     DPTR
0043 E0                MOVX    A,@DPTR
0044 FA                MOV     R2,A
0045 A3                INC     DPTR
0046 E0                MOVX    A,@DPTR
0047 F9                MOV     R1,A
0048 120000      E     LCALL   ?C?CLDPTR
004B 4E                ORL     A,R6
004C 800F              SJMP    ?C0203
004E         ?C0134:
                                           ; SOURCE LINE # 517
004E E0                MOVX    A,@DPTR
004F FB                MOV     R3,A
0050 A3                INC     DPTR
0051 E0                MOVX    A,@DPTR
0052 FA                MOV     R2,A
0053 A3                INC     DPTR
0054 E0                MOVX    A,@DPTR
0055 F9                MOV     R1,A
0056 120000      E     LCALL   ?C?CLDPTR
0059 FD                MOV     R5,A
005A EE                MOV     A,R6
005B F4                CPL     A
005C 5D                ANL     A,R5
005D         ?C0203:
005D 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 518
                                           ; SOURCE LINE # 519
0060         ?C0132:
0060 0F                INC     R7
0061 EF                MOV     A,R7
0062 B408AE            CJNE    A,#08H,?C0130
                                           ; SOURCE LINE # 520
0065         ?C0136:
0065 22                RET     
             ; FUNCTION _SetECSpaceAsRO (END)

             ; FUNCTION _Hook_WriteMapECSpace (BEGIN)
                                           ; SOURCE LINE # 526
0000 900000      R     MOV     DPTR,#MapIndex
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 ED                MOV     A,R5
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 527
                                           ; SOURCE LINE # 531
0008 900000      R     MOV     DPTR,#MapIndex
000B E0                MOVX    A,@DPTR
000C FD                MOV     R5,A
000D 7404              MOV     A,#04H
000F C9                XCH     A,R1
0010 ED                MOV     A,R5
0011 C9                XCH     A,R1
0012 900000      R     MOV     DPTR,#Tmp_XPntr
0015 7401              MOV     A,#01H
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 35  

0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 7404              MOV     A,#04H
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D E9                MOV     A,R1
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 532
001F B4A10D            CJNE    A,#0A1H,?C0137
                                           ; SOURCE LINE # 533
                                           ; SOURCE LINE # 534
0022 7FA1              MOV     R7,#0A1H
0024 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 535
0027 900000      R     MOV     DPTR,#data1
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 536
002F         ?C0137:
                                           ; SOURCE LINE # 537
002F 900000      R     MOV     DPTR,#MapIndex
0032 E0                MOVX    A,@DPTR
0033 6443              XRL     A,#043H
0035 7076              JNZ     ?C0138
                                           ; SOURCE LINE # 538
                                           ; SOURCE LINE # 539
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 30E530            JNB     ACC.5,?C0139
003C 900000      E     MOV     DPTR,#pDevStatus1
003F E0                MOVX    A,@DPTR
0040 20E529            JB      ACC.5,?C0139
                                           ; SOURCE LINE # 540
                                           ; SOURCE LINE # 541
0043 7FD2              MOV     R7,#0D2H
0045 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 542
0048 900000      R     MOV     DPTR,#data1
004B E0                MOVX    A,@DPTR
004C FF                MOV     R7,A
004D 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 543
0050 900000      E     MOV     DPTR,#pDevStatus1
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 120000      E     LCALL   _RamDebug
                                           ; SOURCE LINE # 544
0058 900000      E     MOV     DPTR,#pDevStatus1
005B E0                MOVX    A,@DPTR
005C 30E40D            JNB     ACC.4,?C0139
                                           ; SOURCE LINE # 545
                                           ; SOURCE LINE # 546
005F E0                MOVX    A,@DPTR
0060 30E604            JNB     ACC.6,?C0141
                                           ; SOURCE LINE # 547
                                           ; SOURCE LINE # 548
0063 7F3F              MOV     R7,#03FH
                                           ; SOURCE LINE # 549
0065 8002              SJMP    ?C0204
0067         ?C0141:
                                           ; SOURCE LINE # 551
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 36  

                                           ; SOURCE LINE # 552
0067 7F3E              MOV     R7,#03EH
0069         ?C0204:
0069 120000      R     LCALL   _ECQEvent
                                           ; SOURCE LINE # 553
                                           ; SOURCE LINE # 554
                                           ; SOURCE LINE # 555
006C         ?C0139:
                                           ; SOURCE LINE # 556
006C 900000      R     MOV     DPTR,#formerdate_XPntr
006F 7401              MOV     A,#01H
0071 F0                MOVX    @DPTR,A
0072 A3                INC     DPTR
0073 7400        E     MOV     A,#HIGH pDevStatus1
0075 F0                MOVX    @DPTR,A
0076 A3                INC     DPTR
0077 7400        E     MOV     A,#LOW pDevStatus1
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 557
007A A3                INC     DPTR
007B 7401              MOV     A,#01H
007D F0                MOVX    @DPTR,A
007E A3                INC     DPTR
007F 7400        R     MOV     A,#HIGH data1
0081 F0                MOVX    @DPTR,A
0082 A3                INC     DPTR
0083 7400        R     MOV     A,#LOW data1
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 558
0086 900000      R     MOV     DPTR,#writedate_XPntr
0089 E0                MOVX    A,@DPTR
008A F9                MOV     R1,A
008B A3                INC     DPTR
008C E0                MOVX    A,@DPTR
008D FA                MOV     R2,A
008E A3                INC     DPTR
008F E0                MOVX    A,@DPTR
0090 900000      R     MOV     DPTR,#?_SetECSpaceAsRO?BYTE+03H
0093 C9                XCH     A,R1
0094 F0                MOVX    @DPTR,A
0095 A3                INC     DPTR
0096 EA                MOV     A,R2
0097 F0                MOVX    @DPTR,A
0098 A3                INC     DPTR
0099 E9                MOV     A,R1
009A F0                MOVX    @DPTR,A
009B A3                INC     DPTR
009C 745F              MOV     A,#05FH
009E F0                MOVX    @DPTR,A
009F 900000      R     MOV     DPTR,#formerdate_XPntr
00A2 E0                MOVX    A,@DPTR
00A3 FB                MOV     R3,A
00A4 A3                INC     DPTR
00A5 E0                MOVX    A,@DPTR
00A6 FA                MOV     R2,A
00A7 A3                INC     DPTR
00A8 E0                MOVX    A,@DPTR
00A9 F9                MOV     R1,A
00AA 120000      R     LCALL   _SetECSpaceAsRO
                                           ; SOURCE LINE # 559
00AD         ?C0138:
                                           ; SOURCE LINE # 560
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 37  

00AD 900000      R     MOV     DPTR,#data1
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 900000      R     MOV     DPTR,#Tmp_XPntr
00B5 E0                MOVX    A,@DPTR
00B6 FB                MOV     R3,A
00B7 A3                INC     DPTR
00B8 E0                MOVX    A,@DPTR
00B9 FA                MOV     R2,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC F9                MOV     R1,A
00BD EF                MOV     A,R7
00BE 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 561
00C1 120000      E     LCALL   VPC_interface
                                           ; SOURCE LINE # 562
00C4 020000      E     LJMP    ThermalMailBox
             ; FUNCTION _Hook_WriteMapECSpace (END)

             ; FUNCTION _Data_To_PM1_nWait (BEGIN)
                                           ; SOURCE LINE # 566
;---- Variable 'data_byte' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 567
                                           ; SOURCE LINE # 568
0000 120000      E     LCALL   _Data_To_PM1
                                           ; SOURCE LINE # 570
0003 C28E              CLR     TR1
                                           ; SOURCE LINE # 571
0005 C2AB              CLR     ET1
                                           ; SOURCE LINE # 572
0007 00                NOP     
                                           ; SOURCE LINE # 573
0008 00                NOP     
                                           ; SOURCE LINE # 574
0009 00                NOP     
                                           ; SOURCE LINE # 575
000A 00                NOP     
                                           ; SOURCE LINE # 576
000B E4                CLR     A
000C F58D              MOV     TH1,A
                                           ; SOURCE LINE # 577
000E 758B01            MOV     TL1,#01H
                                           ; SOURCE LINE # 578
0011 C28F              CLR     TF1
                                           ; SOURCE LINE # 579
0013 D28E              SETB    TR1
0015         ?C0144:
                                           ; SOURCE LINE # 581
0015 208F0E            JB      TF1,?C0145
                                           ; SOURCE LINE # 582
                                           ; SOURCE LINE # 583
0018 900000      E     MOV     DPTR,#PM1STS
001B E0                MOVX    A,@DPTR
001C 30E007            JNB     ACC.0,?C0145
                                           ; SOURCE LINE # 584
                                           ; SOURCE LINE # 585
                                           ; SOURCE LINE # 586
001F         ?C0146:
                                           ; SOURCE LINE # 588
001F 900000      E     MOV     DPTR,#PM1STS
0022 E0                MOVX    A,@DPTR
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 38  

0023 30E1EF            JNB     ACC.1,?C0144
                                           ; SOURCE LINE # 589
                                           ; SOURCE LINE # 590
                                           ; SOURCE LINE # 591
                                           ; SOURCE LINE # 592
0026         ?C0145:
                                           ; SOURCE LINE # 594
0026 C28E              CLR     TR1
                                           ; SOURCE LINE # 595
0028 C28F              CLR     TF1
                                           ; SOURCE LINE # 596
002A D2AB              SETB    ET1
                                           ; SOURCE LINE # 597
002C 22                RET     
             ; FUNCTION _Data_To_PM1_nWait (END)

             ; FUNCTION _Data2PortDirect (BEGIN)
                                           ; SOURCE LINE # 600
0000 900000      R     MOV     DPTR,#rData
0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 601
                                           ; SOURCE LINE # 602
0005 EF                MOV     A,R7
0006 249E              ADD     A,#09EH
0008 6014              JZ      ?C0151
000A 24FA              ADD     A,#0FAH
000C 6018              JZ      ?C0152
000E 246A              ADD     A,#06AH
0010 601C              JZ      ?C0153
0012 249E              ADD     A,#09EH
0014 7032              JNZ     ?C0154
                                           ; SOURCE LINE # 603
                                           ; SOURCE LINE # 604
0016         ?C0150:
                                           ; SOURCE LINE # 605
0016 900000      R     MOV     DPTR,#rData
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 020000      E     LJMP    _Data_To_Port
                                           ; SOURCE LINE # 606
                                           ; SOURCE LINE # 607
001E         ?C0151:
                                           ; SOURCE LINE # 608
001E 900000      R     MOV     DPTR,#rData
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 020000      E     LJMP    _Data_To_PM1
                                           ; SOURCE LINE # 609
                                           ; SOURCE LINE # 611
0026         ?C0152:
                                           ; SOURCE LINE # 612
0026 900000      R     MOV     DPTR,#rData
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 020000      E     LJMP    _Data_To_PM2
                                           ; SOURCE LINE # 613
                                           ; SOURCE LINE # 614
002E         ?C0153:
                                           ; SOURCE LINE # 615
002E 900000      R     MOV     DPTR,#rData
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 39  

0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 900000      E     MOV     DPTR,#MMIO_rDATA_index
0036 E0                MOVX    A,@DPTR
0037 2400        E     ADD     A,#LOW MMIO_rDATA
0039 F582              MOV     DPL,A
003B E4                CLR     A
003C 3400        E     ADDC    A,#HIGH MMIO_rDATA
003E F583              MOV     DPH,A
0040 EF                MOV     A,R7
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 616
0042 900000      E     MOV     DPTR,#MMIO_rDATA_index
0045 E0                MOVX    A,@DPTR
0046 04                INC     A
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 617
                                           ; SOURCE LINE # 618
                                           ; SOURCE LINE # 619
0048         ?C0154:
0048 22                RET     
             ; FUNCTION _Data2PortDirect (END)

             ; FUNCTION _Data_To_PM2_nWait (BEGIN)
                                           ; SOURCE LINE # 623
;---- Variable 'data_byte' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 624
                                           ; SOURCE LINE # 625
0000 120000      E     LCALL   _Data_To_PM2
                                           ; SOURCE LINE # 627
0003 C28E              CLR     TR1
                                           ; SOURCE LINE # 628
0005 C2AB              CLR     ET1
                                           ; SOURCE LINE # 629
0007 00                NOP     
                                           ; SOURCE LINE # 630
0008 00                NOP     
                                           ; SOURCE LINE # 631
0009 00                NOP     
                                           ; SOURCE LINE # 632
000A 00                NOP     
                                           ; SOURCE LINE # 633
000B E4                CLR     A
000C F58D              MOV     TH1,A
                                           ; SOURCE LINE # 634
000E 758B01            MOV     TL1,#01H
                                           ; SOURCE LINE # 635
0011 C28F              CLR     TF1
                                           ; SOURCE LINE # 636
0013 D28E              SETB    TR1
0015         ?C0155:
                                           ; SOURCE LINE # 638
0015 208F0E            JB      TF1,?C0156
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 640
0018 900000      E     MOV     DPTR,#PM2STS
001B E0                MOVX    A,@DPTR
001C 30E007            JNB     ACC.0,?C0156
                                           ; SOURCE LINE # 641
                                           ; SOURCE LINE # 642
                                           ; SOURCE LINE # 643
001F         ?C0157:
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 40  

                                           ; SOURCE LINE # 644
001F 900000      E     MOV     DPTR,#PM2STS
0022 E0                MOVX    A,@DPTR
0023 30E1EF            JNB     ACC.1,?C0155
                                           ; SOURCE LINE # 645
                                           ; SOURCE LINE # 646
                                           ; SOURCE LINE # 647
                                           ; SOURCE LINE # 648
0026         ?C0156:
                                           ; SOURCE LINE # 650
0026 C28E              CLR     TR1
                                           ; SOURCE LINE # 651
0028 C28F              CLR     TF1
                                           ; SOURCE LINE # 652
002A D2AB              SETB    ET1
                                           ; SOURCE LINE # 653
002C 22                RET     
             ; FUNCTION _Data_To_PM2_nWait (END)

             ; FUNCTION _Data2Port (BEGIN)
                                           ; SOURCE LINE # 657
0000 900000      R     MOV     DPTR,#rData
0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 658
                                           ; SOURCE LINE # 659
0005 EF                MOV     A,R7
0006 249E              ADD     A,#09EH
0008 6014              JZ      ?C0162
000A 24FA              ADD     A,#0FAH
000C 6018              JZ      ?C0163
000E 246A              ADD     A,#06AH
0010 601C              JZ      ?C0164
0012 249E              ADD     A,#09EH
0014 7032              JNZ     ?C0165
                                           ; SOURCE LINE # 660
                                           ; SOURCE LINE # 661
0016         ?C0161:
                                           ; SOURCE LINE # 662
0016 900000      R     MOV     DPTR,#rData
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 020000      E     LJMP    _Data_To_Port_nWait
                                           ; SOURCE LINE # 663
                                           ; SOURCE LINE # 664
001E         ?C0162:
                                           ; SOURCE LINE # 665
001E 900000      R     MOV     DPTR,#rData
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 020000      R     LJMP    _Data_To_PM1_nWait
                                           ; SOURCE LINE # 666
                                           ; SOURCE LINE # 668
0026         ?C0163:
                                           ; SOURCE LINE # 669
0026 900000      R     MOV     DPTR,#rData
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 020000      R     LJMP    _Data_To_PM2_nWait
                                           ; SOURCE LINE # 670
                                           ; SOURCE LINE # 671
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 41  

002E         ?C0164:
                                           ; SOURCE LINE # 672
002E 900000      R     MOV     DPTR,#rData
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 900000      E     MOV     DPTR,#MMIO_rDATA_index
0036 E0                MOVX    A,@DPTR
0037 2400        E     ADD     A,#LOW MMIO_rDATA
0039 F582              MOV     DPL,A
003B E4                CLR     A
003C 3400        E     ADDC    A,#HIGH MMIO_rDATA
003E F583              MOV     DPH,A
0040 EF                MOV     A,R7
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 673
0042 900000      E     MOV     DPTR,#MMIO_rDATA_index
0045 E0                MOVX    A,@DPTR
0046 04                INC     A
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 674
                                           ; SOURCE LINE # 675
                                           ; SOURCE LINE # 676
0048         ?C0165:
0048 22                RET     
             ; FUNCTION _Data2Port (END)

             ; FUNCTION _MultiB2Port (BEGIN)
                                           ; SOURCE LINE # 678
0000 900000      R     MOV     DPTR,#rData
0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
;---- Variable 'nPort' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 679
                                           ; SOURCE LINE # 680
0005 EF                MOV     A,R7
0006 249E              ADD     A,#09EH
0008 6014              JZ      ?C0168
000A 24FA              ADD     A,#0FAH
000C 6018              JZ      ?C0169
000E 246A              ADD     A,#06AH
0010 601C              JZ      ?C0170
0012 249E              ADD     A,#09EH
0014 7032              JNZ     ?C0171
                                           ; SOURCE LINE # 681
                                           ; SOURCE LINE # 682
0016         ?C0167:
                                           ; SOURCE LINE # 683
0016 900000      R     MOV     DPTR,#rData
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 020000      E     LJMP    _Data_To_Port_nWait
                                           ; SOURCE LINE # 684
                                           ; SOURCE LINE # 685
001E         ?C0168:
                                           ; SOURCE LINE # 686
001E 900000      R     MOV     DPTR,#rData
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 020000      R     LJMP    _Data_To_PM1_nWait
                                           ; SOURCE LINE # 687
                                           ; SOURCE LINE # 689
0026         ?C0169:
C51 COMPILER V8.12   OEM_ACPI                                                              09/14/2018 11:08:18 PAGE 42  

                                           ; SOURCE LINE # 690
0026 900000      R     MOV     DPTR,#rData
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 020000      R     LJMP    _Data_To_PM2_nWait
                                           ; SOURCE LINE # 691
                                           ; SOURCE LINE # 692
002E         ?C0170:
                                           ; SOURCE LINE # 693
002E 900000      R     MOV     DPTR,#rData
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
0033 900000      E     MOV     DPTR,#MMIO_rDATA_index
0036 E0                MOVX    A,@DPTR
0037 2400        E     ADD     A,#LOW MMIO_rDATA
0039 F582              MOV     DPL,A
003B E4                CLR     A
003C 3400        E     ADDC    A,#HIGH MMIO_rDATA
003E F583              MOV     DPH,A
0040 EF                MOV     A,R7
0041 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 694
0042 900000      E     MOV     DPTR,#MMIO_rDATA_index
0045 E0                MOVX    A,@DPTR
0046 04                INC     A
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 695
                                           ; SOURCE LINE # 696
                                           ; SOURCE LINE # 697
0048         ?C0171:
0048 22                RET     
             ; FUNCTION _MultiB2Port (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1910    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
